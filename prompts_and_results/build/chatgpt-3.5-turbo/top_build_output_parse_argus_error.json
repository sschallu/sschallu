{"id": "10056582_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-go", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "go build -v", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "go test ./...", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "go build -o app", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "softprops/actions/release", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-release-asset", "version": "v1", "shell": "bash"}]}]}
{"id": "10141640_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install rake\ngem install your_dbdeploy_gem_name # Replace with the actual dbdeploy.net gem name\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rake your_dbdeploy_task_name # Replace with the actual Rake task for dbdeploy\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "101786_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shogo82148/actions/setup-perl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cpanm --installdeps .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "prove -l t/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "perlcritic . --verbose 10", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "10232042_0", "jobs": [{"name": "interact_with_github_and_puppet", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "REPO_NAME=$(basename -s .git `git config --get remote.origin.url`)\necho \"Repository name: $REPO_NAME\"\nOWNER=$(echo \"${GITHUB_REPOSITORY}\" | cut -d \"/\" -f 1)\necho \"Owner: $OWNER\"\ncurl -s -H \"Authorization: token $GITHUB_TOKEN\" \"https://api.github.com/repos/$OWNER/$REPO_NAME\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "puppetlabs/setup-puppet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bolt command run 'echo \"Hello, Puppet!\"' --nodes localhost\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "10242059_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake jasmine:ci\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "10249302_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o ${{github.workspace}}/publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "10278754_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "lukka/get-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -S . -B build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build --parallel ${{ matrix.parallel-evaluations }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build --target test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "10280526_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpunit --coverage-clover=clover.xml", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "10376818_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update && sudo apt-get install -y doxygen graphviz", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd path/to/your/code\ndoxygen Doxyfile\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "10515981_0", "jobs": [{"name": "ios_build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to build iOS app here\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "android_build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to build Android app here\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "blackberry_build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to build BlackBerry app here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "10546885_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build --no-daemon", "name": "", "version": "", "shell": "bash"}]}, {"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew test --no-daemon", "name": "", "version": "", "shell": "bash"}]}, {"name": "sonar", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "10657820_2", "jobs": [{"name": "checkout", "steps": [{"type": "shell_cmd", "cmd": "echo \"::set-output name=content::$(cat input.yml)\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}]}]}
{"id": "10711994_0", "jobs": [{"name": "lock", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "foulou/gha-lock", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands of the job that requires exclusive access to the repository\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "foulou/gha-lock", "version": "v2", "shell": "bash"}]}]}
{"id": "10738624_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install cocoapods\npod install --project-directory=Path/To/Workspace\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace Path/To/Workspace/YourWorkspace.xcworkspace -scheme YourScheme -sdk iphonesimulator -configuration Debug", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "10803469_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec jekyll build", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "easingthemes/ssh-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "11051925_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake db:setup\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake spec\necho \"Coverage report:\"\nbundle exec rake spec:features:coverage:validate\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "11101725_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands here to link your CMS or tool with the GitHub repository\n# Example: git submodule add <CMS/Tool Repository URL>\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit commit -am \"Link CMS/Tool with GitHub\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "11148362_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install lftp -y", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"set ftp:ssl-force true\" >> ~/.lftprc\necho \"set ssl:verify-certificate no\" >> ~/.lftprc\necho \"open -u ${{ secrets.FTP_USERNAME }},${{ secrets.FTP_PASSWORD }} ${{ secrets.FTP_SERVER }}\" >> ~/.lftprc\necho \"mirror -R ./path_to_php_app /remote_path_on_ftp\" >> ~/.lftprc\nlftp -e 'source ~/.lftprc; quit'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "11245424_0", "jobs": [{"name": "pull-file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/scp-action", "version": "master", "shell": "bash"}]}]}
{"id": "11304658_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wget -q https://dl.google.com/android/repository/android-ndk-r21d-linux-x86_64.zip -O android-ndk.zip\nunzip -q android-ndk.zip -d $RUNNER_TOOL_CACHE\nexport ANDROID_NDK_HOME=$RUNNER_TOOL_CACHE/android-ndk-r21d\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd path/to/your/android/project\n./gradlew assembleRelease\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "11344928_0", "jobs": [{"name": "interrupt_and_set_status", "steps": [{"type": "gh_action", "cmd": "", "name": "appleboy/gh-action-shell", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo 'This is the main step and will only run if pre-step was successful'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "11346485_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=${{ matrix.config }} YourSolution.sln", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "11354827_0", "jobs": [{"name": "build-and-test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "action/setup-flex-sdk", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Compile and run your FlexUnit 4 tests here\n# Example command:\nadl path/to/your-app.xml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "11364237_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phing", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1145050_0", "jobs": [{"name": "backup_hudson_ci_files", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p hudson_backup\ncp -r /path/to/hudson/files hudson_backup\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "11561566_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install vlad", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "export VLAD_PATH=\"path/to/your/vladfile.rb\"\nexport SSH_KEY=\"$SSH_PRIVATE_KEY\" # Add your SSH private key as a GitHub secret\n\necho \"$SSH_KEY\" > deploy_key\nchmod 600 deploy_key\n\nvlad deploy production VLAD_PATH=$VLAD_PATH SSH_KEY=deploy_key\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "11599334_0", "jobs": [{"name": "performance-test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -project YourApp.xcodeproj -scheme YourScheme clean build test -destination 'platform=iOS Simulator,name=iPhone 13' | xcpretty\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Run your performance test command here\n# Example: fastlane ios run_performance_tests\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "11683235_0", "jobs": [{"name": "create-project", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update && sudo apt-get install -y subversion", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "svn checkout <SVN_REPO_URL> new_project", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/create-repo", "version": "v1", "shell": "bash"}]}]}
{"id": "11799340_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install git -y", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd $GITHUB_WORKSPACE", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git pull", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -v", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "11827153_0", "jobs": [{"name": "set-permissions", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-batch-task-plugin", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "batch-task-plugin set-permissions --target-repo \"<target-repo>\" --permissions \"<permissions>\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "11832674_0", "jobs": [{"name": "behat", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -h 127.0.0.1 -u root --password=root -e \"CREATE DATABASE IF NOT EXISTS sample_db_test;\"\nphp artisan migrate --env=testing\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/behat", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "11969732_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cxx", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "make clean\nscan-build --status-bugs make\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "1198789_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shogo82148/actions-setup-perl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cpanm --installdeps .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "perl your_script.pl", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12032983_0", "jobs": [{"name": "exclude_subdirectories", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Get list of all directories in the repository\ndirs=$(find . -type d)\n\n# Loop through each directory\nfor dir in $dirs; do\n  if [[ -d \"$dir/.git\" ]]; then\n    # Check if the directory is a Git repository\n    git_check_ignore=$(git check-ignore -q $dir)\n    if [[ -z \"$git_check_ignore\" ]]; then\n      # If not ignored by Git, add it to .gitignore\n      echo $dir >> .gitignore\n    fi\n  fi\ndone\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit diff --staged --quiet || git commit -m \"Exclude Git subdirectories from parent repository using .gitignore\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "12045289_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install --jobs 4 --path $GITHUB_WORKSPACE/.bundles", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake your_task_name_here", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12067640_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B package --file pom.xml", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn exec:java", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn verify -Pintegration-test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": null, "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12078317_0", "jobs": [{"name": "janky_task", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install janky\ngem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "janky", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12101061_0", "jobs": [{"name": "combine_repositories", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v3", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r <path-to-repo2-files> <path-to-repo1-files> # Example operation to merge repository 2 into repository 1\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'GitHub Actions'\ngit config --global user.email 'actions@users.noreply.github.com'\ngit add .\ngit commit -m \"Combine repositories\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "12155401_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.email \"actions@github.com\"\ngit config user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git diff --exit-code || (echo \"Uncommitted changes found. Please commit them before pushing.\" && exit 1)\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build and test commands here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git commit -am \"auto build updates\" || (echo \"No changes to commit\" && exit 0)\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "12248623_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jeroen-de-groot/setup-delphi", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild YourProject.dproj /target:Build /property:Configuration=Debug\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "YourProject.exe -autotest\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1228170_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "msvc-profile/setup-msvc", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=Release YourSolution.sln", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12308849_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android/setup-android", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleDebug", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12317013_0", "jobs": [{"name": "integration-test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "monty5811/rdp-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run integration-test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Stopping VM...\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12407560_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B clean install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-sarif", "version": "v1", "shell": "bash"}]}]}
{"id": "12409546_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -l .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12471469_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-sqltoolsscripter", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your SSAS and SSRS build commands here\n# Example: msbuild YourSolution.sln /p:DeployOnBuild=true /p:Configuration=Release\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your SSAS and SSRS deployment commands here\n# Example: Execute-ASCmd -Server \"YourSSASInstance\" -InputFile \"YourSSASProject.xmla\"\n# Example: rs.exe -i YourSSRSProject.rss /s http://YourSSRSInstance/ReportServer\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to generate deployment report or notifications\n# Example: echo \"SSAS and SSRS deployment completed successfully.\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12487292_0", "jobs": [{"name": "release", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker://semanticrelease/cli", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-env name=NEW_VERSION::$(node -p \"require('./package.json').version\")\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git commit -am \"Update version to $NEW_VERSION\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "12526851_0", "jobs": [{"name": "rspec", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12639159_0", "jobs": [{"name": "encrypt_values", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.SENSITIVE_VALUE }}\" > sensitive_value.txt", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "chp-labs/githubsecrets", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"ENCRYPTED_SECRET=${{ steps.enc.outputs.secret }}\" >> $GITHUB_ENV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo $ENCRYPTED_SECRET", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1274226_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "matleonard/myeclipse-setup", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your custom CI tasks here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12755268_0", "jobs": [{"name": "php-check", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12756002_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "version=$(date +%Y.%m.%d)-$(echo $GITHUB_RUN_ID)\nsed -i \"s/AssemblyVersion(\\\"[^\\\"]*\\\")/AssemblyVersion(\\\"$version\\\")/g\" VersionInfo.cs\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit commit -am \"Update version number\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "12781627_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake db:create\nbundle exec rake db:migrate\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ssh user@your-server 'cd /path/to/your/rails/app && git pull origin main && bundle install && bundle exec rake db:migrate && touch tmp/restart.txt'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12790781_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o ${{github.workspace}}/publish", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "12799719_0", "jobs": [{"name": "upload_project", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git commit -m \"Auto commit by GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "12817011_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -project YourProject.xcodeproj -scheme YourScheme clean build test CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -project YourProject.xcodeproj -scheme YourScheme archive -archivePath build/YourProject.xcarchive", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12910631_0", "jobs": [{"name": "push_changes", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git rm path/to/file1 path/to/file2\ngit commit -m \"Remove files using git rm\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "12959349_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add the command to rename files using MsBuild\n# For example, you can use a custom MsBuild script to rename files\n# Edit the below command with your specific renaming logic\nmsbuild /t:RenameFiles /p:SourceFolder=\"path/to/source/folder\" /p:TargetFolder=\"path/to/target/folder\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Batch rename files\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "1299063_0", "jobs": [{"name": "redeploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build\ndotnet publish -c Release -o build-artifacts\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dbrakeman/sqlserver-ssdt-extension-action", "version": "v1", "shell": "bash"}]}]}
{"id": "13040718_0", "jobs": [{"name": "rspec", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13075890_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "javac HelloWorld.java", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "java HelloWorld\nexit_code=$?\necho \"::set-output name=exit_code::$exit_code\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "exit ${{ steps.modify-exit-code.outputs.exit_code }}", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13078033_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -project YourProject.xcodeproj -scheme YourScheme -configuration Release CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO -allowProvisioningUpdates", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13096825_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install cocoapods", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "make build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourWorkspace.xcworkspace -scheme YourScheme -configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p ${{ github.workspace }}/build\ncp -R build/ ${{ github.workspace }}/build/\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "13174433_0", "jobs": [{"name": "trigger_build", "steps": [{"type": "gh_action", "cmd": "", "name": "cloudbees/github-action", "version": "main", "shell": "bash"}]}]}
{"id": "13250846_0", "jobs": [{"name": "version_increment", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet tool install -g GitVersion.Tool", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gitversion", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gitversion /updateassemblyinfo", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Increment version number [skip ci]\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v1", "shell": "bash"}]}]}
{"id": "13268577_0", "jobs": [{"name": "build-and-deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish {path to your project file} -c Release -o $(Build.ArtifactStagingDirectory)", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "13277585_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build -c Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet pack -c Release", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nuget/publish", "version": "1", "shell": "bash"}]}]}
{"id": "13359403_0", "jobs": [{"name": "publish", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Sepich/github-actions-publish-cifs", "version": "v2", "shell": "bash"}]}]}
{"id": "13369597_0", "jobs": [{"name": "check-naming", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "input_label_errors=0\ninput_label_errors=$(grep -r -i --include=*.php \"Form Helper\" src | wc -l)\ninput_label_errors=$(($input_label_errors + $(grep -r -i --include=*.php \"Form Validation Class\" src | wc -l)))\nif [ $input_label_errors -gt 0 ]; then\n  echo \"Error: Input label naming inconsistency found. Please ensure the input label is named consistently.\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13372566_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Install any dependencies like CocoaPods, Carthage, etc.\n# This step is important if your project uses external libraries\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add custom script commands here to modify library search paths\n# For example, you may need to update the framework search paths or library paths for the project\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourWorkspace.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' clean test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13413818_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rad-studio/ubuntu-delphi:xe2", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild MyProject.dproj /p:config=Release\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1353179_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "shogo82148/actions-setup-perl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "perl -W your_script.pl", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13545018_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"New content\" > path/to/your/file.ext", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Overwrite file\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "1355383_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install -g browserstack-runner\nbrowserstack-runner config\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "browserstack-runner run", "name": "", "version": "", "shell": "bash"}]}, {"name": "notify", "steps": [{"type": "gh_action", "cmd": "", "name": "rtCamp/action-slack-notify", "version": "v2", "shell": "bash"}]}]}
{"id": "13573708_0", "jobs": [{"name": "git-pull-repositories", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ruby pull_repositories.rb", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1358939_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nbundle exec pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourWorkspaceName.xcworkspace -scheme YourSchemeName clean build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13592348_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13701517_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/ftp-action", "version": "v2", "shell": "bash"}]}]}
{"id": "1374441_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem build your_gem.gemspec\ngem push your_gem-*.gem\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13797440_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "gexperts/setup-delphi", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild YourProjectFile.dproj\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13803550_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\nmake\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13807489_0", "jobs": [{"name": "acceptance_tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nanoboxio/setup-chrome", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wget https://selenium-release.storage.googleapis.com/3.141/selenium-server-standalone-3.141.59.jar\njava -jar selenium-server-standalone-3.141.59.jar\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn test -Dtest=YourTestClassName\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13888104_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "bitrise-io/hockeyapp-deploy", "version": "v1", "shell": "bash"}]}]}
{"id": "14009010_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "lukka/get-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -S . -B build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build --target test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14110639_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\nyarn install --frozen-lockfile\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails db:migrate RAILS_ENV=test\nbundle exec rspec\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rubocop\nyarn run lint\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "release", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\nbundle exec rake release\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14115108_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build --config ${{ matrix.build_type }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ctest -C ${{ matrix.build_type }}", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1411641_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "notify", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v3", "shell": "bash"}]}]}
{"id": "14168291_0", "jobs": [{"name": "merge-fork-commits", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"github-actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add forks as remotes\ngit remote add fork1 https://github.com/fork1/repo.git\ngit remote add fork2 https://github.com/fork2/repo.git\n# Fetch commits from forks\ngit fetch fork1\ngit fetch fork2\n# Merge commits from forks to main\ngit merge fork1/main --no-edit\ngit merge fork2/main --no-edit\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git push origin main\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14194509_0", "jobs": [{"name": "syntax_check", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "find . -name '*.php' -print0 | xargs -0 -n 1 php -l", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14262627_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > deploy_key && chmod 600 deploy_key", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ssh -i deploy_key $USERNAME@$SERVER_ADDRESS 'cd /path/to/your/website && git pull'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14410567_0", "jobs": [{"name": "tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"copy('.env.default', '.env');\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit --coverage-html coverage", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "14422840_0", "jobs": [{"name": "update-libraries", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install --save\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add any commands needed to update or check JavaScript libraries\n# For example, you could use a tool like npm-check-updates:\nnpx npm-check-updates -u\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"github-actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"chore: Update JavaScript libraries\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "14425550_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ssmc/selenium", "version": "3.11.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn test -P gui-tests", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "144274_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpcs --standard=PSR12 src/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpstan analyse src/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php tests/integration.php", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require phpunit/phpcov\nvendor/bin/phpunit --coverage-php build/logs/clover.cov\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "analyze", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Cix85/phpmetrics-action", "version": "v1", "shell": "bash"}]}]}
{"id": "14485983_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "find . -type f \\( -iname \"*.twig\" -o -iname \"*.html\" \\) -exec echo \"Checking {}\" \\; -exec php -l {} \\;\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14507958_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleRelease", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "r0adkll/upload-google-play", "version": "v1", "shell": "bash"}]}]}
{"id": "145586_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "lukka/rotate-secrets", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install -y build-essential cmake", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -S . -B build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build", "name": "", "version": "", "shell": "bash"}]}, {"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "lukka/rotate-secrets", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install -y build-essential cmake", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -S . -B build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ctest --test-dir build", "name": "", "version": "", "shell": "bash"}]}, {"name": "coverage", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "lukka/rotate-secrets", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install -y build-essential cmake lcov", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -S . -B build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ctest --test-dir build --extra-arg=--coverage\nlcov --directory build --capture --output-file coverage.info\nlcov --remove coverage.info '/usr/*' --output-file coverage.info\nlcov --list coverage.info\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "14573910_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install subversion", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "svn export [SVN_URL] ./deployed_script", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Deploy script from SVN\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "1458800_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nathanpeck/setup-nant", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Insert your build commands here\n# Example:\n# ccnet.exe your-cruisecontrol-config-file.config\n# nant build\n# msbuild your-project.csproj\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Insert your copy command here\n# Example:\n# cp -R path/to/artifacts/ path/to/destination/\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1461849_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/vssetup-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /t:build /p:Configuration=Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"$SVN_REVISION\" > revision.txt", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14634794_0", "jobs": [{"name": "check-windows-login-status", "steps": [{"type": "gh_action", "cmd": "", "name": "apple/actions/setup-windows-login-status", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"A user is logged into Windows. Suspending GitHub Actions runs.\"\nexit 1\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"No user is logged into Windows. GitHub Actions can continue running normally.\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14654300_0", "jobs": [{"name": "push_file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp path/to/your/file file_name\ngit config --global user.email \"actions@users.noreply.github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add file_name\ngit commit -m \"Add file via GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/push-subdir-to-another-repository", "version": "v1", "shell": "bash"}]}]}
{"id": "1467257_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build YourProjectName.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish YourProjectName.csproj -c Release -o ./publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "SamKirkland/FTP-Deploy-Action", "version": "2.1.3", "shell": "bash"}]}]}
{"id": "14699537_0", "jobs": [{"name": "upload", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir shared_folder", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp path/to/files/* shared_folder/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'GitHub Actions'\ngit config --global user.email 'actions@github.com'\ngit add shared_folder/\ngit commit -m \"Upload files to shared folder\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "14765725_0", "jobs": [{"name": "release", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem bump --version minor\ngit add .\ngit commit -m \"Bump gem version\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem build your_gem.gemspec\ngem push your_gem-*.gem --key your_rubygems_api_key --host https://rubygems.org\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14776321_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python -m pip install --upgrade pip\npip install -r requirements.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "khmarbaise/maven-setup", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python manage.py collectstatic --noinput\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python manage.py migrate\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to restart your Django server here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14883799_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "shimataro/socks-setup-action", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global http.proxy \"socks5h://${{ secrets.SOCKS_PROXY_HOST }}:${{ secrets.SOCKS_PROXY_PORT }}\"\ngit config --global https.proxy \"socks5h://${{ secrets.SOCKS_PROXY_HOST }}:${{ secrets.SOCKS_PROXY_PORT }}\"\ngit config --global url.\"git://\".insteadOf \"socks5h://${{ secrets.SOCKS_PROXY_HOST }}:${{ secrets.SOCKS_PROXY_PORT }}\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global --unset http.proxy\ngit config --global --unset https.proxy\ngit config --global --unset url.\"git://\".insteadOf\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14894367_0", "jobs": [{"name": "sync_externals", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "eriol/checkout-svn", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd path/to/external/directory\nsvn propget svn:externals . > externals.txt\nawk '{print $2}' externals.txt | sed 's/\\^.*\\///' | xargs -n 1 -I{} svn checkout https://github.com/${{ github.repository }}/trunk/{} {}\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Sync GitHub externals from ${{ github.repository }}\"\ngit push origin master\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14913586_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Include your deployment commands here to deploy the project and embed Grocery CRUD inside another view\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14949480_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chmod +x gradlew", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "reactivecircus/android-emulator-runner", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew connectedAndroidTest", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14958517_0", "jobs": [{"name": "build-and-test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean install -B", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "zajacmp/jboss-eap7-standalone", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp target/your-app.war $JBOSS_HOME/standalone/deployments/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn verify -Pjboss", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add TFS integration scripts/commands here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "15010016_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "andstor/setup-nant", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nant build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Deploying artifact to Archiva...\"\n# Run your commands to deploy the artifact to Archiva using NAnt commands\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rm -rf path/to/artifact", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "15113090_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "olafurpg/setup-scala", "version": "v11", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sbt sbtVersion", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sbt compile", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jordiollero/setup-eclipse", "version": "0.0.1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -f /path/to/project/pom.xml clean validate eclipse:clean eclipse:eclipse", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -f /path/to/project/pom.xml clean install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -f /path/to/project/pom.xml eclipse:clean eclipse:eclipse", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "15153708_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleRelease", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "r0adkll/upload-google-play", "version": "v1", "shell": "bash"}]}]}
{"id": "15206830_0", "jobs": [{"name": "sandbox-file-transfer", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install cocoapods\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Place your custom script commands here to upload files to the iOS device sandbox\n# Example: xcrun simctl addMedia <device-uuid> /path/to/local/file /path/to/device/sandbox\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Place your custom script commands here to download files from the iOS device sandbox\n# Example: xcrun simctl pull <device-uuid> /path/from/device/sandbox /path/to/local/directory\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "15233093_0", "jobs": [{"name": "behat", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp .env.example .env", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan migrate --seed", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/behat", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "15257652_0", "jobs": [{"name": "git-plugin", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"your_email@example.com\"\ngit config --global user.name \"Your Name\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mli/gdc", "version": "v1", "shell": "bash"}]}]}
{"id": "15332959_0", "jobs": [{"name": "deleteAndStageChanges", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git rm path/to/file\ngit config --global user.email \"github-actions[bot]@users.noreply.github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit commit -m \"Delete file using git rm\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add -u\ngit commit -m \"Stage changes using git add -u\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "1545309_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "find . -type d -empty -exec mkdir -p ../temp/{} \\;\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "find . -type f -exec cp --parents {} ../temp/ \\;\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "montudor/action-zip", "version": "v0.1.0", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "15509677_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails generate shoulda:install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec <YOUR_TEST_COMMAND>", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "15643191_0", "jobs": [{"name": "ant_build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "your-username/ant-action", "version": null, "shell": "bash"}]}]}
{"id": "15819946_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake db:create db:schema:load RAILS_ENV=test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake test TESTOPTS=\"--ci-reporter\" TESTFILE=./custom_minitest_runner.rb", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "15844472_0", "jobs": [{"name": "pod-update", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install cocoapods", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod update", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "15964964_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "browserstack/action-connect", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run test:browserstack", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "browserstack/action-connect", "version": "v1", "shell": "bash"}]}]}
{"id": "16016571_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-scala", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sbt test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1607682_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "export RAILS_ENV=production\nbundle exec cruise start\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "16096590_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "arduino/arduino-cli-action", "version": "v0.3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Install any dependencies for your project here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to compile your firmware\narduino-cli compile --fqbn esp8266:esp8266:generic\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Set up any testing environments or requirements here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to run tests for your embedded project\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to deploy your firmware to the target device\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "16211147_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install -y build-essential\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\nmake\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd build\nctest\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "16229269_0", "jobs": [{"name": "restore-file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Replace 'path/to/your/file' with the actual path to the file you want to restore\ngit checkout HEAD^ path/to/your/file\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n\ngit add path/to/your/file\ngit commit -m \"Restore single file\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "16244738_0", "jobs": [{"name": "unit_testing", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "16366517_0", "jobs": [{"name": "phpcs", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpcs --standard=path/to/your/ruleset.xml .", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "16440059_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "16542134_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "16570781_0", "jobs": [{"name": "reverse_bundle_install", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundler install --without env --deployment --quiet", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "16596614_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Store the xcrun command with single quotes in a variable\nXCRUN_CMD='xcrun simctl list devices | grep -e \"iPhone XR\"'\n\n# Execute the xcrun command using eval to handle single quotes\neval $XCRUN_CMD\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1685111_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nbundle exec rake db:create\nbundle exec rake db:schema:load\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rubocop", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "16898867_0", "jobs": [{"name": "nodejs", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm build", "name": "", "version": "", "shell": "bash"}]}, {"name": "android", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleDebug", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "16947246_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/setup-perl", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cpanm --installdeps .\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "perl build_script.pl > build_output.log", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "16993234_0", "jobs": [{"name": "split_and_track_changes", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Clone the repository to be split\ngit clone https://github.com/username/repository-to-split.git temp-repo\ncd temp-repo\n\n# Split the repository (example splitting the 'src' folder)\ngit subtree split -P src -b split-branch\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout split-branch", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "EndBug/add-and-commit", "version": "v7", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "17026405_0", "jobs": [{"name": "unit-test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-interaction --optimize-autoloader", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"CREATE DATABASE test_db;\" | mysql -h127.0.0.1 -uroot -proot", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit path/to/twig/template/tests", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17033692_0", "jobs": [{"name": "merge-conflict-resolution", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git merge origin/main", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n\ngit checkout --ours .\ngit add .\ngit commit -m \"Auto resolve merge conflicts\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "17092599_0", "jobs": [{"name": "jmeter_performance_test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./path/to/your/jmeter/bin/jmeter -n -t /path/to/your/jmeter/testplan.jmx -l testresults.jtl\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "blaze-meter/upload-to-blazemeter", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your custom script here to analyze JMeter test results\n# You can set criteria to pass/fail the build based on the performance\n\n# Example: If average response time is below 500ms, consider build successful\nif [average response time condition]; then\n  echo \"Performance tests passed successfully!\"\nelse\n  echo \"Performance tests failed - check results for optimization\"\n  exit 1\nfi\n\n# Example: Post a comment or set a status to GitHub PR based on performance rank\n# Comment/Status can be set based on various metrics like response time, throughput, errors, etc.\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17126099_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp sites/default/default.settings.php sites/default/settings.php\nphp -r \"copy('https://ftp.drupal.org/files/projects/drupal-7.77.tar.gz', 'drupal.tar.gz');\"\ntar -xzf drupal.tar.gz --strip-components=1\nmv drupal/* .\nmv drupal/.htaccess .\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -u root -ppassword -e \"CREATE DATABASE IF NOT EXISTS drupal;\"\ncp sites/default/default.settings.php sites/default/settings.php\nchmod a+w sites/default/settings.php\nmkdir -p sites/default/files\nchmod a+w sites/default/files\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php core/scripts/run-tests.sh --url http://localhost --color", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpcs web/modules custom --standard=Drupal --extensions=php,module,inc,install,test --report=full", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17154584_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/mssql-scripter-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Replace <path_to_change_scripts> with the path to your change scripts\ncd <path_to_change_scripts>\n# Execute the SQL change scripts using sqlcmd or any other tool you prefer\nsqlcmd -S ${{ secrets.MSSQL_SERVER }} -U ${{ secrets.MSSQL_USERNAME }} -P ${{ secrets.MSSQL_PASSWORD }} -d <database_name> -i script1.sql\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1715989_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cpp", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build . --config ${{ matrix.config }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Check for compiler error code returned after build\nif [ $? -ne 0 ]; then\n  echo \"Compile errors found in ${{ matrix.config }}\" && exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17170063_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/setup-clang", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "scan-build make\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "scan-build --status-bugs\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=unstable::true\"", "name": "", "version": "", "shell": "bash"}]}, {"name": "notify", "steps": [{"type": "shell_cmd", "cmd": "echo \"Build marked as unstable due to new bugs found by Clang Static Analyzer\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17201345_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install\nnpm install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails assets:precompile\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Assuming you have configured CloudBees CLI and logged in\ncbt deploy -A <account> -a <app-name> -e <environment> . -s\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17277871_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "find . -name '*.php' -exec php -l {} \\;", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17302693_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd path/to/your/project\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean build test -workspace YourApp.xcworkspace -scheme YourApp -destination 'platform=iOS Simulator,name=iPhone 12' CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO ONLY_ACTIVE_ARCH=NO\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -workspace YourApp.xcworkspace -scheme YourApp -destination 'generic/platform=iOS' -archivePath $PWD/build/YourApp\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath $PWD/build/YourApp.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath $PWD/build/export\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "17327727_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/parallel-forks", "version": "v2", "shell": "bash"}]}]}
{"id": "17371665_0", "jobs": [{"name": "email_script_contents", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=contents::$(<path_to_jelly_script_file)\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v3", "shell": "bash"}]}]}
{"id": "17405128_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails assets:precompile\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl https://cli-assets.heroku.com/install-ubuntu.sh | sh\nheroku git:remote -a YOUR_HEROKU_APP_NAME\ngit config user.email \"you@example.com\"\ngit config user.name \"GitHub Actions\"\ngit push heroku main\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17414469_0", "jobs": [{"name": "run_behat_tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/behat --format=progress features/jira_issues.feature --tags='@jira'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17457842_0", "jobs": [{"name": "behat-tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Copying Behat configuration for ${{ matrix.environment }} environment\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/behat -p ${{ matrix.environment }}", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17505535_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd java-program-directory\njavac Main.java\njava Main\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd objective-c-program-directory\nclang -framework Foundation main.m -o main\n./main\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17542866_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to build and package your slave code here\n# For example, compiling and archiving your slave build\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/scp-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rm -rf ./slave-build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17634760_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer global require phing/phing", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "~/.composer/vendor/bin/phing deploy", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17650397_0", "jobs": [{"name": "phpcs", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-interaction --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpcs --standard=PSR12 --report=checkstyle --report-file=checkstyle.xml .", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "17674028_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jenkinsci/gerrit-trigger-plugin", "version": "3.1.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -d \"message=Build triggered successfully by GitHub Actions\" \\\n     -u ${{ secrets.GERRIT_USERNAME }}:${{ secrets.GERRIT_PASSWORD }} \\\n     https://your-gerrit-server.com/a/changes/$CHANGE_NUMBER/revisions/$PATCHSET_NUMBER/review\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17677137_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Code to setup Nexus Repository Manager\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Code to setup SVN\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "eskatos/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Code to setup Ant\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Code to build and test your project\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17678306_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -S localhost:8000 -t ./your-php-directory &", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sleep 3", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install -g http-server", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "http-server ./your-php-directory -p 8080 &", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sleep 3", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install puppeteer", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "node display-loading.js", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17710097_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nuget/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild YourSolution.sln /t:Rebuild", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17738234_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle config path vendor/bundle\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake generate", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "17867467_0", "jobs": [{"name": "behat", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/behat --config behat.yml --profile=my_profile", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1789316_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shirshakbhattarai/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /t:Build,Package /p:Configuration=Release /p:Platform=\"Any CPU\" /p:OutputPath=WebApp.publish WebApp.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Publish-WindowsService.ps1", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to deploy to TFS 2010 here\n# For example, you can use tf command line utility or PowerShell script to deploy\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Remove-Item -Path WebApp.publish -Recurse", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17972053_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/behat --tags=@tag1", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/behat --tags=@tag2", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/behat --tags=@tag3", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1797828_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "andreysaksonov/setup-nant", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nant", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gallio.exe /r:MBUnit /v:Verbose Output.dll", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17992081_0", "jobs": [{"name": "phpunit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "18033691_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git submodule update --init", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rm -rf tmp_submodule_contents\nmkdir tmp_submodule_contents\ncp -r path/to/submodule/* tmp_submodule_contents\ncat tmp_submodule_contents/* > extracted_content.txt\nrm -rf tmp_submodule_contents\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@users.noreply.github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add extracted_content.txt\ngit commit -m \"Extracted content from submodule\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "18059642_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install bundler\nbundle install\nbundle exec pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourApp.xcworkspace -scheme YourApp -destination 'platform=iOS Simulator,name=iPhone 11' | xcpretty", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "18106353_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir centralized_assets\n# Add commands here to collect software assets from different sources\n# For example:\n# cp /path/to/source/asset1 centralized_assets/\n# curl -o centralized_assets/asset2 https://example.com/asset2\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add centralized_assets\ngit commit -m \"Centralize software assets\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "18257630_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec jekyll build\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "18281164_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build command here\n# e.g., ./build_script.sh\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "18322205_0", "jobs": [{"name": "refactor", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rubocop # Run RuboCop for code style checking\nbundle exec rubocop -a # Auto-correct RuboCop offenses\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install rails_best_practices\nrails_best_practices . -g # Analyze and refactor code using Rails Best Practices\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'GitHub Actions'\ngit config --global user.email 'actions@github.com'\ngit add .\ngit commit -m 'Auto refactoring by GitHub Actions'\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "18354430_0", "jobs": [{"name": "check_version", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "version=$(gcloud app versions list --format='value(version.id)' --service=your-service)\nif [[ $version == \"your-version\" ]]; then\n  echo \"App Engine version already exists\"\nelse\n  echo \"App Engine version does not exist\"\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "18430945_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "warthog618/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=Release", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install -g replace-in-file", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "replace-in-file --regex --search \"YOUR_VARIABLE_NAME\" --replace ${{ secrets.YOUR_SECRET_VARIABLE }} path/to/yourfile.html", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "18457796_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nuget/setup-nuget", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nuget restore YourSolution.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add path/to/nuget/packages\ngit commit -m \"Add NuGet packages to TFS\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "18527511_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpunit tests/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "scp -r ./ user@server:/path/to/deployment/directory\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "18540263_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "EnricoMi/junit-attachments-action", "version": "v2", "shell": "bash"}]}]}
{"id": "18576326_0", "jobs": [{"name": "update_domain", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"your-custom-domain.com\" > CNAME", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"YOUR_EMAIL_ADDRESS\"\ngit config --local user.name \"YOUR_GITHUB_USERNAME\"\ngit add .\ngit commit -m \"Update CNAME file with custom domain\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "18708856_0", "jobs": [{"name": "close-merged-pr", "steps": [{"type": "shell_cmd", "cmd": "echo \"::set-output name=is_merged::$(jq '.pull_request.merged' $GITHUB_EVENT_PATH)\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "18734154_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -NV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane spaceship authenticate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane pilot upload", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "18820117_0", "jobs": [{"name": "reinstall_ubuntu", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rlespinasse/create-vm-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Your script to install Ubuntu goes here\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Ubuntu reinstallation successful!\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Ubuntu reinstallation failed!\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1890228_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud app deploy --quiet", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "18905805_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nphp composer-setup.php\nphp -r \"unlink('composer-setup.php');\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer validate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "18912960_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "shell_cmd", "cmd": "echo \"Deploying the PHP project...\"\n# Add your deployment commands here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "18948424_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "pkobrien/sonarqube-scanner-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands here to build your C project\n# For example:\n# make\n# sonar-scanner\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19031858_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourWorkspace.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11' | xcpretty -c", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -workspace YourWorkspace.xcworkspace -scheme YourScheme -destination 'generic/platform=iOS' -archivePath build/YourScheme.xcarchive", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath build/YourScheme.xcarchive -exportPath build -exportOptionsPlist ExportOptions.plist", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -v '~> 2.0'", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane pilot distribute -f \"build/YourScheme.ipa\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19033601_0", "jobs": [{"name": "code-review", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b new-branch && git push origin new-branch", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "softprops/action-approve", "version": "v1", "shell": "bash"}]}]}
{"id": "19068182_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jurplel/setup-qt", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "qmake your_project.pro", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "make", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "make test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19110730_0", "jobs": [{"name": "ios_release_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -workspace YourApp.xcworkspace -scheme YourScheme -archivePath build/YourApp\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "devbotsxyz/appstoreconnect-upload", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Successfully uploaded to App Store Connect\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19115949_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir deploy\nrobocopy /MIR src_dir deploy_dir\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easingthemes/deploy-gh-pages", "version": "v3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rmdir /S /Q deploy\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19137424_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "puppet/setup-puppet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "puppet module install puppetlabs-stdlib --version '>= 4.17.0' --ignore-dependencies\npuppet module install puppetlabs-concat --version '>= 6.3.0' --ignore-dependencies\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "puppet apply /path/to/your/manifest.pp\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"github-actions[bot]@users.noreply.github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Apply Puppet manifest changes\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "19200017_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19210088_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=vars::$(cat path/to/variables.yml)\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install jekyll bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ steps.load_vars.outputs.vars }}\" > _config_vars.yml\nbundle exec jekyll build --config _config.yml,_config_vars.yml\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Update Jekyll site with variables\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19221224_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rsync -av --delete --exclude-from='.rsyncignore' ./ /path/to/wordpress/repo\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1922587_0", "jobs": [{"name": "sync", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ovotech/svn", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "svn up", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "SamKirkland/FTP-Deploy-Action", "version": "3.1.1", "shell": "bash"}]}]}
{"id": "19244854_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install -y dpkg-dev apt-transport-https gnupg2\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Replace this with your Debian package building commands\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Add Debian packages\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "19257524_0", "jobs": [{"name": "setup_xcode_project", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -resolvePackageDependencies\nxcodebuild -create-xcframework\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"\ngit remote add origin your_repository_url.git\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Setup Xcode project\"\ngit push -u origin main\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19307890_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Tiny variation\" >> tiny_variation.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"github-actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add tiny_variation.txt\ngit commit -m \"Add tiny variation\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "19335688_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Xvfb :99 -screen 0 1024x768x16 > /dev/null 2>&1 &", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpunit tests/SeleniumTest.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1937388_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "adamhjk/svndig", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/github-script", "version": "0.9.0", "shell": "bash"}]}]}
{"id": "19452586_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ortussolutions/commandbox-cfml-installer", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "box install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "box testbox run", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19481138_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php index.php update_first_page\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'GitHub Actions'\ngit config --global user.email 'actions@github.com'\ngit commit -am \"Mark all pages as first page\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v0.5.3", "shell": "bash"}]}]}
{"id": "19499816_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean test -project YourProject.xcodeproj -scheme YourScheme -destination \"platform=iOS Simulator,OS=latest,name=iPhone 11\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19513126_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Deploying to production...\"\necho \"Environment variable 1: $ENV_VAR_1\"\necho \"Environment variable 2: $ENV_VAR_2\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19555107_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -scheme YourScheme -archivePath build/YourApp.xcarchive", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -NV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "openssl aes-256-cbc -K ${{ secrets.ENCRYPTION_KEY }} -iv ${{ secrets.ENCRYPTION_IV }} -in credentials/AppleCredentials.enc -out credentials/AppleCredentials -d", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane build_and_sign", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane upload_to_testflight", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19576552_0", "jobs": [{"name": "add-folder", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir my-folder", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Copy or move files to the 'my-folder' directory\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Add new folder and files\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "19605752_0", "jobs": [{"name": "netrc-auth-job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ilhakurt/netrc-auth-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Your HTTP-authenticated command goes here\n# For example: curl <your-protected-url>\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19607894_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install cocoapods\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourProjectWorkspace.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11' test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19614951_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Install any dependencies needed\n# For example, you can use CocoaPods\n# /usr/bin/gem install cocoapods\n# pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourWorkspace.xcworkspace -scheme YourScheme -sdk iphonesimulator clean build test | xcpretty\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -workspace YourWorkspace.xcworkspace -scheme YourScheme | xcpretty\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19628512_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourProjectScheme -workspace YourProject.xcworkspace -destination 'platform=iOS Simulator,name=iPhone 11' build test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19669913_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -resolvePackageDependencies\nxcodebuild -fetchIfNeeded\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -project YourProject.xcodeproj -scheme YourScheme build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19737264_0", "jobs": [{"name": "composer-install", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nphp composer-setup.php\nphp -r \"unlink('composer-setup.php');\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php composer.phar install", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19764964_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-dev --optimize-autoloader", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rsync -avz --delete $GITHUB_WORKSPACE/ user@your-server-ip:/path/to/deploy\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19769732_0", "jobs": [{"name": "xcode5_coverage", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "brew install lcov\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' -enableCodeCoverage YES\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "slather coverage --html\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "19773928_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "brew update\nbrew install swiftlint\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean test -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11' CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "swiftlint", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19833169_0", "jobs": [{"name": "build-and-deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "redhat-actions/oc-login", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "oc project your-project-name\noc apply -f path/to/your/deployment.yaml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19845679_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\n# For demonstration, let's say it's a simple build process\necho \"Building project...\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "19926329_0", "jobs": [{"name": "overwrite_repo", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rm -rf target-repo\nmv <source-repo-folder> target-repo\ncd target-repo\ngit init\ngit add .\ngit commit -m \"Overwrite target repository\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "19926738_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build\nVERSION=$(date +%Y%m%d%H%M%S)\necho \"Version: $VERSION\" >> version.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add version.txt\ngit commit -m \"Update version for deployment\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "JamesIves/github-pages-deploy-action", "version": "4.1.5", "shell": "bash"}]}]}
{"id": "19930113_0", "jobs": [{"name": "phpunit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./vendor/bin/phpunit --configuration phpunit.xml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19948879_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/scp-action", "version": "master", "shell": "bash"}]}]}
{"id": "19961854_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle config set --local path '.bundle'\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme <YourScheme> -destination 'platform=iOS Simulator,OS=15.0,name=iPhone 13' test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcrun llvm-cov show -instr-profile <path/to/code_coverage.profdata> <path/to/your/application> -output-dir <path/to/output/directory> -format=html\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19974184_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build && npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/scp-action", "version": "master", "shell": "bash"}]}]}
{"id": "1998589_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phing", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "20030247_0", "jobs": [{"name": "clone_and_copy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/scp-action", "version": "master", "shell": "bash"}]}]}
{"id": "20105643_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild build -scheme YourScheme\nxcodebuild test -scheme YourScheme\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -scheme YourScheme -archivePath 'build/YourApp.xcarchive'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "20117354_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "<reusable-actions-repo>/<action-name>", "version": "<tag>", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "<reusable-actions-repo>/<action-name>", "version": "<tag>", "shell": "bash"}]}]}
{"id": "20143989_0", "jobs": [{"name": "remote-test", "steps": [{"type": "gh_action", "cmd": "", "name": "appleboy/scp-action", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/ssh-action", "version": "master", "shell": "bash"}]}]}
{"id": "20166017_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean build test -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "20184577_0", "jobs": [{"name": "tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "20192806_0", "jobs": [{"name": "commit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "MSBuild.exe /t:Rebuild", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"githubactions@example.com\"\ngit config --global user.name \"github-actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Auto-commit after building project\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "20328747_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -B build\ncmake --build build\ncd build\n./runTests --result-xml=TestResults.xml\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "udp/analyze-junit-test-duration", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "2047159_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ilammy/setup-vc2005-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "devenv YourSolution.sln /build Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "devenv YourSolution.sln /build Release /run Tests", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "20488174_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -arch i386 -project YourProject.xcodeproj -scheme YourScheme build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "2065982_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-nunit", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nuget restore\n.\\NUnit.ConsoleRunner.3.12.0\\tools\\nunit3-console.exe YourTests.dll\n.\\NAnt\\NAnt.exe -buildfile:build.build\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "20689512_0", "jobs": [{"name": "run_tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test \\\n  -project YourProject.xcodeproj \\\n  -scheme YourScheme \\\n  -destination 'platform=iOS Simulator,name=iPhone 12 Pro Max,OS=latest'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "20693255_0", "jobs": [{"name": "port_repo", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clone https://github.com/${{ github.actor }}/${{ github.event.forkee.name }}.git ported_repo\ncd ported_repo\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Ported repository to new language\"\ngit push origin master\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "2087347_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails db:create RAILS_ENV=test\nbundle exec rails db:schema:load RAILS_ENV=test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec spec/api", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "20874490_0", "jobs": [{"name": "sync_database_updates", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/setup-mysql", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -h 127.0.0.1 -u joomla_user -p${{ secrets.MYSQL_PASSWORD }} joomla_db < path/to/updated/database.sql", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to deploy Joomla site after the database update\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysqladmin -u joomla_user -p${{ secrets.MYSQL_PASSWORD }} -h 127.0.0.1 drop joomla_db", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "20909591_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o ${{ github.workspace }}/publish", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=version::$(Build.SourceVersion)-$(Build.SourceBranchName)-$(Build.BuildId)\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "$version = '${{ steps.patch-version.outputs.version }}'\n(gc $(Get-ChildItem -Path . -Recurse -Filter \"*AssemblyInfo.cs\").FullName) | %{$_ -replace ('(\\[assembly: AssemblyVersion\\(\"\")([.\\d]+)(\"\"\\)]|(\\[assembly: AssemblyFileVersion\\(\"\")([.\\d]+)(\"\"\\)])', \"`$1$version`$3\")} | Out-File $_.FullName\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Auto-increment version to $version\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "20945351_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourProject.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11' | xcpretty", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "21060553_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t debian-package-builder .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run --name package-builder debian-package-builder", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker cp package-builder:/path/to/debian/packages ./built-packages", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "main", "shell": "bash"}]}]}
{"id": "21066470_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-msys2", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pacman -S --noconfirm rsync", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "robocopy source_folder destination_folder /MIR", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "atlassian/github-actions/bitbucket-pipelines-mirror", "version": "main", "shell": "bash"}]}]}
{"id": "2108115_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B dependency:resolve", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn compile", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn test", "name": "", "version": "", "shell": "bash"}]}, {"name": "update-workspace", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "TheRealReal/setup-eclipse", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn eclipse:clean eclipse:eclipse", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Sync Eclipse workspace with current state\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "2109135_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\nphp wp-cli.phar --info\nchmod +x wp-cli.phar\nsudo mv wp-cli.phar /usr/local/bin/wp\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd wordpress\nwp core download --path=.\nwp core config --dbhost=localhost --dbname=wordpress --dbuser=root --dbpass=root\nwp core install --url=http://localhost --title=\"My WordPress Site\" --admin_user=admin --admin_password=admin --admin_email=admin@example.com\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wp plugin install <plugin1> --activate\nwp plugin install <plugin2> --activate\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wp media import /path/to/media/*.jpg --post_id=<post_id>\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git push origin main\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "21151792_0", "jobs": [{"name": "add-comment", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-env name=COMMIT_MESSAGE::$(git log --format=%B -n 1 $GITHUB_SHA)\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "21173819_0", "jobs": [{"name": "xcode_git_check", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt update && sudo apt install git -y", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bad_instructions=$(git grep -nE 'TODO|FIXME|XXX' | grep -v .swiftlint.yml || true)\nif [ -n \"$bad_instructions\" ]; then\n  echo \"ERROR: Found bad instructions in the code:\"\n  echo \"$bad_instructions\"\n  exit 1\nelse\n  echo \"No bad instructions found. Code is clean.\"\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "21220218_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpunit tests\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Install additional tools if necessary\n# Example: composer require squizlabs/php_codesniffer --dev\n# Run static analysis tools on HMVC extension directory\n# Example: php vendor/bin/phpcs src\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "21231926_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarqube-scan", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -u username:password --upload-file path/to/artifact snapshot/repo/\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "EnricoMi/publish-unit-test-result-action", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/upload-sonarqube-action", "version": "master", "shell": "bash"}]}]}
{"id": "21403064_0", "jobs": [{"name": "clean-release-branch", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git submodule deinit -f .\ngit rm --cached -r .\ngit config -f .gitmodules --get-regexp path | while read path_key path_value; do if [ -n \"$path_value\" ]; then git add --all \"$path_value\"; fi; done\ngit commit -m \"Remove submodules from release branch\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/push-to-another-repository", "version": "v1", "shell": "bash"}]}]}
{"id": "21474402_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ovh/ [email protected]", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install ant", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ant -f build.xml -Dflex.sdk.version=4.16.1", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/ [email protected]", "version": null, "shell": "bash"}]}]}
{"id": "21487707_0", "jobs": [{"name": "xcode_build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean archive -workspace YourWorkspace.xcworkspace -scheme YourScheme -archivePath build/YourScheme CODE_SIGN_STYLE=Manual CODE_SIGN_IDENTITY=\"\" | xcpretty\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "21537366_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-dev", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "SamKirkland/FTP-Deploy-Action", "version": "4.1", "shell": "bash"}]}]}
{"id": "2157460_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o publish", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy_staging", "steps": [{"type": "gh_action", "cmd": "", "name": "webfactory/ssh-agent", "version": "v0.5.3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ssh -o StrictHostKeyChecking=no user@staging-server 'cd /var/www/staging\nrm -rf *\ntar -xvf ~/your-project-name.tar -C /var/www/staging'\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy_production", "steps": [{"type": "gh_action", "cmd": "", "name": "webfactory/ssh-agent", "version": "v0.5.3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ssh -o StrictHostKeyChecking=no user@production-server 'cd /var/www/production\nrm -rf *\ntar -xvf ~/your-project-name.tar -C /var/www/production'\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "migrate_database", "steps": [{"type": "gh_action", "cmd": "", "name": "mcr.microsoft.com/mssql/server:2019-latest", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet ef database update --startup-project ./<YOUR_PROJECT_NAME> -c <YOUR_DB_CONTEXT> -- --connection \"<SQL_CONNECTION_STRING>\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "21579078_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake -DBOOST_ROOT=/usr/local/include/boost -DCMAKE_BUILD_TYPE=Release ..\nmake\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "21690298_0", "jobs": [{"name": "create_release", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'GitHub Actions'\ngit config --global user.email '<github-actions-bot-email>@users.noreply.github.com'\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "tag_message=$(git tag -l --format='%(contents)' ${{ github.ref }})\necho \"Tag Message: $tag_message\"\necho \"::set-output name=tag_message::$tag_message\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git tag -a ${{ github.ref }} -m \"${{ steps.get_tag_message.outputs.tag_message }}\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "softprops/action-gh-release", "version": "v1", "shell": "bash"}]}]}
{"id": "21758392_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B clean test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "elgohr/element-action", "version": "v0.0.2", "shell": "bash"}]}]}
{"id": "2180460_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -l index.php", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rsync -avz --delete ./ username@your-server-ip:/path/to/your/project\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "21857563_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mcr.microsoft.com/mssql/server:2017-latest", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "sqlpackage.exe /Action:Publish /SourceFile:PathToYourDacpac1.dacpac /TargetServerName:localhost /TargetDatabaseName:Database1 /TargetUser:sa /TargetPassword:YourStrongPassword\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sqlpackage.exe /Action:Publish /SourceFile:PathToYourDacpac2.dacpac /TargetServerName:localhost /TargetDatabaseName:Database2 /TargetUser:sa /TargetPassword:YourStrongPassword\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "21942588_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild build \\\n  -project YourProjectName.xcodeproj \\\n  -scheme YourSchemeName \\\n  -configuration Release \\\n  -sdk iphoneos \\\n  -destination 'generic/platform=iOS' \\\n  -target YourTargetName \\\n  -DAPPLICATION_NAME=CustomAppName\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "21951166_0", "jobs": [{"name": "fix-line-endings", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global core.autocrlf input\ngit ls-files -z | xargs -0 dos2unix\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"<your_email@example.com>\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Fix line endings from CRLF to LF\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "21972377_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "redhat-developers/openshift-actions/oc-login", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "oc project yourproject\noc apply -f path/to/your/deployment.yaml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22022247_0", "jobs": [{"name": "build_and_test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 13' test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "22088992_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit tests", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your deployment commands here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22158092_0", "jobs": [{"name": "transfer-files", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"No files to transfer\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/scp-action", "version": "master", "shell": "bash"}]}]}
{"id": "22168572_0", "jobs": [{"name": "build-dependency", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\nmake\nmake install\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "build-main-project", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake -DDEPENDENCY_DIR=../dependency_project/install ..\nmake\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22182631_0", "jobs": [{"name": "update_project", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "unzip project.zip", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r downloaded-project/* ${{ github.workspace }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Update project files\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "22275744_0", "jobs": [{"name": "phpunit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit --configuration ${{ matrix.config }}", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22322124_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your deployment commands here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22324705_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php framework/cli-script.php dev/build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22361017_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22389591_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcrun llvm-cov export -instr-profile ./DerivedData/Build/Intermediates.noindex/XCProfileData/YourScheme/SomeFile.profdata -arch x86_64 ./DerivedData/Build/Products/Debug-iphonesimulator/YourScheme.app/YourScheme -format=lcov -output-file coverage.lcov\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "2245861_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22482265_0", "jobs": [{"name": "perl_tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shogo82148/actions/setup-perl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cpanm --notest TAP::Harness", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "prove --harness=TAP::Harness", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22582102_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer self-update\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require vendor/package:1.0.0", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22590704_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run lint", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run format-check", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git commit -am \"Code maintenance changes\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "22621690_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22636950_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install cocoapods", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourWorkspace.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22708233_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-postgres", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "psql -h localhost -U postgres -d dbname -f path/to/backup.sql", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22765080_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build\ndotnet test\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "EnricoMi/publish-unit-test-result-action", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "codecov/codecov-action", "version": "v2", "shell": "bash"}]}]}
{"id": "22786299_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install cocoapods\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourScheme -sdk iphonesimulator build test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourScheme -sdk iphonesimulator archive -archivePath build/YourApp.xcarchive", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "brew install svn", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "svn checkout http://your-svn-repo-url/trunk your-local-directory", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"iOS build successful\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22834776_0", "jobs": [{"name": "rename-zip", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mv old-name.zip new-name.zip", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add new-name.zip\ngit commit -m \"Rename old-name.zip to new-name.zip\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "22893477_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test --no-build --configuration Release --logger \"trx;LogFileName=testResults.trx\" --results-directory ./TestResults", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wei/git-auto-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "22902891_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "OctopusDeploy/action-setup-cli", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "octo create-release --project=\"YourProjectName\" --enableservicemessages\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22903081_0", "jobs": [{"name": "update_changes", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Updated changes\" >> changes.md", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add changes.md\ngit commit -m \"Update changes\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "22905081_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22924684_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\necho \"Building project...\"\n# Example for .NET project\ndotnet build --configuration Release\ndotnet publish --configuration Release --output ./publish\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/scp-action", "version": "master", "shell": "bash"}]}]}
{"id": "22997721_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Install any necessary dependencies or packages\n# If using CocoaPods:\n# gem install cocoapods\n# pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# For workspace errors, you may need to clean and build the workspace\nxcodebuild clean build -workspace YourWorkspace.xcworkspace -scheme YourScheme\n# Run tests if applicable\n# xcodebuild test -workspace YourWorkspace.xcworkspace -scheme YourTestsScheme\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "23102251_0", "jobs": [{"name": "run-mysql-script", "steps": [{"type": "gh_action", "cmd": "", "name": "ridedott/setup-mysql", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -h localhost -u root -e \"USE your_database;\nSELECT id, name, \n       CASE \n           WHEN age < 18 THEN 'Child'\n           WHEN age < 60 THEN 'Adult'\n           ELSE 'Senior Citizen'\n       END AS age_group\nFROM your_table;\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "23204749_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew clean build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jfrog/github-action-release-artifactory", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "softprops/action-gh-release", "version": "v1", "shell": "bash"}]}]}
{"id": "23231604_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "montudor/setup-dart", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dart pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dart test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "23428720_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nphp composer-setup.php\nphp -r \"unlink('composer-setup.php');\"\nmv composer.phar /usr/local/bin/composer\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chmod -R 777 path/to/uploads", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -S localhost:8000 -t public &", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sleep 3", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -X POST -F 'file=@path/to/image.jpg' http://localhost:8000/upload\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "23558257_0", "jobs": [{"name": "run-server", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm start", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wernight/ngrok-action", "version": "v2", "shell": "bash"}]}]}
{"id": "23584641_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "easingthemes/ftp-action", "version": "v1", "shell": "bash"}]}]}
{"id": "23670711_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"<?php \\\nrequire 'system/core/CodeIgniter.php'; \\\n$encryption_key = 'YOUR_ENCRYPTION_KEY_HERE'; \\\n$this->encryption->initialize(array('driver' => 'openssl')); \\\necho $this->encryption->encrypt('test_data'); \\\n?>\" > test_encryption.php\nphp test_encryption.php\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "23673915_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourSchemeName -workspace YourWorkspace.xcworkspace -archivePath build/YourArchiveName.xcarchive archive", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath build/YourArchiveName.xcarchive -exportPath build/Output -exportOptionsPlist ExportOptions.plist", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "23699787_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit tests/\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to deploy your CodeIgniter project, including CI Merchant PayPal integration\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "23768762_0", "jobs": [{"name": "release", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "softprops/action-gh-release", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rtCamp/action-slack-notify", "version": "v2.0.3", "shell": "bash"}]}]}
{"id": "23853024_0", "jobs": [{"name": "fix_empty_lines", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php fix_empty_lines.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "23904260_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nbundle exec pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean build test -project YourProject.xcodeproj -scheme YourScheme -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 5s,OS=7.0'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "23915270_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B clean verify", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "23917052_0", "jobs": [{"name": "tfs_build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build\ndotnet test --collect \"XPlat Code Coverage\" --results-directory TestResults --logger 'trx;LogFileName=test_results.trx' -p:CollectCoverage=true -p:CoverletOutputFormat=opencover\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "EnricoMi/vsts-test-logger", "version": "v2", "shell": "bash"}]}]}
{"id": "23990264_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add build command here if needed for your PHP application\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easingthemes/ssh-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "23992656_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build:ssis-project", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install -y mssql-tools unixodbc-dev", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sqlcmd -S localhost -U sa -P your_password -d your_database -i path/to/your_script.sql", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24021399_0", "jobs": [{"name": "show-xcode-output", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YOUR_WORKSPACE.xcworkspace -scheme YOUR_SCHEME clean build | tee xcode_build.log\n# Save the Xcode build output to a log file\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cat xcode_build.log", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24031440_0", "jobs": [{"name": "setup-gerrit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dart-lang/setup-dart", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dart pub global activate gerrit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dart pub global run gerrit setup --project=github/repo-name", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Set up Gerrit integration\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "2405176_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install php-xml\ncomposer install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24089355_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"$SSH_PRIVATE_KEY\" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ssh -o StrictHostKeyChecking=no user@your-server \"cd /path/to/your/app && git pull origin main\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "241007_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-gcloud", "version": "v0.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud components install app-engine-python", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud app deploy app.yaml --promote", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl https://YOUR_PROJECT_ID.wl.r.appspot.com\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24127699_0", "jobs": [{"name": "cleanup", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your cleanup script commands here\n# For example, deleting merged branch deployments/configurations\ngit fetch --prune\ngit branch -d ${{ github.event.pull_request.head.ref }}\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "2413504_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get -y install mercurial", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "hg clone https://kiln-repository-url", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "finalbuilder/setup-finalbuilder-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "finalbuilder build-script.fbp8", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "finalbuilder test-script.fbp8", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "finalbuilder deploy-script.fbp8", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24146831_0", "jobs": [{"name": "notify-author", "steps": [{"type": "gh_action", "cmd": "", "name": "softprops/action-slack", "version": "v2", "shell": "bash"}]}]}
{"id": "24168417_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec calabash-ios run BUNDLE_ID=path_to_your_bundle_id", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24170736_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Run your build commands here\n# For example, if using npm:\nnpm install\nnpm run build\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonicdoe/nexus-actions/upload", "version": "v1", "shell": "bash"}]}]}
{"id": "24247973_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Project manifest created at $(date)\" > manifest.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add manifest.txt\ngit commit -m \"Add manifest file [skip ci]\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "24329711_0", "jobs": [{"name": "release", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -N io.takari:maven:wrapper\n./mvnw --version\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./mvnw release:prepare -DdryRun=true\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24332209_0", "jobs": [{"name": "composer_update", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nphp composer-setup.php\nphp -r \"unlink('composer-setup.php');\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php composer.phar update", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add composer.lock\ngit commit -m \"Update Composer dependencies\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "24335970_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud app deploy app.yaml --quiet", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24336309_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer self-update\ncomposer install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -h hostname -u username -ppassword database_name < database.sql\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24370815_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "papyros/qt-installer-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "qmake -r\nmake\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24391572_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "repoA/trigger-pipeline-action", "version": "v1", "shell": "bash"}]}]}
{"id": "24480996_0", "jobs": [{"name": "integration_test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "DeLaGuardo/setup-clojure", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run --rm --link selenium-hub:hub selenium/node-chrome:3.141.59", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "lein test :integration", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24528469_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "find . -name \"*.php\" -exec php -l {} \\;", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "24530001_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install  # If using CocoaPods for dependency management\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -scheme \"YourScheme\" -sdk iphoneos -archivePath \"build/YourScheme\"\n# Replace \"YourScheme\" with your actual Xcode scheme\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath \"build/YourScheme.xcarchive\" -exportPath \"build\" -exportOptionsPlist exportOptions.plist\n# Create an exportOptions.plist file with necessary configurations\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "24530628_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nbundle exec pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean build test -workspace YourWorkspace.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24662467_0", "jobs": [{"name": "replace-git-core", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i 's/git-core/git/g' your_filename_here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"github-actions[bot]@users.noreply.github.com\"\ngit config --local user.name \"github-actions[bot]\"\ngit add .\ngit commit -m \"Replace git-core with git port\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "24688055_0", "jobs": [{"name": "build_and_render", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install jekyll bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec jekyll build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "24688603_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": null, "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24709128_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "game-ci/setup-unity", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "unity -quit -batchmode -projectPath . -executeMethod BuildScript.PerformBuild\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24737621_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 13' -enableCodeCoverage YES | xcpretty", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "24757293_0", "jobs": [{"name": "code_review", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "softmarshmallow/code-review-full-width-action", "version": "v1", "shell": "bash"}]}]}
{"id": "24760435_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build YourSolution.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to deploy Cloud Project 1\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to deploy Cloud Project 2\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Microsoft/pipelines-azure-devops-github", "version": "master", "shell": "bash"}]}]}
{"id": "24776054_0", "jobs": [{"name": "change_variables", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "24792833_0", "jobs": [{"name": "customize_notification", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your customization script here\necho \"Customizing Xcode service notification email content...\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24857137_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [ \"${{ matrix.configuration }}\" == \"Development\" ]; then\n  cp path/to/Development.sln solution.sln\nelse\n  cp path/to/Production.sln solution.sln\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=${{ matrix.configuration }} solution.sln", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24916625_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ::set-output name=cancelled::true", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "exit 78", "name": "", "version": "", "shell": "bash"}]}, {"name": "start", "steps": [{"type": "gh_action", "cmd": "", "name": "peter-evans/workflow-dispatch", "version": "v2", "shell": "bash"}]}]}
{"id": "24924815_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rubocop\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails db:create RAILS_ENV=test\nbundle exec rails db:schema:load RAILS_ENV=test\nCOVERAGE=true bundle exec rspec\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "codecov/codecov-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install simplecov\n/home/runner/.rbenv/shims/ruby -I./config -rsimplecov -e \"SimpleCov.minimum_coverage 95\" \"./spec/*\"\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "workflow_dispatch", "steps": []}]}
{"id": "24950872_0", "jobs": [{"name": "sonarqube_scan", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean verify sonar:sonar -Dsonar.projectKey=<your_project_key>", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn sonar:project-match -Dsonar.projectKey=<your_project_key> -Dsonar.projectName=<project_name>", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "24969225_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "25011644_0", "jobs": [{"name": "enable-icloud", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodeproj_path=\"YourProject.xcodeproj\"\ncapability=\"iCloud\"\ncd ${xcodeproj_path} || exit\n/usr/libexec/PlistBuddy -c \"Add :capabilities dict\" project.pbxproj\n/usr/libexec/PlistBuddy -c \"Add :capabilities:${capability} dict\" project.pbxproj\n/usr/libexec/PlistBuddy -c \"Add :capabilities:${capability}:enabled bool true\" project.pbxproj\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "25127146_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild build test -scheme YourProjectScheme -workspace YourProject.xcworkspace -destination 'platform=iOS Simulator,name=iPhone 11'\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Build folder path is $GITHUB_WORKSPACE/build\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "25247632_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "brew install carthage\ncarthage bootstrap --platform iOS --cache-builds\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourApp.xcworkspace -scheme YourUITestsScheme -destination 'platform=iOS Simulator,name=iPhone 12' | xcpretty", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "25282344_0", "jobs": [{"name": "copy-build-xmls", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/scp-action", "version": "master", "shell": "bash"}]}]}
{"id": "2533354_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r /path/to/hudson/jobs/. ./hudson_backup\ngit add hudson_backup\ngit commit -m \"Backup Hudson build jobs config\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "25349152_0", "jobs": [{"name": "resolve_issue", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourProjectSchemeName -destination 'platform=iOS Simulator,name=iPhone 12' clean build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourProjectSchemeName -destination 'platform=iOS Simulator,name=iPhone 12' test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "25679691_0", "jobs": [{"name": "push_to_another_branch", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Build Success!\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "25737981_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -resolvePackageDependencies\nxcodebuild -list\nxcodebuild -sdk iphonesimulator -scheme YourScheme\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12'", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "25738278_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "25802882_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "yarn install && yarn encore production", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "webfactory/ssh-agent", "version": "v0.5.3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rsync -r --delete-after $GITHUB_WORKSPACE/ user@example.com:/path/to/deployment/directory\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "25893941_0", "jobs": [{"name": "fork_changes", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b my-changes", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"your-email@example.com\"\ngit config --global user.name \"Your Name\"\ngit add .\ngit commit -m \"Made changes just for me\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v0.5", "shell": "bash"}]}]}
{"id": "25902_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "marketplace/actions/setup-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\nmake\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./build/tests/test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "clang-format -i -style=file src/*.cpp include/*.h\ngit diff --exit-code\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "2590911_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "amokrushin/setup-delphi", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild YourProject.dproj /t:Build /p:config=Release\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "YourTestRunner.exe\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "25928636_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=uniqueName::$(date +'%Y%m%d%H%M%S').jpg\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp path/to/uploaded/file.jpg ${{ github.workspace }}/uploads/$uniqueName\n# Add your CodeIgniter upload logic to save the file with the unique name\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "25961655_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android-emulator/setup-sdk", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android-emulator/start", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "adb wait-for-device", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew connectedDebugAndroidTest", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android-emulator/stop", "version": "v2", "shell": "bash"}]}]}
{"id": "25998407_0", "jobs": [{"name": "coverity-analysis", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": null, "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build --scan", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wget https://downloads.synopsys.com/coverity/Coverity7.7.0/Coverity_Scanner-2019.03-linux64.tar.gz\ntar xvzf Coverity_Scanner-2019.03-linux64.tar.gz\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./Coverity_Scanner-2019.03-linux64/bin/cov-configure --java\n./Coverity_Scanner-2019.03-linux64/bin/cov-build --dir cov-int ./gradlew build\n./Coverity_Scanner-2019.03-linux64/bin/cov-analyze --dir cov-int --all --show-config\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "26048291_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26068730_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild build -workspace YourApp.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11' -quiet", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "2608594_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "warrenbuckley/MSDeploy-WebDeploy-Github-Action", "version": "master", "shell": "bash"}]}]}
{"id": "26086451_0", "jobs": [{"name": "analyze", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/setup-dart", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dart analyze --no-pub --no-exit-on-warnings --options analysis_options.yaml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26101127_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -sS https://getcomposer.org/installer | php\nmv composer.phar /usr/local/bin/composer\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your deployment script here\n# For example: rsync -avz --delete ./ user@your-server:/var/www/html/\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add a check to make sure the deployment was successful\n# For example: curl http://your-server/health_check.php\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your redeployment script here\n# For example: rsync -avz --delete ./ user@your-server:/var/www/html/\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26137878_0", "jobs": [{"name": "push", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\nnew_version=$(git describe --tags)\ngit tag -a $new_version -m \"Release $new_version\"\ngit push origin $new_version\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "26159134_0", "jobs": [{"name": "copy_repository_content", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r * ../destination-repo\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "26218346_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake db:create\nbundle exec rake db:schema:load\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Deploying to staging environment...\"\n# Add deployment steps here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Deploying to production environment...\"\n# Add deployment steps here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26311117_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nyarn install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake db:create\nbundle exec rake db:migrate\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake spec\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake assets:precompile\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26323524_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26334222_0", "jobs": [{"name": "sonarqube", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarqube-scan", "version": "master", "shell": "bash"}]}]}
{"id": "26383663_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [[ ${{ github.ref }} == 'refs/heads/master' ]]; then\n  xcodebuild -workspace YourProject.xcworkspace -scheme YourProductionScheme -destination 'platform=iOS Simulator,name=iPhone 12' clean build\nelif [[ ${{ github.ref }} == 'refs/heads/develop' ]]; then\n  xcodebuild -workspace YourProject.xcworkspace -scheme YourDevelopScheme -destination 'platform=iOS Simulator,name=iPhone 12' clean build\nelif [[ ${{ github.ref }} == 'refs/heads/feature/'* ]]; then\n  feature_branch=$(basename ${{ github.ref }})\n  xcodebuild -workspace YourProject.xcworkspace -scheme YourCustomScheme -destination 'platform=iOS Simulator,name=iPhone 12' clean build\nelse\n  echo \"No matching build configuration for branch ${{ github.ref }}\"\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26397914_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "gajus/teradata-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to install dependencies (e.g., npm install, pip install, etc.)\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to run tests for your Teradata project\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to run any code analysis tools (e.g., linting, static code analysis)\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to deploy your Teradata project (if applicable)\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26445219_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "current_version=$(cat version.txt)\nnew_version=$(echo $current_version | awk -F. '{$NF = $NF + 1;} 1' OFS=.)  # Increment last digit of version\necho $new_version > version.txt\necho \"::set-output name=new_version::$new_version\"  # Output the new version for later steps\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHubActions\"\ngit commit -am \"Auto incremented package version to ${{ steps.increment_version.outputs.new_version }}\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git tag v${{ steps.increment_version.outputs.new_version }}", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "2650187_0", "jobs": [{"name": "sync_ci_activity", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require phing/phing\ncomposer install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Your synchronization logic here\n# Use Phing to interact with SVN and integrate CI activity\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "2650416_0", "jobs": [{"name": "deploy_to_qa", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\n# For example, Maven build: mvn clean install\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/scp-action", "version": "master", "shell": "bash"}]}, {"name": "deploy_to_staging", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\n# For example, Maven build: mvn clean install\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/scp-action", "version": "master", "shell": "bash"}]}, {"name": "deploy_to_production", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\n# For example, Maven build: mvn clean install\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/scp-action", "version": "master", "shell": "bash"}]}]}
{"id": "26514475_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -resolvePackageDependencies\nxcodebuild -restoreStandardWorkspace\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourProject.xcworkspace -scheme YourScheme -sdk iphonesimulator", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26536694_0", "jobs": [{"name": "examine-rspec-examples", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec --dry-run\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26586006_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jurplel/setup-qt", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "qmake -makefile\nmake\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "2659433_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\ncd path/to/php && composer install\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd path/to/php\n# Any additional setup steps for the PHP application\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails db:migrate RAILS_ENV=test\nbundle exec rspec\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd path/to/php\n# Commands to run PHP tests\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails db:rollback RAILS_ENV=test\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26595406_0", "jobs": [{"name": "pre-merge", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "luopio/gerrit-trigger-plugin", "version": "v1.1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Commands to run your tests\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Command to trigger the pre-merge action using the Gerrit Trigger Plugin\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26616865_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpunit tests/", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26682968_0", "jobs": [{"name": "update-file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Your updated content goes here\" > path/to/your/file.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add path/to/your/file.txt\ngit commit -m \"Update file using GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "26691606_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php index.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26729124_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundler install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec jekyll build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r path/to/your/images _site/images", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "2673924_0", "jobs": [{"name": "deploy_database_changes", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "julianoe/heavy-mysql-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to deploy database changes before build here\n# For example, using a migration tool like Liquibase or Flyway\n# Example: liquibase update\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to build and deploy your application\n# This step will only run after the database changes have been deployed\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26792493_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec fastlane test", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec fastlane install_fastlane", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec fastlane release_to_testflight", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "2681491_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-android", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chmod +x ./gradlew\n./gradlew build\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26847454_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mathworks/matlab-actions/setup", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "matlab -batch \"disp('Install dependencies here')\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "matlab -batch \"disp('Build MATLAB code here')\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Build successful\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Post to Drone API here\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26872516_0", "jobs": [{"name": "add_code_block", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "S2Shape/add-code-block-to-pr-description", "version": "v1", "shell": "bash"}]}]}
{"id": "26878182_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install -y nodejs\ngem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails db:create db:schema:load RAILS_ENV=test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails test TEST=test\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "27041616_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-dev", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Replace the following commands with your actual deployment steps using Ant or command line\n# For example, using Ant:\nant -f deploy.xml -Dzsurl=$ZS_URL -Dzskey=$ZS_USER -Dzssecret=$ZS_PASSWORD\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "27076154_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install php-pear\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo pear channel-discover pear.php.net\nsudo pear install phpunit/PHP_ProjectWizard\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit -v", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "27079032_0", "jobs": [{"name": "merge-branches", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git merge --no-ff ${{ github.event.before }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit commit -am \"Merge other branch into mine by GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout master", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit merge --no-ff ${{ github.event.before }}\ngit commit -am \"Merge both branches into master by GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "27131725_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.PROVISIONING_PROFILE }}\" | base64 --decode > profile.mobileprovision\nmkdir -p ~/Library/MobileDevice/Provisioning\\ Profiles\ncp profile.mobileprovision ~/Library/MobileDevice/Provisioning\\ Profiles/\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "/usr/bin/codesign --force --sign \"${{ secrets.PROVISIONING_PROFILE_NAME }}\" --entitlements entitlements.plist MyApp.app\n/usr/bin/plutil -replace beta-reports-active -bool true entitlements.plist\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath MyApp.xcarchive -exportPath MyApp.ipa -exportOptionsPlist ExportOptions.plist\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "27360190_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp application/config/config.php.example application/config/config.php", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php index.php migrate", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "27362951_0", "jobs": [{"name": "check_tfvc_commits", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add script to fetch latest changeset in TFVC and store it in a file\necho \"Latest TFVC Changeset Number\" > latest_changeset.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/azure/login", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/azure-devops-action", "version": "v1", "shell": "bash"}]}]}
{"id": "27440564_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install cocoapods\npod install --repo-update\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourApp -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 12' build test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Validate your Facebook SDK integration\n# Add commands to test your SDK integration\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "27458830_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chmod +x gradlew", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "27509111_0", "jobs": [{"name": "merge-to-master", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout master && git pull && git merge --no-ff ${{ github.event.ref }}", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "27517657_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "27550422_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to validate and build your source code on Ubuntu\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "27680342_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle config path vendor/bundle\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec middleman build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "27693881_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shimataro/ssh-key", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ssh -o StrictHostKeyChecking=no user@your-ssh-server \"cd /path/to/deployment && git pull\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -X POST -H \"Authorization: Bearer $DRONE_TOKEN\" $DRONE_SERVER/api/repos/<YOUR-REPO>/activate\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "27751578_0", "jobs": [{"name": "fork-repository", "steps": [{"type": "gh_action", "cmd": "", "name": "repo-sync/github-fork", "version": "v1", "shell": "bash"}]}]}
{"id": "28006003_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/propel sql:insert", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker stop mysql", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "28071926_0", "jobs": [{"name": "move_view_folder", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mv view/* view/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"github-actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit commit -am \"Move content of 'view' folder into 'view' folder\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "28079358_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -e 'CREATE DATABASE test_database;'\nmysql test_database < path/to/your/database/migrations.sql\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/kohana-minion test:groups\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "28087223_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build -c Release\n# Add commands to deploy to AppHarbor here\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rtCamp/action-slack-notify", "version": "v2", "shell": "bash"}]}]}
{"id": "28160402_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install jekyll\ngem install html-proofer\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "jekyll build\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "htmlproofer ./_site --disable-external --check-html --empty-alt-ignore --url-ignore '#',ignorethis\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "28219945_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "cynipe/link-checker-action", "version": "v2", "shell": "bash"}]}]}
{"id": "28291313_0", "jobs": [{"name": "store_config", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p .github/config\ncp .github/* .github/config\ngit add .github/config\ngit commit -m \"Store GitHub configuration\" || echo \"No changes to commit\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "28348883_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -NV\nfastlane install_plugins\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane init\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane beta\n# Add any additional parameters or configurations as needed\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "28351568_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer config --global github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer config repositories.private vcs <PRIVATE_VENDOR_REPO_URL>", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require <VENDOR/PACKAGE>:dev-main", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php your_build_script.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "28356706_0", "jobs": [{"name": "version-control", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Perform any changes to the cloned repository here\necho \"Making changes to the cloned repository...\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@users.noreply.github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Automated changes made by GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "28386438_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"<link rel='stylesheet' type='text/css' href='https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/main/path/to/your/css/file.css'>\" >> index.html", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@users.noreply.github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add index.html\ngit commit -m \"Add CSS file to HTML\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "28507673_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -resolvePackageDependencies\nxcrun simctl list\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourWorkspace.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12'\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -workspace YourWorkspace.xcworkspace -scheme YourScheme -archivePath build/YourApp\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath build/YourApp.xcarchive -exportPath build -exportOptionsPlist ExportOptions.plist\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "28625565_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install bundler\nbundle install --path vendor/bundle\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -scheme YourAppScheme -destination 'platform=iOS Simulator,name=iPhone 11'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "28837340_0", "jobs": [{"name": "xcode_server_ota_install", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean archive -scheme YourAppScheme -archivePath build/YourApp.xcarchive\nxcodebuild -exportArchive -archivePath build/YourApp.xcarchive -exportOptionsPlist exportOptions.plist -exportPath build\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ipatool build-ipa build/YourApp.ipa\nipatool distribute-ipa-to-xcode build/YourApp.ipa\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "28869685_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o publish\ncd publish\ndotnet packagename.dll\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nuget restore YourSolution.sln\nnuget install Microsoft.Owin.Host.SystemWeb -Version 4.2.0\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easingthemes/deploy-cpanel-action", "version": "v1", "shell": "bash"}]}]}
{"id": "28877899_0", "jobs": [{"name": "process_comment", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "bebraw/comment-input-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Parameters: ${{ steps.extract.outputs.parameters }}\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "28880011_0", "jobs": [{"name": "check-code", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run lint", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run format:check", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm audit --audit-level=high", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git diff --name-only origin/main...", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "softprops/action-approve", "version": "v1", "shell": "bash"}]}]}
{"id": "28888159_0", "jobs": [{"name": "precompile-assets", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nnpm install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep 'app/assets\\|public/packs' || exit 0\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake assets:precompile", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit commit -am \"Precompile assets\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29004018_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "chrispat/emu-devcontainer-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild YourProjectName.dproj /p:Config=Debug\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29005382_0", "jobs": [{"name": "xcode_bot_custom_script", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourProjectScheme \\\n           -workspace YourProject.xcworkspace \\\n           -destination 'platform=iOS Simulator,name=iPhone 12' \\\n           build test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your custom script here to process the Xcode Bot results and generate output\necho \"Custom script executed successfully!\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Save the output of the custom script to a file\necho \"Output from custom script\" > custom_output.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "29012537_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "denibertovic/ssdt-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sqlpackage.exe /Action:Publish /SourceFile:$(Build.SourcesDirectory)/YourProject/YourProject.dacpac /TargetServerName:YourServer /TargetDatabaseName:YourDatabase /TargetUser:YourUser /TargetPassword:YourPassword\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29029306_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourApp -workspace YourApp.xcworkspace -sdk iphoneos -configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane gym --workspace YourApp.xcworkspace --scheme YourApp --export_method 'app-store' --configuration 'Release'", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane pilot upload", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29124190_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle config path vendor/bundle\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake assets:precompile\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add public/assets\ngit commit -m \"Precompiled assets\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29208662_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcrun simctl list\nxcodebuild -resolvePackageDependencies\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29270450_0", "jobs": [{"name": "avoid_deleting_local_files", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git diff --name-only HEAD^ HEAD > changed_files.txt\ngit diff --name-only --diff-filter=D HEAD^ HEAD > deleted_files.txt\necho ::set-output name=deleted_files::$(cat deleted_files.txt)\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "deleted_files=$(echo \"${{ steps.deleted_files.outputs.deleted_files }}\" | tr '\\n' ' ')\nfor file in $deleted_files; do\n  if [ ! -e \"$file\" ]; then\n    git checkout HEAD -- \"$file\"\n  fi\ndone\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Fix deleted files\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "29534979_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Install-Module -Name <your_dsc_resource_module_name> -Force -Scope CurrentUser", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Invoke-DscResource -Path .\\your_dsc_configuration_script.ps1", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git push", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29560726_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -scheme YourScheme -workspace YourWorkspace.xcworkspace -configuration Release -archivePath 'build/YourApp'", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [ -d \"build/YourApp.xcarchive\" ]; then\n  echo \"Successful: Archive created\"\nelse\n  echo \"Error: Archive not created\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29622954_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php index.php build-slug\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easingthemes/ssh-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "29665673_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": null, "shell": "bash"}]}]}
{"id": "29685690_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your PHP linting, unit testing commands here\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git pull\n# Add your deployment script/command here for single feature deployment\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29703219_0", "jobs": [{"name": "promote_build_parameter", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ${{ github.event.inputs.promoted_value }} > promoted_value.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'GitHub Actions'\ngit config --global user.email 'actions@users.noreply.github.com'\ngit add promoted_value.txt\ngit commit -m 'Promote build parameter value'\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "29794034_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -scheme YourScheme -workspace YourWorkspace.xcworkspace -configuration Release -archivePath $PWD/build/YourApp.xcarchive", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath $PWD/build/YourApp.xcarchive -exportPath $PWD/build -exportOptionsPlist ExportOptions.plist", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29838634_0", "jobs": [{"name": "skip_files", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add file patterns to skip in the following array\nskip_files=(file1.txt file2.png folder/file3.js)\n\nfor file in \"${skip_files[@]}\"; do\n  if [ -f \"$file\" ]; then\n    git rm --cached \"$file\"\n  fi\ndone\n\ngit commit -m \"Skipping files on commit\" -a --no-verify --allow-empty\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "29905817_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r $GITHUB_WORKSPACE /path/to/your/computer", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/scp-action", "version": "master", "shell": "bash"}]}]}
{"id": "29980566_0", "jobs": [{"name": "perforce_checkout", "steps": [{"type": "gh_action", "cmd": "", "name": "perforce/p4sync-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [[ $GITHUB_REF == refs/tags/v* ]]; then\n  echo \"RELEASE_BRANCH=$(echo ${GITHUB_REF#refs/tags/})\"\nelse\n  echo \"Cannot determine release branch.\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [[ $RELEASE_BRANCH == 'prod' ]]; then\n  echo \"Deploying to production environment...\"\n  RELEASE_ENV=production\nelif [[ $RELEASE_BRANCH == 'stage' ]]; then\n  echo \"Deploying to staging environment...\"\n  RELEASE_ENV=staging\nelse\n  echo \"Undefined environment.\"\n  exit 1\nfi\necho \"::set-output name=release_env::$RELEASE_ENV\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git fetch --all\ngit checkout ${RELEASE_BRANCH}\necho \"Checked out branch: $RELEASE_BRANCH for $RELEASE_ENV environment.\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29986942_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nvidia/setup-cuda", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nvidia/setup-cudnn", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python -m pip install --upgrade pip\npip install -r requirements.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python test.py  # Replace test.py with your actual testing script\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29990318_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails assets:precompile RAILS_ENV=production\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Replace these commands with your actual build commands for the SPA frontend\ncd path/to/your/frontend\nnpm install\nnpm run build\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "3000190_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your code linting or formatting checks here\n# Example: npm run lint\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your test commands here\n# Example: npm test\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "github/codeql-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add deployment commands to your staging environment\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add a notification step to alert team members about the pull request\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "30036433_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-dev --optimize-autoloader", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/rocketeer deploy", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "30087129_0", "jobs": [{"name": "transfer", "steps": [{"type": "gh_action", "cmd": "", "name": "endofiz/transfer-repository-action", "version": "v1", "shell": "bash"}]}]}
{"id": "30135691_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout main && git merge ${{ github.head_ref }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.name 'GitHub Actions'\ngit config user.email 'actions@github.com'\ngit commit -am \"Merge branch '${{ github.head_ref }}'\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "3013821_0", "jobs": [{"name": "setup-mysql-replication", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mysql-action/setup-mysql", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -uroot -p\"${{ secrets.MYSQL_ROOT_PASSWORD }}\" -e \"CREATE USER 'repl'@'%' IDENTIFIED BY '${{ secrets.REPL_PASSWORD }}';\"\nmysql -uroot -p\"${{ secrets.MYSQL_ROOT_PASSWORD }}\" -e \"GRANT REPLICATION SLAVE ON *.* TO 'repl'@'%';\"\nMASTER_STATUS=$(mysql -uroot -p\"${{ secrets.MYSQL_ROOT_PASSWORD }}\" -e \"SHOW MASTER STATUS\" | tail -n +2)\necho \"::set-output name=master_status::$MASTER_STATUS\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=master_status::${{ steps.configure-master-database.outputs.master_status }}\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "MASTER_STATUS=(${{ steps.save-master-status.outputs.master_status }})\nmysql -uroot -p\"${{ secrets.MYSQL_ROOT_PASSWORD }}\" -e \"CHANGE MASTER TO MASTER_HOST='${{ secrets.MASTER_DB_IP }}', MASTER_USER='repl', MASTER_PASSWORD='${{ secrets.REPL_PASSWORD }}', MASTER_LOG_FILE='${MASTER_STATUS[0]}', MASTER_LOG_POS=${MASTER_STATUS[1]};\"\nmysql -uroot -p\"${{ secrets.MYSQL_ROOT_PASSWORD }}\" -e \"START SLAVE;\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "30228148_0", "jobs": [{"name": "poll-perforce-streams", "steps": [{"type": "gh_action", "cmd": "", "name": "perforce/p4-cli-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "for stream in stream1 stream2 stream3; do\n  changes=$(p4 -Ztag changes -s submitted //depot/$stream/...@change,change+1)\n  if [ -n \"$changes\" ]; then\n    echo \"Changes detected in $stream\"\n    # Trigger subsequent actions or processes here\n  else\n    echo \"No changes in $stream\"\n  fi\ndone\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "3024817_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourProjectScheme -workspace YourProjectWorkspace.xcworkspace build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourProjectScheme -workspace YourProjectWorkspace.xcworkspace test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "30281536_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme \"YourAppScheme\" clean build test -destination \"platform=macOS\" CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "30372934_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\nnpm ci\nnpm run build\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'Automated Build'\ngit config --global user.email 'actions@users.noreply.github.com'\ngit checkout -b build-artifacts-${GITHUB_RUN_ID}\nmv dist/ build/\ngit add build/\ngit commit -m 'Automated build artifacts'\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "30388900_0", "jobs": [{"name": "build-ios", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -NV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane ios ci", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "30393806_0", "jobs": [{"name": "show-diff", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=sha::${GITHUB_SHA}\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Commit: ${{ steps.commit.outputs.sha }}\"\ngit fetch origin\ngit diff --find-renames $(git log -1 --pretty=%H ${{ steps.commit.outputs.sha }}^)..${{ steps.commit.outputs.sha }} > diff.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mshick/github-action-comment", "version": "v1", "shell": "bash"}]}]}
{"id": "30439927_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec jekyll build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "30440430_0", "jobs": [{"name": "scrutinizer", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "scrutinizer-ci/github-action", "version": "v1", "shell": "bash"}]}]}
{"id": "30445632_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": null, "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build and test commands here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "30492230_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "home64/actions/setup-gcloud", "version": "v0.5", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud config set project <your-project-id>", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth activate-service-account --key-file=${{ secrets.GCP_SA_KEY }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud run deploy <your-service> \\\n  --image=<your-container-image> \\\n  --platform=managed \\\n  --region=<your-region>\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "3056830_0", "jobs": [{"name": "java_build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean install", "name": "", "version": "", "shell": "bash"}]}, {"name": "python_build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pip install -r requirements.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pytest", "name": "", "version": "", "shell": "bash"}]}, {"name": "ruby_build", "steps": [{"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rspec", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "30672602_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nuget restore YourSolution.sln\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild YourSolution.sln /p:Configuration=Release\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to run tests here\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/azure-pipelines-task-lib", "version": "3", "shell": "bash"}]}]}
{"id": "30680846_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -l index.php", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit tests/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Deploying to production server\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Deploying to staging server\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "30697558_0", "jobs": [{"name": "install-packages", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer global require --dev packagename1 packagename2", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "30708983_0", "jobs": [{"name": "push-issues", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clone <GIT_SERVER_REPO_URL>\ncd <REPO_NAME>\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git log --all --grep=\"^Issue\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd $GITHUB_WORKSPACE\n# Add code to parse the fetched issues and push to GitHub repository\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "30741937_0", "jobs": [{"name": "tag_version", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ::set-output name=VERSION::v$(git describe --tags --abbrev=0)", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "go mod download\ngo build -o myapp\ngo test ./...\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git tag ${{ steps.version.outputs.VERSION }}", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "30809323_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git init", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git commit -m \"Initial commit\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "30814130_0", "jobs": [{"name": "change_folder_path", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install cocoapods\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "defaults write com.apple.dt.Xcode IDECustomDerivedDataLocation ${{ github.workspace }}/NewDerivedDataFolder\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "30831187_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild YourSolutionFile.sln /p:Configuration=Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit tag v1.0.$GITHUB_RUN_NUMBER\ngit push origin --tags\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "30981232_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd your_project_directory\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourWorkspace.xcworkspace -scheme YourScheme", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -workspace YourWorkspace.xcworkspace -scheme YourScheme -archivePath build/YourApp.xcarchive", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath build/YourApp.xcarchive -exportPath build -exportOptionsPlist ExportOptions.plist", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "31047034_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nmatei/labview-actions/setup", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "lv-cli --build myVI.vi --target cRIO --flag myCompileFlag", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "31060947_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "yakkomajuri/gh-contribution-graph", "version": "v1", "shell": "bash"}]}]}
{"id": "31081200_0", "jobs": [{"name": "modify-code", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Replace 'oldData' with 'newData' in example.txt\nsed -i 's/oldData/newData/g' example.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Automated code modification\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "31140200_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Install-Module -Name Pester -Force -SkipPublisherCheck", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Invoke-Command -ComputerName <remote-computer> -ScriptBlock {\n  # Commands to run Pester tests remotely here\n  # Example:\n  Import-Module Pester\n  $result = Invoke-Pester -Path C:\\path\\to\\test\\file.tests.ps1\n  if ($result.FailedCount -gt 0) {\n    Write-Host \"Pester tests failed!\"\n    exit 1\n  } else {\n    Write-Host \"Pester tests passed!\"\n  }\n}\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "31236493_0", "jobs": [{"name": "add-libraries", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subchen/setup-netbeans", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd /path/to/your/project\n# Download libraries or add jars to your project\n# For example:\nwget https://example.com/library.jar -P lib/\n# Or manually copy the jar files\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.email \"<your-email>\"\ngit config user.name \"<your-username>\"\ngit add .\ngit commit -m \"Added libraries to project\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "31377758_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane deliver", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "31380286_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2.1.4", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "gr2m/set-status-action", "version": "v2", "shell": "bash"}]}]}
{"id": "31397844_0", "jobs": [{"name": "merge", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git merge main", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/commit-and-push-action", "version": "v1", "shell": "bash"}]}]}
{"id": "31438954_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp .env.default .env", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bin/cake migrations migrate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bin/cake test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bin/cake i18n extract", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpcs --standard=CakePHP --extensions=php src tests", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require cakephp/authentication:~1.3 --no-interaction", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Build successful\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "31458986_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install --global jspm webpack browserify requirejs\nnpm install # Install project dependencies\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Build your project using either jspm, webpack, browserify, or requirejs\n# Replace the command with your bundling tool of choice\nwebpack # Example command to bundle using webpack\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/msdeploy", "version": "v1", "shell": "bash"}]}]}
{"id": "315778_1", "jobs": [{"name": "clear-builds", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./clear_builds.ps1\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "31683627_0", "jobs": [{"name": "auto_append", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Your Bash script content here\" >> script.sh", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'GitHub Actions'\ngit config --global user.email 'actions@users.noreply.github.com'\ngit add script.sh\ngit commit -m \"Auto-append script\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "31833554_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "versionRegex='\\d+\\.\\d+\\.\\d+\\.\\d+' # Regex pattern to match version number in the project file\nprojectFile='YourProject.csproj' # Path to your Visual Studio project file\n\ncurrentVersion=$(grep -Po $versionRegex $projectFile)\nnewVersion=\"$(cut -d. -f1,2,3 <<<$currentVersion).$((1 + $(cut -d. -f4 <<<$currentVersion)))\"\n\nsed -i \"s/$currentVersion/$newVersion/\" $projectFile\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\n\ngit add $projectFile\ngit commit -m \"Auto increment build version\" || true\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "31890665_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -scheme YourXcodeProjectScheme -destination 'platform=iOS Simulator,name=iPhone 11'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "31924969_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleDebug", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wzieba/Firebase-Test-Lab-Github-Action", "version": "v1.2", "shell": "bash"}]}]}
{"id": "31986449_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane\nfastlane install_plugins\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane supply --apk $APK_PATH --track alpha", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32013323_0", "jobs": [{"name": "manual_job", "steps": [{"type": "gh_action", "cmd": "", "name": "repo/actions/wait-for-approval", "version": "v1", "shell": "bash"}]}, {"name": "automatic_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Running automated tasks...\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32016388_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}]}, {"name": "database-connect", "steps": [{"type": "shell_cmd", "cmd": "# Example: Connect to PostgreSQL\npsql -h $DB_HOST -U $DB_USER -d your_database -c \"SELECT NOW();\"\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "phonegap-build", "steps": [{"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "phonegap/build-action", "version": "v2", "shell": "bash"}]}]}
{"id": "32042482_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo xcode-select -s /Applications/Xcode.app/Contents/Developer", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourWorkspace.xcworkspace -scheme YourScheme test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32083029_0", "jobs": [{"name": "perl-tidy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shogo82148/actions/setup-perl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cpanm Perl::Tidy", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "perltidy -b lib/*.pl t/*.pl", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit diff --staged --quiet || git commit -m \"Apply Perl::Tidy formatting\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "3210501_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phing build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "32109676_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install\nbrew install ruby # Install any dependencies required for your project\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -project YourProject.xcodeproj -scheme YourScheme", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcrun instruments -w \"Your Device Name\" YourApp.app", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "3220647_0", "jobs": [{"name": "phpunit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit --configuration /path/to/phpunit.xml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32239099_1", "jobs": [{"name": "setup_network_access", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Set-Location -Path ${{ github.workspace }}\n.\\configure_network_access.ps1\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32262295_0", "jobs": [{"name": "add_reviewer", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "32330922_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpcs --standard=PSR2 src", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit --coverage-clover=coverage.xml", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "codecov/codecov-action", "version": "v2", "shell": "bash"}]}]}
{"id": "3236740_0", "jobs": [{"name": "static-analysis", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpstan analyse --level max", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32384965_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "coverity/coverity-scan-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cov-analysis-linux64-2021.09/bin/cov-build --dir cov-int make", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "tar czvf coverity-scan-results.tgz cov-int", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "32464231_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build YourProject.csproj --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "32479251_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nanake/headless-chrome-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your command to start Selenium tests with Chrome here\n# Example: mvn test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "timeout=10800\nstart_time=$(date +%s)\nwhile :\ndo\n  now=$(date +%s)\n  elapsed=$(($now - $start_time))\n  if [ $elapsed -ge $timeout ]; then\n    echo \"Process exceeded time limit. Killing...\"\n    pkill java\n    break\n  fi\n  sleep 60 # Check every minute\ndone\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32527186_0", "jobs": [{"name": "count_posts_by_tags", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nbundle exec jekyll build\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "tags_counts=\"$(jq -r '.tags[]' path/to/your/jekyll/site/_posts/*.md | sort | uniq -c)\"\necho \"$tags_counts\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32555518_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -sSL https://cli.mci.run/install.sh | sh", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "magnum setup --token YOUR_MAGNUM_TOKEN", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "magnum run", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "magnum push", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "magnum trigger YOUR_PRIVATE_REPO", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Workflow completed successfully!\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32585972_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp extension/My_controller.php application/controllers/My_controller.php", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php index.php routes/validate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add application/controllers/My_controller.php\ngit commit -m \"Extend CI_Controller in controllers folder\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32596511_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake db:create\nbundle exec rake db:migrate\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "3269133_1", "jobs": [{"name": "phpcs", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpcs", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32743012_0", "jobs": [{"name": "set_build_settings", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -project path/to/your.xcodeproj -scheme \"YourScheme\" -configuration \"Release\" CONFIGURATION_BUILD_DIR='$(PWD)/build' -target \"YourTarget\" CLANG_ENABLE_MODULES=YES OTHER_SWIFT_FLAGS=\"-D SWIFT_COMPILE_TIME_VALUE=\\\"TRUE\\\"\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"github-actions[bot]@users.noreply.github.com\"\ngit config --global user.name \"github-actions[bot]\"\ngit add .\ngit commit -m \"Update Xcode build settings via terminal\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32759486_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=build_id::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/set-output", "version": "v2", "shell": "bash"}]}]}
{"id": "32815387_0", "jobs": [{"name": "add_projects", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r /path/to/project1/* .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Adding Project1\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r /path/to/project2/* .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Adding Project2\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "32997975_0", "jobs": [{"name": "save-dependencies", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add composer.lock\ngit commit -m \"chore: Update Composer dependencies\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "33022739_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run add-test-properties", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Add HTML properties for test automation\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "33095105_0", "jobs": [{"name": "generate-report", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run generate-report", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "33110549_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit --colors=always tests/Class1Test.php tests/Class2Test.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "33148696_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -NV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane pilot upload", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "3316144_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install httparty\ngem install json\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ruby update_unfuddle_ticket.rb\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "33182534_0", "jobs": [{"name": "upload", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.email \"<your-email>\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add -A", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git commit -m \"Upload project to GitHub\" || echo \"No changes to commit\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "33191163_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "chrislennon/setup-vagrant", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vagrant ssh -c \"cd /vagrant && your_dependency_manager_install_command\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vagrant ssh -c \"cd /vagrant && your_test_command\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vagrant halt", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "33285909_0", "jobs": [{"name": "sonarqube", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "33343904_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install ant\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wget https://archive.apache.org/dist/ant/ivy/2.5.0/apache-ivy-2.5.0-bin.zip\nunzip apache-ivy-2.5.0-bin.zip\nexport IVY_HOME=$RUNNER_TEMP/apache-ivy-2.5.0\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install maven\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wget http://www.phing.info/get/phing-latest.phar\nchmod +x phing-latest.phar\nsudo mv phing-latest.phar /usr/local/bin/phing\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ant build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "java -Divy.home=$IVY_HOME -jar $IVY_HOME/ivy-2.5.0.jar", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phing", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "33344347_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build\n./gradlew sonarqube \\\n  -Dsonar.projectKey=YOUR_PROJECT_KEY \\\n  -Dsonar.organization=YOUR_ORGANIZATION \\\n  -Dsonar.host.url=https://sonarcloud.io \\\n  -Dsonar.login=${{ secrets.SONAR_TOKEN }}\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "IQAndreas/github-sonarqube-action", "version": "v1.1", "shell": "bash"}]}]}
{"id": "33354720_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "pupupulp/setup-ssh-tunnel", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Connection established through SSH tunnel.\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Build success! Sending status to GitHub.\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "33374193_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,OS=latest,name=iPhone 12'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "33402980_0", "jobs": [{"name": "cleanup_and_build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git fetch --prune\ngit reflog expire --expire=1.hour\ngit gc --prune=now\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourProject.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11' build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "33411571_0", "jobs": [{"name": "auto_stage_branch", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit commit -m \"Auto stage changes\" || true\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v1", "shell": "bash"}]}]}
{"id": "33438373_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "soren1711/vsonline-action", "version": "v1", "shell": "bash"}]}]}
{"id": "33576779_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install bundler\nbundle install\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourApp.xcworkspace -scheme YourApp -destination 'platform=iOS Simulator,name=iPhone 12' | xcpretty", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [ $? -ne 0 ]; then\n  echo \"Tests failed. Sending notification to Apple CI bots.\"\n  # Add code here to send notification to Apple CI bots, for example:\n  # curl -X POST 'https://apple-ci-bot.com/notify' -d 'message=Test failures detected in iOS tests.'\nelse\n  echo \"Tests passed successfully!\"\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "33634504_0", "jobs": [{"name": "import", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/import", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Import process started. Check the GitHub repository for import status.\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "33808303_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "w9jds/firebase-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Build your Android/iOS project\n./gradlew assembleRelease\n# Upload the distribution to Crashlytics\n./gradlew crashlyticsUploadDistributionRelease\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rtCamp/action-slack-notify", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rtCamp/action-slack-notify", "version": "v2", "shell": "bash"}]}]}
{"id": "33865283_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require codeigniter/framework", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php index.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "33871306_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install && npm run production", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easingthemes/ssh-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "33900581_0", "jobs": [{"name": "nest_repos", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git submodule add <submodule_repository_url> <submodule_path>\ngit submodule update --init --recursive\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.name \"GitHub Actions\"\ngit config user.email \"<your_email>\"\ngit commit -am \"Add submodule\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/push-repo-action", "version": "v1", "shell": "bash"}]}]}
{"id": "33902158_0", "jobs": [{"name": "continue_pull_request", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b continue-${{ github.event.pull_request.number }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"This is a new line added by GitHub Actions\" >> example.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'GitHub Actions'\ngit config --global user.email 'actions@users.noreply.github.com'\ngit add .\ngit commit -m \"Automated update by GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "34051695_0", "jobs": [{"name": "push-commit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout branch-b\ngit merge origin/branch-a --no-commit\ngit commit -m \"Merged branch-a into branch-b\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "34086051_0", "jobs": [{"name": "sonarqube", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarqube-scan-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your test-running command here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "34106907_0", "jobs": [{"name": "merge_branches", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b merged-branch", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git merge --no-commit --no-ff feature-branch", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git rm -r --cached path/to/file_or_folder", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.name 'Your Name'\ngit config user.email 'youremail@example.com'\ngit commit -am \"Merge feature-branch into main with file/folder exclusion\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "34123105_0", "jobs": [{"name": "delete_superseded_builds", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "345547_0", "jobs": [{"name": "generate-code", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mathworks/matlab-actions/setup", "version": "v0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "matlab -batch \"genCode('path/to/your/model.slx')\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Generated MATLAB code\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "34564791_0", "jobs": [{"name": "clone-laravel-project", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer self-update\ncomposer install --no-scripts\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer create-project laravel/laravel my-laravel-app \"5.1.*\" --prefer-dist", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require torann/geonames", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp .env.example .env", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "34598087_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "chrispat/Setup-Eclipse", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "/opt/eclipse/eclipse -nosplash -application org.eclipse.cdt.managedbuilder.core.headlessbuild -data <path-to-your-eclipse-workspace> -importAll <path-to-your-project> -cleanBuild all\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "34621124_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mindrunner/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "34655381_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install\nnpm install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "34733359_0", "jobs": [{"name": "add-unversioned-file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"This is an unversioned file created using GitHub Actions\" > unversioned-file.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add unversioned-file.txt\ngit commit -m \"Add unversioned file\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "34762063_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r /path/to/your/project/* $GITHUB_WORKSPACE\ngit config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Add project files to repository\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "34813129_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet sonarscanner begin /k:\"your_project_key\" /d:sonar.login=\"${{ secrets.SONAR_TOKEN }}\" /d:sonar.host.url=\"https://sonarcloud.io\" /d:sonar.cs.opencover.reportsPaths=\"**/coverage.opencover.xml\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test --no-build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet sonarscanner end /d:sonar.login=\"${{ secrets.SONAR_TOKEN }}\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "34813778_0", "jobs": [{"name": "notify_on_review", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dezull/action-hipchat", "version": "v2", "shell": "bash"}]}]}
{"id": "34821023_0", "jobs": [{"name": "xcode_ui_tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourAppScheme test | xcpretty -r junit\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "3491849_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pip install -r requirements.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "hg clone https://your-mercurial-repo-url\ncp -r your-mercurial-repo-folder/* $GITHUB_WORKSPACE/\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/deploy-appengine", "version": "main", "shell": "bash"}]}]}
{"id": "35017724_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ${{ secrets.SERVER_KEY }} > serverKey.pem", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "extenda/actions-webstore", "version": "v1", "shell": "bash"}]}]}
{"id": "35043733_0", "jobs": [{"name": "create_nested_repositories", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir nested-repo", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git submodule add <repository_url> nested-repo", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Add nested repository as submodule\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "35054298_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B clean verify", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-html-publish", "version": "v2", "shell": "bash"}]}]}
{"id": "35062911_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35110123_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cxx", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\nmake\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35112185_0", "jobs": [{"name": "check_status", "steps": [{"type": "gh_action", "cmd": "", "name": "github-script/wait", "version": "main", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [ \"${{ steps.wait-for-status.outputs.status }}\" != \"success\" ]; then\n  echo \"The status check did not pass. Exiting the workflow.\"\n  exit 1\nelse\n  echo \"The status check is successful. Proceeding with further actions.\"\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35122791_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "reactivecircus/android-emulator-runner", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "adb devices", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35182471_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your test commands here\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}]}]}
{"id": "35204223_0", "jobs": [{"name": "merge_pull_request", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git fetch origin ${{ github.event.pull_request.head.ref }}\ngit checkout -b pr-branch FETCH_HEAD\ngit merge ${{ github.event.pull_request.head.sha }}\ngit push origin pr-branch\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "35214770_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nbundle exec pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean test -workspace YourProject.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11' CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO ONLY_ACTIVE_ARCH=NO\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35260325_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=Release", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add deployment steps here\n# For example, copying files to a specific location\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35278957_0", "jobs": [{"name": "modify-pull-request", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Modifying the pull request code\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Modify pull request\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "35311315_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "r0adkll/setup-android-emulator", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "emulator -avd <avd-name> -no-window", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35317285_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -workspace YourProject.xcworkspace -scheme YourScheme -archivePath YourApp", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath YourApp.xcarchive -exportOptionsPlist exportOptions.plist -exportPath build", "name": "", "version": "", "shell": "bash"}]}, {"name": "promote", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane deliver --username \"your_apple_id@example.com\" --app_identifier \"your.app.bundle.id\" --ipa \"build/YourApp.ipa\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35367683_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud app deploy app.yaml --quiet\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35458369_0", "jobs": [{"name": "simulate-location", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install cocoapods\npod install\nxcodebuild -resolvePackageDependencies\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourAppScheme -workspace YourApp.xcworkspace -destination 'platform=iOS Simulator,name=iPhone 12' -allowProvisioningUpdates \\\n-gpx /path/to/your/location.gpx clean test\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35499859_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "$encryptedCredentials = $env:MY_CREDENTIALS\n$credentials = ConvertFrom-SecureString $encryptedCredentials\n$username = $credentials.Username\n$password = $credentials.Password\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Your deployment script using $username and $password goes here\n# Example:\n# $cred = New-Object System.Management.Automation.PSCredential($username, (ConvertTo-SecureString $password -AsPlainText -Force))\n# YourDeploymentFunction -Credential $cred\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "$expirationDate = \"2023-12-31\"\n$currentDate = Get-Date\n\nif ($currentDate -ge $expirationDate) {\n  throw \"Credentials have expired. Please update before deployment.\"\n} else {\n  Write-Output \"Credentials are valid.\"\n}\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35547936_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -workspace YourWorkspace.xcworkspace -scheme YourScheme -configuration Release -archivePath YourArchivePath.xcarchive PROVISIONING_PROFILE=\"your_provisioning_profile_uuid\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath YourArchivePath.xcarchive -exportPath YourExportPath -exportOptionsPlist ExportOptions.plist", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "35551739_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -h 127.0.0.1 -u test_user -p${{ secrets.MYSQL_ROOT_PASSWORD }} test_db < path/to/database/schema.sql\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35563012_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"[build | passing]\" > build_status.txt", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "35574502_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Pehr/silea-trigger-pipeline-gerrit-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35599112_0", "jobs": [{"name": "update_default_branch", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [ \"$(git symbolic-ref --short HEAD)\" != \"main\" ]; then\n  echo \"::set-output name=update_branch::true\"\nelse\n  echo \"::set-output name=update_branch::false\"\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git branch -m main new-main\ngit push origin new-main\ngit symbolic-ref refs/heads/main refs/heads/new-main\ngit push origin --delete main\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "repo-sync/github-action", "version": "v2", "shell": "bash"}]}]}
{"id": "35641638_0", "jobs": [{"name": "copy-templates", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p .github\ncp -r path/to/templates/.github/PULL_REQUEST_TEMPLATE/ .github/\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "35642524_0", "jobs": [{"name": "send_email", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Run your script that generates the email content\nscript_output=$(your_script.sh)\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sendgrid/email-action", "version": "v1", "shell": "bash"}]}]}
{"id": "35686138_0", "jobs": [{"name": "install_gem", "steps": [{"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install specific_gem_name --version 'x.x.x'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35751042_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem build your_gem_name.gemspec\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem push your_gem_name-*.gem\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35769047_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "skcript/hockeyapp-action", "version": "v1", "shell": "bash"}]}]}
{"id": "35782425_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -v", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -sS https://getcomposer.org/installer | php", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php composer.phar install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35782953_0", "jobs": [{"name": "pull-and-commit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout <commit_sha>", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit commit -am \"Commit pulled changes\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "3580240_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "skjolber/just-build", "version": "main", "shell": "bash"}, {"type": "shell_cmd", "cmd": ".\\NAnt.exe -buildfile:build.build\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Build completed\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35912145_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "SamKirkland/FTP-Deploy-Action", "version": "3.1", "shell": "bash"}]}]}
{"id": "35919983_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build:report", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v3", "shell": "bash"}]}]}
{"id": "35935356_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B package", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/scp-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sshpass -p ${{ secrets.PASSWORD }} ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} -p ${{ secrets.PORT }} \"unzip /path/to/destination/*.zip -d /path/to/destination/\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35981846_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean package", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "36129781_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean build -workspace YourProject.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' CODE_SIGNING_REQUIRED=NO\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "36131639_0", "jobs": [{"name": "check_approval", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}, {"type": "shell_cmd", "cmd": "approvals=$(echo \"${{ steps.pr_approved.outputs.data }}\" | jq '.[] | select(.state == \"APPROVED\")' | jq 'select(length == 0) | length')\nif [ $approvals -eq 0 ]; then\n  echo \"This PR must be approved before merging.\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "36236813_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.4", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /t:Build /p:Configuration=Release", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msdeploy", "version": "v1.0.2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msdeploy -verb:sync -source:package=\"<path-to-package>\" -dest:auto", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "36241966_0", "jobs": [{"name": "update_and_merge", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your update script or commands here\necho \"Updating sources...\"\n# For example, you can git pull changes\ngit pull\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.name 'Your Name'\ngit config user.email 'your.email@example.com'\ngit add .\ngit commit -m \"Auto-update sources $(date +%F)\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2.8.0", "shell": "bash"}]}]}
{"id": "36402661_0", "jobs": [{"name": "run_ios_simulator", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourProject.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,OS=latest,name=iPhone 11' build test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcrun simctl list\nxcrun instruments -s devices\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcrun simctl boot \"iPhone 11\"\nxcrun simctl launch booted your.bundle.id\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "36420344_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "reactivecircus/android-emulator-runner", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "adb shell input keyevent 82 &", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chmod +x gradlew", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew connectedAndroidTest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew connectedDebugAndroidTest", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "36424639_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -project YourProject.xcodeproj -scheme YourScheme build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Executing shell command\"\n# Add your shell command here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "3649205_0", "jobs": [{"name": "sourcemonitor", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "aaditya-saxena/setup-sourcemonitor", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Run Sourcemonitor command here\nsourcemonitorcli --project path/to/your/project.smp\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "36521801_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": ".\\path\\to\\your\\script.ps1", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "3656988_0", "jobs": [{"name": "build", "steps": [{"type": "shell_cmd", "cmd": "echo \"##[set-env name=BUILD_ID]100\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i 's/old_project_name/new_project_name/g' README.md # Replace 'old_project_name' with the old project name and 'new_project_name' with the new project name\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'Your Name'\ngit config --global user.email 'youremail@example.com'\ngit add .\ngit commit -m \"Renamed the project and set initial build number\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v0.5", "shell": "bash"}]}]}
{"id": "36654260_0", "jobs": [{"name": "export-ssis-diagram", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /t:Build /p:Configuration=Release /p:Platform=\"Any CPU\" YourSSISProjectFile.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd YourSSISProjectFolder\n\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\SQL\\Common7\\IDE\\CommonExtensions\\Microsoft\\SSIS\\110\\DtsDebugHost.exe\" /diagrams Package.dtsx\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "36778339_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "36802309_0", "jobs": [{"name": "change_credentials", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"NEW_USERNAME=your_new_username\\nNEW_TOKEN=your_new_token\" >> .env", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "alexander-akhmetov/github-secret", "version": "v2", "shell": "bash"}]}]}
{"id": "36814259_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cpp", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "g++ -o my_program main.cpp\n./my_program\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "36847920_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "git pull", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "36928717_0", "jobs": [{"name": "sonarqube", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "SonarSource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "3696629_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "36977420_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\nnpm install\nnpm run build\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "codeship/actions/deploy", "version": "master", "shell": "bash"}]}]}
{"id": "36997898_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "lukka/setup-cmake", "version": "v1.2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msvc", "version": "latest", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "NuGet/setup-nuget", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nuget restore YourSolution.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=Release /p:Platform=x64 YourSolution.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test --configuration Release --logger trx --collect \"Code Coverage\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "37010110_0", "jobs": [{"name": "push_old_commit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "OLD_COMMIT=$(git rev-list -n 1 ${{ github.event.before }} --not ${{ github.event.after }})\necho \"::set-output name=old_commit::$OLD_COMMIT\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b new-branch", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git cherry-pick ${{ steps.commit.outputs.old_commit }}", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/push-subdirectory-to-another-repository", "version": "master", "shell": "bash"}]}]}
{"id": "37015414_0", "jobs": [{"name": "xcode_integration", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "xcode/trigger", "version": null, "shell": "bash"}]}]}
{"id": "37062458_0", "jobs": [{"name": "merge-into-master", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout master", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git merge ${{ github.ref }}\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "37103943_0", "jobs": [{"name": "update-submodule", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git submodule init\ngit submodule update\ngit config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Update submodules\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "37107609_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "macrat/send-keys", "version": "v1", "shell": "bash"}]}]}
{"id": "37231342_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "redhat-actions/oc-cli", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "oc login <OPENSHIFT_SERVER> --token=<OPENSHIFT_TOKEN>", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t <IMAGE_NAME> .\ndocker tag <IMAGE_NAME> <REGISTRY_SERVER>/<PROJECT_NAME>/<IMAGE_NAME>\ndocker push <REGISTRY_SERVER>/<PROJECT_NAME>/<IMAGE_NAME>\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "oc apply -f deployment.yaml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "37251427_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\nmake\n./run_catch_tests\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rlespinasse/test-reporter-action", "version": "v1", "shell": "bash"}]}]}
{"id": "3726888_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test ProjectName.Tests/ProjectName.Tests.csproj", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o ./publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "37278612_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install compass", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "compass compile", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "37280954_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test --configuration Release --no-build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "37291054_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.3", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/azure-pipelines-tfs-login", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nuget restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /t:VSTest /p:VSTestPath=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\TestWindow\\vstest.console.exe\" /p:Platform=\"Any CPU\" /p:Configuration=\"Release\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "37294471_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "aws-actions/aws-codedeploy-github-deploy", "version": "v1", "shell": "bash"}]}]}
{"id": "37362994_0", "jobs": [{"name": "rename_file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mv old_filename new_filename\ngit rm old_filename\ngit add new_filename\ngit commit -m \"Renamed file from old_filename to new_filename\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/push-up-to-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "37405178_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew clean test\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "37405343_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet pack --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nuget/push", "version": "v1", "shell": "bash"}]}]}
{"id": "37421734_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build YourWebProject.csproj --configuration Release\ndotnet publish YourWebProject.csproj --no-restore --configuration Release --output ./publish\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "37512963_0", "jobs": [{"name": "concat_files", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"CSV 1,CSV 2,CSV 3\" > concatenated.csv", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clone <REPOSITORY_URL> additional_repo", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mv concatenated.csv additional_repo/\ncd additional_repo\ngit add concatenated.csv\ngit commit -m \"Add concatenated CSV files\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/push-subdirectory-to-another-repo", "version": "master", "shell": "bash"}]}]}
{"id": "37662267_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}]}, {"name": "notify-on-failure", "steps": [{"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v3", "shell": "bash"}]}]}
{"id": "37720268_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B clean verify", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "37728578_0", "jobs": [{"name": "rework_pr", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"rework-bot@example.com\"\ngit config --global user.name \"Rework Bot\"\ngit checkout -b rework-${{ github.event.pull_request.number }}\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your code changes or fixes here for the rework\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Rework changes\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peter-evans/create-pull-request", "version": "v3", "shell": "bash"}]}]}
{"id": "377629_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-interaction --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit -c web/core/phpunit.xml.dist", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-dev", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "easingthemes/ssh-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "37818879_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install appium appium-webdriverio webdriverio", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": null, "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "appium", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": null, "name": "", "version": "", "shell": "bash"}]}]}
{"id": "37885004_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "swiftwasm/action-setup-swift", "version": "v0.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "swift build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "37892093_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install -y php-pear\npecl install redis\necho \"extension=redis.so\" | sudo tee -a $(php -r 'echo php_ini_loaded_file();')\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -m | grep redis", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "37959631_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wget -c https://wordpress.org/latest.tar.gz\ntar -xvzf latest.tar.gz\nmv wordpress/* .\nrm -rf latest.tar.gz wordpress wp-content/plugins/*\ncp wp-config-sample.php wp-config.php\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\nchmod +x wp-cli.phar\nsudo mv wp-cli.phar /usr/local/bin/wp\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wp config create --dbname=wordpress --dbuser=root --dbpass= --dbhost=localhost --quiet", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Deploying to production... You can add deployment steps here\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38013127_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan migrate", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your deployment script here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38028346_0", "jobs": [{"name": "fork", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "38044020_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python -m pip install --upgrade pip\npip install -r requirements.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pytest --cov=./\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "paambaati/codeclimate-action", "version": "v2.0.1", "shell": "bash"}]}]}
{"id": "38116530_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "fastlane/setup-fastlane", "version": "v3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane release", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38189027_0", "jobs": [{"name": "amend_pull_request", "steps": [{"type": "gh_action", "cmd": "", "name": "ActionsDesk/pull-request-event-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "PR_NUMBER=$(echo ${{ github.event.pull_request.url }} | cut -d'/' -f7)\nGITHUB_TOKEN=$GITHUB_TOKEN hub api --method PATCH /repos/${{ github.repository }}/pulls/${PR_NUMBER} --input '{\"state\": \"open\"}'\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add here the commands to apply your changes to the code\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "PR_NUMBER=$(echo ${{ github.event.pull_request.url }} | cut -d'/' -f7)\nGITHUB_TOKEN=$GITHUB_TOKEN hub api --method PATCH /repos/${{ github.repository }}/pulls/${PR_NUMBER} --input '{\"state\": \"closed\"}'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38203573_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r ./octocat/hello-world/* ./\ngit add .\ngit commit -m \"Forked content from source repo\"\ngit push\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "38220246_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install xcpretty\nbrew install swiftlint\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourProject.xcworkspace -scheme YourScheme clean build | xcpretty\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "swiftlint\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38220778_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "darts-lang/setup-dart", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dart pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dart test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "382482_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "setup-msbuild", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=Release YourDatabaseProject.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your deployment script commands here\n# Example: sqlcmd -S servername -d database -U username -P password -i deploy_script.sql\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38255950_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "roryg/Setup-IIS-Web-Deploy", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msdeploy -verb:sync -source:./dist -dest:iisApp='Default Web Site',wmsvc=$WMSVC_URL,userName=$USERNAME,password=$PASSWORD\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38268119_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "hashicorp/setup-packer", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "packer build path/to/packer/template.json", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install vagrant\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vagrant up", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vagrant ssh -c \"echo 'Hello, Vagrant'\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38269310_0", "jobs": [{"name": "trigger-teamcity-build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/github-script", "version": "v4", "shell": "bash"}, {"type": "shell_cmd", "cmd": "success = ${{ steps.workflow_details.outputs.workflow_run.conclusion == 'success' ? 'true' : 'false' }}\necho \"::set-output name=success::$success\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add script to trigger the TeamCity build here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38312605_0", "jobs": [{"name": "xcode_ui_tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-swift", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -scheme YourAppUITests -destination 'platform=iOS Simulator,name=iPhone 12' | xcpretty", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -scheme YourAppUITests -destination 'platform=iOS Simulator,name=iPhone 12' -resultBundlePath ./TestResults\nxchtmlreport -r ./TestResults -o ./TestResults_html\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "38337694_0", "jobs": [{"name": "check_product_quantity", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "babken/mysqli-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -u root -h 127.0.0.1 < db_schema.sql", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php check_product_quantity.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "3834870_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "santiycr/setup-chromium", "version": "v3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/spec run path/to/spec/files", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "3837657_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android-emulator-actions/setup-android", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android-emulator-actions/start-emulator", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sleep 30", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew connectedCheck -Pandroid.testInstrumentationRunnerArguments=\"--emulator-5554 sendSMS from=1234567890 text='Test message'\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android-emulator-actions/stop-emulator", "version": "v2", "shell": "bash"}]}]}
{"id": "384036_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\ncmake --build .\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd build\nctest --output-on-failure\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd build\n# Run your performance benchmarking tool here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38461314_0", "jobs": [{"name": "run_tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec cucumber", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v2", "shell": "bash"}]}]}
{"id": "38552628_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild build -scheme YourScheme -workspace YourWorkspace.xcworkspace -configuration Debug", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38559218_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler jekyll\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec jekyll build\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"var repoMetadata = {\n  name: '${{ github.repository }}',\n  owner: '${{ github.actor }}',\n  description: '${{ github.event.repository.description }}',\n  url: '${{ github.event.repository.html_url }}'\n  }\" > github-metadata.js\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add github-metadata.js\ngit commit -m \"Update repository metadata in JavaScript file\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38567118_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "redhat-actions/oc", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.OPENSHIFT_TOKEN }}\" | oc login \"${{ secrets.OPENSHIFT_SERVER }}\" --token=-\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd path/to/your/application\noc apply -f openshift-manifests/\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38591980_0", "jobs": [{"name": "trigger-build", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "3862586_0", "jobs": [{"name": "amend_web_config", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i 's/original_content/new_content/g' path/to/web.config\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add path/to/web.config\ngit commit -m \"Amend web config file for test fixtures\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "38635812_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easingthemes/ssh-deploy", "version": "v2.0.0", "shell": "bash"}]}]}
{"id": "38680366_0", "jobs": [{"name": "add-machine-account", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mcr.microsoft.com/azure-sql-db-pool/sql-adt-latest:latest", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your commands here to add a new SQL Server machine account\n# For example: sudo useradd newuser\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Add new SQL Server machine account\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "387164_0", "jobs": [{"name": "trigger-downstream", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}, {"name": "aggregate-results", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Customize this script to aggregate test results\n# Example: cat downstream-job-1/results.xml downstream-job-2/results.xml > aggregated-results.xml\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "38746336_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd downstream-project\nmvn clean install\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wei/github-pullrequest-builder", "version": "master", "shell": "bash"}]}]}
{"id": "38753538_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test --no-build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jolo/actions/vsts-release", "version": "master", "shell": "bash"}]}]}
{"id": "38773233_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec jekyll build --destination _site", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "38783657_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo -e \"\\n\\$config['sess_cookie_name'] = 'shared_session_cookie_name';\" >> application/config/config.php\necho -e \"\\$config['sess_save_path'] = 'ci_sessions';\" >> application/config/config.php\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Update session configuration\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "38839495_0", "jobs": [{"name": "sonarqube-analysis", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarqube-scan-action", "version": "master", "shell": "bash"}]}]}
{"id": "38848295_0", "jobs": [{"name": "run_fitnesse_slim_tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Command to execute FitNesse slim tests\n# Replace this with your actual command to run FitNesse tests\n./run_fitnesse_tests.sh\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v3", "shell": "bash"}]}]}
{"id": "38873252_0", "jobs": [{"name": "phpunit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./vendor/bin/phpunit tests/MyTest.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38929135_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B clean install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ::set-output name=exit_code::${{ steps.maven.results.code }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B clean install", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38950635_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "bahmutov/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build connectedCheck", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38965600_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nbundle exec pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourProject.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 13'", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "38976124_0", "jobs": [{"name": "commit_generation_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git diff-tree --no-commit-id --name-only -r HEAD > current_commit_files.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Define the list of files to pick (include) in the commit\nFILES_TO_PICK=\"file1.txt file2.txt\"\n\nfor file in $FILES_TO_PICK; do\n  if [ -f $file ]; then\n    git add $file\n  fi\ndone\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Define the list of files to exclude from the commit\nFILES_TO_EXCLUDE=\"file3.txt file4.txt\"\n\nfor file in $FILES_TO_EXCLUDE; do\n  if [ -f $file ]; then\n    git reset HEAD $file\n  fi\ndone\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git commit -m \"Generate new commit with selected files\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/gh-push-action", "version": "v1", "shell": "bash"}]}]}
{"id": "39032462_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cpp", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -B build .\ncmake --build build\n./build/test_runner\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "grep -r \"gtest_filter\" --exclude=\"*.cpp\" --exclude=\"*.hpp\" .\nif [[ $? -eq 0 ]]; then\n  echo \"Found gtest_filter in non-gtest test files\"\n  exit 1\nelse\n  echo \"No gtest_filter found in non-gtest test files\"\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39077904_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build . -t myapp", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-docker", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run --rm myapp", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"user:x:$(id -u):$(id -g):user:/home/user:/bin/sh\" >> /etc/passwd", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cat /etc/passwd | grep user", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo -u user whoami", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39128998_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpspec run", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39150240_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-msvc", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\n# For example:\n# - msbuild Solution.sln /p:Configuration=Release\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "39272211_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "githubrm/web-app-deployment", "version": "v2", "shell": "bash"}]}]}
{"id": "39288918_0", "jobs": [{"name": "sleep_task", "steps": [{"type": "shell_cmd", "cmd": "echo \"Starting the Sleep Task Workflow\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "octokit/wait-for-activity", "version": "v2.1.3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Sleep Task Workflow Completed Successfully\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39319739_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "redhat-actions/oc-login", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "oc project <your-project-name>\noc apply -f <path-to-your-openshift-manifests>\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39364949_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install cocoapods\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -scheme YourScheme -workspace YourWorkspace.xcworkspace -configuration Release -archivePath $PWD/build/YourApp.xcarchive", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -exportOptionsPlist ExportOptions.plist -archivePath $PWD/build/YourApp.xcarchive -exportPath $PWD/build/YourApp.ipa", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "39416731_0", "jobs": [{"name": "run_sas_marketing_campaign", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sassoftware/sas-container-recipes/sas-viya-containers", "version": "main", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to execute SAS marketing campaign\n# For example:\n# sas /path/to/marketing_campaign_program.sas\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39453624_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "cloudfoundry/cli-github-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cf push <APP_NAME> -b <BUILD_PACK> -p <PATH_TO_ARTIFACT>\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39491626_0", "jobs": [{"name": "run_php_script", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php index.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "3958892_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Execute build steps with PowerShell here\n# Example: Invoke-Expression './build.ps1'\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "shell_cmd", "cmd": "# Execute deployment steps to Hudson here using PowerShell\n# Example: Invoke-Expression './deploy.ps1'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39594781_0", "jobs": [{"name": "email-notification", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-email", "version": "v2", "shell": "bash"}]}]}
{"id": "39594867_0", "jobs": [{"name": "reviewdog", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run lint", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "reviewdog/action-checkstyle", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "reviewdog/action-checkstyle", "version": "v2", "shell": "bash"}]}]}
{"id": "39619695_0", "jobs": [{"name": "update_version", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Example: Update version in a file named 'version.txt'\nVERSION=$(< version.txt)\nNEW_VERSION=$((VERSION + 1))\necho $NEW_VERSION > version.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add version.txt\ngit commit -m \"Auto-update application version to $NEW_VERSION\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "39636617_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to trigger TFS build here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39700895_0", "jobs": [{"name": "remove-git-lock", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [ -f .git/index.lock ]; then\n  rm .git/index.lock\n  echo \"Git lock file removed\"\nelse\n  echo \"No Git lock file found\"\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Remove git lock file before commit\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "39703231_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -scheme YourAppScheme -destination 'platform=iOS Simulator,name=iPhone 12' -enableCodeCoverage YES | tee xcodebuild.log", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Insert logic to capture screenshots for the specific test case\necho \"Capturing and uploading screenshots for -[apptests textexample]\"\n# Example script to capture screenshots\ncapture_script.sh\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "39714753_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ReactiveCircus/android-emulator-runner", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "adb devices", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "adb connect emulator-5554", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39717998_0", "jobs": [{"name": "functions", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php my_script_to_edit_insert_functions.php\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"<your-email>\"\ngit config --local user.name \"<your-username>\"\ngit add .\ngit commit -m \"Automated function editing and inserting\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39727505_0", "jobs": [{"name": "publish", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rm -rf .git", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git init\ngit config user.email \"you@example.com\"\ngit config user.name \"Your Name\"\ngit add .\ngit commit -m \"Initial commit without history\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "39741782_0", "jobs": [{"name": "behat", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-interaction --no-suggest --prefer-dist", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp behat.yml.dist behat.yml\nsed -i 's/database_username/root/g' behat.yml\nsed -i 's/database_password/root/g' behat.yml\nsed -i 's/database_name/testdb/g' behat.yml\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/behat", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39786492_0", "jobs": [{"name": "send_email_notification", "steps": [{"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v3", "shell": "bash"}]}]}
{"id": "39798351_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,OS=14.5,name=iPhone 11' -enableCodeCoverage YES\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcrun simctl ui <device> permissionalert get <identifier>\nxcrun simctl ui <device> permissionalert update <identifier> accept\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39843189_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "repo-sync/trigger-workflow", "version": "v2", "shell": "bash"}]}]}
{"id": "40042811_0", "jobs": [{"name": "build-and-release", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o ${{ github.workspace }}/publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/azure-devops-sprint-boards-app-actions/trigger-release", "version": "master", "shell": "bash"}]}]}
{"id": "40068013_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "cirrus-actions/setup-git-bash", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd ${{ matrix.services }}\nnpm install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd ${{ matrix.services }}\nnpm run build\nnpm test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd ${{ matrix.services }}\n# Add deployment commands here based on your specific deployment strategy\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40087902_0", "jobs": [{"name": "nunit_parser_fix", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install nuget -y", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nuget install NUnit.Console -Version 3.12.0 -OutputDirectory $GITHUB_WORKSPACE/packages", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mono $GITHUB_WORKSPACE/packages/NUnit.Console.3.12.0/tools/nunit3-console.exe YourTest.dll", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i 's/quarantined=\"True\"/quarantined=\"False\"/g' TestResult.xml", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Enflo/publish-unit-test-result-action", "version": "v1.1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rm -r $GITHUB_WORKSPACE/packages", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40122790_0", "jobs": [{"name": "junit-tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "EnricoMi/publish-unit-test-result-action", "version": "v1", "shell": "bash"}]}]}
{"id": "4019194_0", "jobs": [{"name": "move_svn", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install subversion", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "svn checkout http://your-svn-repo-url local_svn_repo", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git init svn_to_github\ncd local_svn_repo\nsvn upgrade\ncd ..\ncp -R local_svn_repo/. svn_to_github/.\ncd svn_to_github\ngit add .\ngit commit -m \"Initial migration from SVN to GitHub\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "40192557_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-gcloud", "version": "v0.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth activate-service-account --key-file=${{ secrets.GCP_SA_KEY }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud app deploy app.yaml --quiet", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40212598_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean build -workspace YourApp.xcworkspace -scheme YourScheme", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourScheme -derivedDataPath ./derivedData test -enableCodeCoverage YES", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "COVERAGE=$(cat ./derivedData/Build/Logs/Test/*.xcresult/*/Action.xccovreport | jq '.targets[] | select(.name == \"YourApp\").lines | .coverage')\necho \"Current coverage is $COVERAGE\"\n# Use curl or another tool to send coverage value to a specific endpoint\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40237720_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shogo82148/setup-msys2", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "choco install powershell --yes", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./path/to/your/powershell_script.ps1\n", "name": "", "version": "", "shell": "pwsh"}]}]}
{"id": "40299084_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install bundler\nbundle install\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourApp -destination 'platform=iOS Simulator,name=iPhone 11' build test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${YOUR_API_KEY}\" > Secrets/api_key.plist\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Any deployment steps (e.g. Upload to App Store/TestFlight)\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "4030997_0", "jobs": [{"name": "test_silverlight_app", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jlesage/firefox:latest", "version": null, "shell": "bash"}]}]}
{"id": "4031679_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./vendor/bin/phpcs", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40391011_0", "jobs": [{"name": "edit-file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Text to add\" >> file-to-edit.txt\necho \"Text to replace\" > another-file.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Edit files via GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}, {"name": "execute-project", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to execute your project here\necho \"Executing the project...\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40392410_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-ccache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcc -o test_program test_program.c", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./test_program\nexit_code=$?\nif [ $exit_code -ne 0 ]; then\n  echo \"ERROR: fread test failed\"\n  exit 1\nelse\n  echo \"fread test passed\"\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40493286_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build and test commands here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=hash::$(git rev-parse --short $GITHUB_SHA)\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git tag v$RUNNER_OS-${{ steps.commit_hash.outputs.hash }}", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "405192_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "robertsaul/SQLServer-Setup", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "choco install \"visualstudio2019-workload-ssdt\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sqlpackage /a:Publish /tsn:localhost /tdn:YourDatabaseName /tu:sa /tp:YourPassword /sf:PathToYourBacpacFile.bacpac", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Commands to run tests on the database schema or data\n# Eg. tSQLt tests, etc.\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sqlpackage /a:Script /sf:PathToYourDatabaseProject.dacpac /op:GeneratedScript.sql", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40582857_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean install -B", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "atlassian/git-ftp-action", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ActiveCampaign/upload-to-artifactory-action", "version": "v1", "shell": "bash"}]}]}
{"id": "40640795_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest --prefer-dist", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest --prefer-dist", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your deployment script here\n# Example: rsync -avz --delete . user@hostname:/path/to/deployment\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40669149_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean test -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' CODE_SIGN_IDENTITY=\"iPhone Developer\" PROVISIONING_PROFILE=\"YourProvisioningProfileUUID\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40704801_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dante-ev/texlive-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pdflatex -interaction=nonstopmode main.tex\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "40710223_0", "jobs": [{"name": "composer", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer config --global github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require your-forked-repository/package-name", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40739287_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run lint", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "40794023_0", "jobs": [{"name": "image_processing", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install php7.4-gd", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php index.php image resize", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Resize uploaded images\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40795688_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourWorkspace.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' build test\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "4089731_0", "jobs": [{"name": "send_notification", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=url::http://localhost:yourPortNumber\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v3", "shell": "bash"}]}]}
{"id": "4093336_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "akhileshns/heroku-deploy", "version": "v3.5.8", "shell": "bash"}]}]}
{"id": "40963418_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "msys2/action/setup-msys2", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pacman -Sy --noconfirm mingw-w64-x86_64-toolchain cmake make\npacman -Sy --noconfirm git zip\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\nmake\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir release\ncp <path_to_your_executable> release/\ncd release\nzip -r my_software_nightly.zip ./\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "40965136_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --prefer-dist", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install -g yarn", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "yarn install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "yarn encore production", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "akhileshns/heroku-deploy", "version": "v3.6.6", "shell": "bash"}]}]}
{"id": "40981541_0", "jobs": [{"name": "screenshot", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run screenshots", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "zip -r screenshots.zip screenshots", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v3", "shell": "bash"}]}]}
{"id": "41014280_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "webfactory/ftp-upload-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "candle MyInstaller.wxs", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "light MyInstaller.wixobj", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "candle MyInstaller.wxs -ext WixUIExtension", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "41028185_0", "jobs": [{"name": "setup", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install\ngem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "test", "steps": [{"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourApp.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11 Pro Max'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "41081171_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "microsoft/azure-pipelines-github-action", "version": "v1", "shell": "bash"}]}]}
{"id": "41133548_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dante-ev/working-environment", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pdflatex -interaction=nonstopmode main.tex\npdflatex -interaction=nonstopmode main.tex\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/create-release", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-release-asset", "version": "v1", "shell": "bash"}]}]}
{"id": "41143012_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cpp", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\nmake\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd build\nctest\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "10056582_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-go", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "go build -v", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "go test ./...", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "go build -o app", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "softprops/actions/release", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-release-asset", "version": "v1", "shell": "bash"}]}]}
{"id": "10141640_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install rake\ngem install your_dbdeploy_gem_name # Replace with the actual dbdeploy.net gem name\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rake your_dbdeploy_task_name # Replace with the actual Rake task for dbdeploy\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "101786_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shogo82148/actions/setup-perl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cpanm --installdeps .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "prove -l t/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "perlcritic . --verbose 10", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "10232042_0", "jobs": [{"name": "interact_with_github_and_puppet", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "REPO_NAME=$(basename -s .git `git config --get remote.origin.url`)\necho \"Repository name: $REPO_NAME\"\nOWNER=$(echo \"${GITHUB_REPOSITORY}\" | cut -d \"/\" -f 1)\necho \"Owner: $OWNER\"\ncurl -s -H \"Authorization: token $GITHUB_TOKEN\" \"https://api.github.com/repos/$OWNER/$REPO_NAME\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "puppetlabs/setup-puppet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bolt command run 'echo \"Hello, Puppet!\"' --nodes localhost\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "10242059_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake jasmine:ci\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "10249302_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o ${{github.workspace}}/publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "10278754_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "lukka/get-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -S . -B build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build --parallel ${{ matrix.parallel-evaluations }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build --target test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "10280526_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpunit --coverage-clover=clover.xml", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "10376818_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update && sudo apt-get install -y doxygen graphviz", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd path/to/your/code\ndoxygen Doxyfile\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "10515981_0", "jobs": [{"name": "ios_build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to build iOS app here\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "android_build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to build Android app here\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "blackberry_build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to build BlackBerry app here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "10546885_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build --no-daemon", "name": "", "version": "", "shell": "bash"}]}, {"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew test --no-daemon", "name": "", "version": "", "shell": "bash"}]}, {"name": "sonar", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "10657820_2", "jobs": [{"name": "checkout", "steps": [{"type": "shell_cmd", "cmd": "echo \"::set-output name=content::$(cat input.yml)\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}]}]}
{"id": "10711994_0", "jobs": [{"name": "lock", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "foulou/gha-lock", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands of the job that requires exclusive access to the repository\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "foulou/gha-lock", "version": "v2", "shell": "bash"}]}]}
{"id": "10738624_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install cocoapods\npod install --project-directory=Path/To/Workspace\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace Path/To/Workspace/YourWorkspace.xcworkspace -scheme YourScheme -sdk iphonesimulator -configuration Debug", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "10803469_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec jekyll build", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "easingthemes/ssh-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "11051925_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake db:setup\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake spec\necho \"Coverage report:\"\nbundle exec rake spec:features:coverage:validate\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "11101725_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands here to link your CMS or tool with the GitHub repository\n# Example: git submodule add <CMS/Tool Repository URL>\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit commit -am \"Link CMS/Tool with GitHub\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "11148362_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install lftp -y", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"set ftp:ssl-force true\" >> ~/.lftprc\necho \"set ssl:verify-certificate no\" >> ~/.lftprc\necho \"open -u ${{ secrets.FTP_USERNAME }},${{ secrets.FTP_PASSWORD }} ${{ secrets.FTP_SERVER }}\" >> ~/.lftprc\necho \"mirror -R ./path_to_php_app /remote_path_on_ftp\" >> ~/.lftprc\nlftp -e 'source ~/.lftprc; quit'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "11304658_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wget -q https://dl.google.com/android/repository/android-ndk-r21d-linux-x86_64.zip -O android-ndk.zip\nunzip -q android-ndk.zip -d $RUNNER_TOOL_CACHE\nexport ANDROID_NDK_HOME=$RUNNER_TOOL_CACHE/android-ndk-r21d\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd path/to/your/android/project\n./gradlew assembleRelease\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "11344928_0", "jobs": [{"name": "interrupt_and_set_status", "steps": [{"type": "gh_action", "cmd": "", "name": "appleboy/gh-action-shell", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo 'This is the main step and will only run if pre-step was successful'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "11346485_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=${{ matrix.config }} YourSolution.sln", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "11354827_0", "jobs": [{"name": "build-and-test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "action/setup-flex-sdk", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Compile and run your FlexUnit 4 tests here\n# Example command:\nadl path/to/your-app.xml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "11364237_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phing", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1145050_0", "jobs": [{"name": "backup_hudson_ci_files", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p hudson_backup\ncp -r /path/to/hudson/files hudson_backup\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "11561566_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install vlad", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "export VLAD_PATH=\"path/to/your/vladfile.rb\"\nexport SSH_KEY=\"$SSH_PRIVATE_KEY\" # Add your SSH private key as a GitHub secret\n\necho \"$SSH_KEY\" > deploy_key\nchmod 600 deploy_key\n\nvlad deploy production VLAD_PATH=$VLAD_PATH SSH_KEY=deploy_key\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "11599334_0", "jobs": [{"name": "performance-test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -project YourApp.xcodeproj -scheme YourScheme clean build test -destination 'platform=iOS Simulator,name=iPhone 13' | xcpretty\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Run your performance test command here\n# Example: fastlane ios run_performance_tests\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "11683235_0", "jobs": [{"name": "create-project", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update && sudo apt-get install -y subversion", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "svn checkout <SVN_REPO_URL> new_project", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/create-repo", "version": "v1", "shell": "bash"}]}]}
{"id": "11799340_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install git -y", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd $GITHUB_WORKSPACE", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git pull", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -v", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "11827153_0", "jobs": [{"name": "set-permissions", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-batch-task-plugin", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "batch-task-plugin set-permissions --target-repo \"<target-repo>\" --permissions \"<permissions>\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "11832674_0", "jobs": [{"name": "behat", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -h 127.0.0.1 -u root --password=root -e \"CREATE DATABASE IF NOT EXISTS sample_db_test;\"\nphp artisan migrate --env=testing\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/behat", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "11969732_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cxx", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "make clean\nscan-build --status-bugs make\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "1198789_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shogo82148/actions-setup-perl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cpanm --installdeps .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "perl your_script.pl", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12032983_0", "jobs": [{"name": "exclude_subdirectories", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Get list of all directories in the repository\ndirs=$(find . -type d)\n\n# Loop through each directory\nfor dir in $dirs; do\n  if [[ -d \"$dir/.git\" ]]; then\n    # Check if the directory is a Git repository\n    git_check_ignore=$(git check-ignore -q $dir)\n    if [[ -z \"$git_check_ignore\" ]]; then\n      # If not ignored by Git, add it to .gitignore\n      echo $dir >> .gitignore\n    fi\n  fi\ndone\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit diff --staged --quiet || git commit -m \"Exclude Git subdirectories from parent repository using .gitignore\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "12045289_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install --jobs 4 --path $GITHUB_WORKSPACE/.bundles", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake your_task_name_here", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12067640_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B package --file pom.xml", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn exec:java", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn verify -Pintegration-test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": null, "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12078317_0", "jobs": [{"name": "janky_task", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install janky\ngem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "janky", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12101061_0", "jobs": [{"name": "combine_repositories", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v3", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r <path-to-repo2-files> <path-to-repo1-files> # Example operation to merge repository 2 into repository 1\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'GitHub Actions'\ngit config --global user.email 'actions@users.noreply.github.com'\ngit add .\ngit commit -m \"Combine repositories\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "12155401_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.email \"actions@github.com\"\ngit config user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git diff --exit-code || (echo \"Uncommitted changes found. Please commit them before pushing.\" && exit 1)\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build and test commands here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git commit -am \"auto build updates\" || (echo \"No changes to commit\" && exit 0)\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "12248623_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jeroen-de-groot/setup-delphi", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild YourProject.dproj /target:Build /property:Configuration=Debug\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "YourProject.exe -autotest\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1228170_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "msvc-profile/setup-msvc", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=Release YourSolution.sln", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12308849_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android/setup-android", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleDebug", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12317013_0", "jobs": [{"name": "integration-test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "monty5811/rdp-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run integration-test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Stopping VM...\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12407560_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B clean install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-sarif", "version": "v1", "shell": "bash"}]}]}
{"id": "12409546_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -l .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12471469_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-sqltoolsscripter", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your SSAS and SSRS build commands here\n# Example: msbuild YourSolution.sln /p:DeployOnBuild=true /p:Configuration=Release\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your SSAS and SSRS deployment commands here\n# Example: Execute-ASCmd -Server \"YourSSASInstance\" -InputFile \"YourSSASProject.xmla\"\n# Example: rs.exe -i YourSSRSProject.rss /s http://YourSSRSInstance/ReportServer\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to generate deployment report or notifications\n# Example: echo \"SSAS and SSRS deployment completed successfully.\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12487292_0", "jobs": [{"name": "release", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker://semanticrelease/cli", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-env name=NEW_VERSION::$(node -p \"require('./package.json').version\")\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git commit -am \"Update version to $NEW_VERSION\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "12526851_0", "jobs": [{"name": "rspec", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12639159_0", "jobs": [{"name": "encrypt_values", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.SENSITIVE_VALUE }}\" > sensitive_value.txt", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "chp-labs/githubsecrets", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"ENCRYPTED_SECRET=${{ steps.enc.outputs.secret }}\" >> $GITHUB_ENV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo $ENCRYPTED_SECRET", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1274226_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "matleonard/myeclipse-setup", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your custom CI tasks here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12755268_0", "jobs": [{"name": "php-check", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12756002_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "version=$(date +%Y.%m.%d)-$(echo $GITHUB_RUN_ID)\nsed -i \"s/AssemblyVersion(\\\"[^\\\"]*\\\")/AssemblyVersion(\\\"$version\\\")/g\" VersionInfo.cs\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit commit -am \"Update version number\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "12781627_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake db:create\nbundle exec rake db:migrate\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ssh user@your-server 'cd /path/to/your/rails/app && git pull origin main && bundle install && bundle exec rake db:migrate && touch tmp/restart.txt'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12790781_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o ${{github.workspace}}/publish", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "12799719_0", "jobs": [{"name": "upload_project", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git commit -m \"Auto commit by GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "12817011_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -project YourProject.xcodeproj -scheme YourScheme clean build test CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -project YourProject.xcodeproj -scheme YourScheme archive -archivePath build/YourProject.xcarchive", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "12910631_0", "jobs": [{"name": "push_changes", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git rm path/to/file1 path/to/file2\ngit commit -m \"Remove files using git rm\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "12959349_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add the command to rename files using MsBuild\n# For example, you can use a custom MsBuild script to rename files\n# Edit the below command with your specific renaming logic\nmsbuild /t:RenameFiles /p:SourceFolder=\"path/to/source/folder\" /p:TargetFolder=\"path/to/target/folder\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Batch rename files\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "1299063_0", "jobs": [{"name": "redeploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build\ndotnet publish -c Release -o build-artifacts\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dbrakeman/sqlserver-ssdt-extension-action", "version": "v1", "shell": "bash"}]}]}
{"id": "13040718_0", "jobs": [{"name": "rspec", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13075890_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "javac HelloWorld.java", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "java HelloWorld\nexit_code=$?\necho \"::set-output name=exit_code::$exit_code\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "exit ${{ steps.modify-exit-code.outputs.exit_code }}", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13078033_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -project YourProject.xcodeproj -scheme YourScheme -configuration Release CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO -allowProvisioningUpdates", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13096825_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install cocoapods", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "make build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourWorkspace.xcworkspace -scheme YourScheme -configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p ${{ github.workspace }}/build\ncp -R build/ ${{ github.workspace }}/build/\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "13174433_0", "jobs": [{"name": "trigger_build", "steps": [{"type": "gh_action", "cmd": "", "name": "cloudbees/github-action", "version": "main", "shell": "bash"}]}]}
{"id": "13250846_0", "jobs": [{"name": "version_increment", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet tool install -g GitVersion.Tool", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gitversion", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gitversion /updateassemblyinfo", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Increment version number [skip ci]\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v1", "shell": "bash"}]}]}
{"id": "13268577_0", "jobs": [{"name": "build-and-deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish {path to your project file} -c Release -o $(Build.ArtifactStagingDirectory)", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "13277585_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build -c Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet pack -c Release", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nuget/publish", "version": "1", "shell": "bash"}]}]}
{"id": "13359403_0", "jobs": [{"name": "publish", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Sepich/github-actions-publish-cifs", "version": "v2", "shell": "bash"}]}]}
{"id": "13369597_0", "jobs": [{"name": "check-naming", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "input_label_errors=0\ninput_label_errors=$(grep -r -i --include=*.php \"Form Helper\" src | wc -l)\ninput_label_errors=$(($input_label_errors + $(grep -r -i --include=*.php \"Form Validation Class\" src | wc -l)))\nif [ $input_label_errors -gt 0 ]; then\n  echo \"Error: Input label naming inconsistency found. Please ensure the input label is named consistently.\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13372566_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Install any dependencies like CocoaPods, Carthage, etc.\n# This step is important if your project uses external libraries\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add custom script commands here to modify library search paths\n# For example, you may need to update the framework search paths or library paths for the project\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourWorkspace.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' clean test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13413818_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rad-studio/ubuntu-delphi:xe2", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild MyProject.dproj /p:config=Release\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1353179_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "shogo82148/actions-setup-perl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "perl -W your_script.pl", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13545018_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"New content\" > path/to/your/file.ext", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Overwrite file\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "1355383_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install -g browserstack-runner\nbrowserstack-runner config\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "browserstack-runner run", "name": "", "version": "", "shell": "bash"}]}, {"name": "notify", "steps": [{"type": "gh_action", "cmd": "", "name": "rtCamp/action-slack-notify", "version": "v2", "shell": "bash"}]}]}
{"id": "13573708_0", "jobs": [{"name": "git-pull-repositories", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ruby pull_repositories.rb", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1358939_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nbundle exec pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourWorkspaceName.xcworkspace -scheme YourSchemeName clean build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13592348_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13701517_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/ftp-action", "version": "v2", "shell": "bash"}]}]}
{"id": "1374441_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem build your_gem.gemspec\ngem push your_gem-*.gem\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13797440_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "gexperts/setup-delphi", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild YourProjectFile.dproj\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13803550_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\nmake\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13807489_0", "jobs": [{"name": "acceptance_tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nanoboxio/setup-chrome", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wget https://selenium-release.storage.googleapis.com/3.141/selenium-server-standalone-3.141.59.jar\njava -jar selenium-server-standalone-3.141.59.jar\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn test -Dtest=YourTestClassName\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "13888104_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "bitrise-io/hockeyapp-deploy", "version": "v1", "shell": "bash"}]}]}
{"id": "14009010_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "lukka/get-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -S . -B build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build --target test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14110639_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\nyarn install --frozen-lockfile\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails db:migrate RAILS_ENV=test\nbundle exec rspec\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rubocop\nyarn run lint\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "release", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\nbundle exec rake release\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14115108_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build --config ${{ matrix.build_type }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ctest -C ${{ matrix.build_type }}", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1411641_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "notify", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v3", "shell": "bash"}]}]}
{"id": "14168291_0", "jobs": [{"name": "merge-fork-commits", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"github-actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add forks as remotes\ngit remote add fork1 https://github.com/fork1/repo.git\ngit remote add fork2 https://github.com/fork2/repo.git\n# Fetch commits from forks\ngit fetch fork1\ngit fetch fork2\n# Merge commits from forks to main\ngit merge fork1/main --no-edit\ngit merge fork2/main --no-edit\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git push origin main\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14194509_0", "jobs": [{"name": "syntax_check", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "find . -name '*.php' -print0 | xargs -0 -n 1 php -l", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14262627_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > deploy_key && chmod 600 deploy_key", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ssh -i deploy_key $USERNAME@$SERVER_ADDRESS 'cd /path/to/your/website && git pull'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14410567_0", "jobs": [{"name": "tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"copy('.env.default', '.env');\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit --coverage-html coverage", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "14422840_0", "jobs": [{"name": "update-libraries", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install --save\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add any commands needed to update or check JavaScript libraries\n# For example, you could use a tool like npm-check-updates:\nnpx npm-check-updates -u\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"github-actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"chore: Update JavaScript libraries\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "14425550_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ssmc/selenium", "version": "3.11.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn test -P gui-tests", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "144274_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpcs --standard=PSR12 src/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpstan analyse src/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php tests/integration.php", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require phpunit/phpcov\nvendor/bin/phpunit --coverage-php build/logs/clover.cov\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "analyze", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Cix85/phpmetrics-action", "version": "v1", "shell": "bash"}]}]}
{"id": "14485983_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "find . -type f \\( -iname \"*.twig\" -o -iname \"*.html\" \\) -exec echo \"Checking {}\" \\; -exec php -l {} \\;\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14507958_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleRelease", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "r0adkll/upload-google-play", "version": "v1", "shell": "bash"}]}]}
{"id": "145586_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "lukka/rotate-secrets", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install -y build-essential cmake", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -S . -B build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build", "name": "", "version": "", "shell": "bash"}]}, {"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "lukka/rotate-secrets", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install -y build-essential cmake", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -S . -B build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ctest --test-dir build", "name": "", "version": "", "shell": "bash"}]}, {"name": "coverage", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "lukka/rotate-secrets", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install -y build-essential cmake lcov", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -S . -B build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ctest --test-dir build --extra-arg=--coverage\nlcov --directory build --capture --output-file coverage.info\nlcov --remove coverage.info '/usr/*' --output-file coverage.info\nlcov --list coverage.info\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "14573910_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install subversion", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "svn export [SVN_URL] ./deployed_script", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Deploy script from SVN\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "1458800_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nathanpeck/setup-nant", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Insert your build commands here\n# Example:\n# ccnet.exe your-cruisecontrol-config-file.config\n# nant build\n# msbuild your-project.csproj\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Insert your copy command here\n# Example:\n# cp -R path/to/artifacts/ path/to/destination/\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1461849_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/vssetup-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /t:build /p:Configuration=Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"$SVN_REVISION\" > revision.txt", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14634794_0", "jobs": [{"name": "check-windows-login-status", "steps": [{"type": "gh_action", "cmd": "", "name": "apple/actions/setup-windows-login-status", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"A user is logged into Windows. Suspending GitHub Actions runs.\"\nexit 1\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"No user is logged into Windows. GitHub Actions can continue running normally.\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14654300_0", "jobs": [{"name": "push_file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp path/to/your/file file_name\ngit config --global user.email \"actions@users.noreply.github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add file_name\ngit commit -m \"Add file via GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/push-subdir-to-another-repository", "version": "v1", "shell": "bash"}]}]}
{"id": "1467257_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build YourProjectName.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish YourProjectName.csproj -c Release -o ./publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "SamKirkland/FTP-Deploy-Action", "version": "2.1.3", "shell": "bash"}]}]}
{"id": "14699537_0", "jobs": [{"name": "upload", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir shared_folder", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp path/to/files/* shared_folder/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'GitHub Actions'\ngit config --global user.email 'actions@github.com'\ngit add shared_folder/\ngit commit -m \"Upload files to shared folder\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "14765725_0", "jobs": [{"name": "release", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem bump --version minor\ngit add .\ngit commit -m \"Bump gem version\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem build your_gem.gemspec\ngem push your_gem-*.gem --key your_rubygems_api_key --host https://rubygems.org\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14776321_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python -m pip install --upgrade pip\npip install -r requirements.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "khmarbaise/maven-setup", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python manage.py collectstatic --noinput\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python manage.py migrate\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to restart your Django server here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14883799_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "shimataro/socks-setup-action", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global http.proxy \"socks5h://${{ secrets.SOCKS_PROXY_HOST }}:${{ secrets.SOCKS_PROXY_PORT }}\"\ngit config --global https.proxy \"socks5h://${{ secrets.SOCKS_PROXY_HOST }}:${{ secrets.SOCKS_PROXY_PORT }}\"\ngit config --global url.\"git://\".insteadOf \"socks5h://${{ secrets.SOCKS_PROXY_HOST }}:${{ secrets.SOCKS_PROXY_PORT }}\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global --unset http.proxy\ngit config --global --unset https.proxy\ngit config --global --unset url.\"git://\".insteadOf\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14894367_0", "jobs": [{"name": "sync_externals", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "eriol/checkout-svn", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd path/to/external/directory\nsvn propget svn:externals . > externals.txt\nawk '{print $2}' externals.txt | sed 's/\\^.*\\///' | xargs -n 1 -I{} svn checkout https://github.com/${{ github.repository }}/trunk/{} {}\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Sync GitHub externals from ${{ github.repository }}\"\ngit push origin master\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14913586_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Include your deployment commands here to deploy the project and embed Grocery CRUD inside another view\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14949480_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chmod +x gradlew", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "reactivecircus/android-emulator-runner", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew connectedAndroidTest", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "14958517_0", "jobs": [{"name": "build-and-test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean install -B", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "zajacmp/jboss-eap7-standalone", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp target/your-app.war $JBOSS_HOME/standalone/deployments/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn verify -Pjboss", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add TFS integration scripts/commands here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "15010016_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "andstor/setup-nant", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nant build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Deploying artifact to Archiva...\"\n# Run your commands to deploy the artifact to Archiva using NAnt commands\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rm -rf path/to/artifact", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "15113090_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "olafurpg/setup-scala", "version": "v11", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sbt sbtVersion", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sbt compile", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jordiollero/setup-eclipse", "version": "0.0.1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -f /path/to/project/pom.xml clean validate eclipse:clean eclipse:eclipse", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -f /path/to/project/pom.xml clean install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -f /path/to/project/pom.xml eclipse:clean eclipse:eclipse", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "15153708_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleRelease", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "r0adkll/upload-google-play", "version": "v1", "shell": "bash"}]}]}
{"id": "15206830_0", "jobs": [{"name": "sandbox-file-transfer", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install cocoapods\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Place your custom script commands here to upload files to the iOS device sandbox\n# Example: xcrun simctl addMedia <device-uuid> /path/to/local/file /path/to/device/sandbox\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Place your custom script commands here to download files from the iOS device sandbox\n# Example: xcrun simctl pull <device-uuid> /path/from/device/sandbox /path/to/local/directory\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "15233093_0", "jobs": [{"name": "behat", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp .env.example .env", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan migrate --seed", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/behat", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "15257652_0", "jobs": [{"name": "git-plugin", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"your_email@example.com\"\ngit config --global user.name \"Your Name\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mli/gdc", "version": "v1", "shell": "bash"}]}]}
{"id": "15332959_0", "jobs": [{"name": "deleteAndStageChanges", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git rm path/to/file\ngit config --global user.email \"github-actions[bot]@users.noreply.github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit commit -m \"Delete file using git rm\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add -u\ngit commit -m \"Stage changes using git add -u\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "1545309_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "find . -type d -empty -exec mkdir -p ../temp/{} \\;\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "find . -type f -exec cp --parents {} ../temp/ \\;\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "montudor/action-zip", "version": "v0.1.0", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "15509677_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails generate shoulda:install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec <YOUR_TEST_COMMAND>", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "15643191_0", "jobs": [{"name": "ant_build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "your-username/ant-action", "version": null, "shell": "bash"}]}]}
{"id": "15819946_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake db:create db:schema:load RAILS_ENV=test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake test TESTOPTS=\"--ci-reporter\" TESTFILE=./custom_minitest_runner.rb", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "15844472_0", "jobs": [{"name": "pod-update", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install cocoapods", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod update", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "15964964_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "browserstack/action-connect", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run test:browserstack", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "browserstack/action-connect", "version": "v1", "shell": "bash"}]}]}
{"id": "16016571_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-scala", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sbt test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1607682_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "export RAILS_ENV=production\nbundle exec cruise start\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "16096590_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "arduino/arduino-cli-action", "version": "v0.3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Install any dependencies for your project here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to compile your firmware\narduino-cli compile --fqbn esp8266:esp8266:generic\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Set up any testing environments or requirements here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to run tests for your embedded project\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to deploy your firmware to the target device\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "16211147_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install -y build-essential\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\nmake\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd build\nctest\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "16229269_0", "jobs": [{"name": "restore-file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Replace 'path/to/your/file' with the actual path to the file you want to restore\ngit checkout HEAD^ path/to/your/file\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n\ngit add path/to/your/file\ngit commit -m \"Restore single file\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "16244738_0", "jobs": [{"name": "unit_testing", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "16366517_0", "jobs": [{"name": "phpcs", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpcs --standard=path/to/your/ruleset.xml .", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "16440059_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "16542134_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "16570781_0", "jobs": [{"name": "reverse_bundle_install", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundler install --without env --deployment --quiet", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "16596614_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Store the xcrun command with single quotes in a variable\nXCRUN_CMD='xcrun simctl list devices | grep -e \"iPhone XR\"'\n\n# Execute the xcrun command using eval to handle single quotes\neval $XCRUN_CMD\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1685111_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nbundle exec rake db:create\nbundle exec rake db:schema:load\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rubocop", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "16898867_0", "jobs": [{"name": "nodejs", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm build", "name": "", "version": "", "shell": "bash"}]}, {"name": "android", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleDebug", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "16947246_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/setup-perl", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cpanm --installdeps .\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "perl build_script.pl > build_output.log", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "16993234_0", "jobs": [{"name": "split_and_track_changes", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Clone the repository to be split\ngit clone https://github.com/username/repository-to-split.git temp-repo\ncd temp-repo\n\n# Split the repository (example splitting the 'src' folder)\ngit subtree split -P src -b split-branch\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout split-branch", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "EndBug/add-and-commit", "version": "v7", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "17026405_0", "jobs": [{"name": "unit-test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-interaction --optimize-autoloader", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"CREATE DATABASE test_db;\" | mysql -h127.0.0.1 -uroot -proot", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit path/to/twig/template/tests", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17033692_0", "jobs": [{"name": "merge-conflict-resolution", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git merge origin/main", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n\ngit checkout --ours .\ngit add .\ngit commit -m \"Auto resolve merge conflicts\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "17092599_0", "jobs": [{"name": "jmeter_performance_test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./path/to/your/jmeter/bin/jmeter -n -t /path/to/your/jmeter/testplan.jmx -l testresults.jtl\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "blaze-meter/upload-to-blazemeter", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your custom script here to analyze JMeter test results\n# You can set criteria to pass/fail the build based on the performance\n\n# Example: If average response time is below 500ms, consider build successful\nif [average response time condition]; then\n  echo \"Performance tests passed successfully!\"\nelse\n  echo \"Performance tests failed - check results for optimization\"\n  exit 1\nfi\n\n# Example: Post a comment or set a status to GitHub PR based on performance rank\n# Comment/Status can be set based on various metrics like response time, throughput, errors, etc.\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17126099_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp sites/default/default.settings.php sites/default/settings.php\nphp -r \"copy('https://ftp.drupal.org/files/projects/drupal-7.77.tar.gz', 'drupal.tar.gz');\"\ntar -xzf drupal.tar.gz --strip-components=1\nmv drupal/* .\nmv drupal/.htaccess .\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -u root -ppassword -e \"CREATE DATABASE IF NOT EXISTS drupal;\"\ncp sites/default/default.settings.php sites/default/settings.php\nchmod a+w sites/default/settings.php\nmkdir -p sites/default/files\nchmod a+w sites/default/files\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php core/scripts/run-tests.sh --url http://localhost --color", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpcs web/modules custom --standard=Drupal --extensions=php,module,inc,install,test --report=full", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17154584_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/mssql-scripter-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Replace <path_to_change_scripts> with the path to your change scripts\ncd <path_to_change_scripts>\n# Execute the SQL change scripts using sqlcmd or any other tool you prefer\nsqlcmd -S ${{ secrets.MSSQL_SERVER }} -U ${{ secrets.MSSQL_USERNAME }} -P ${{ secrets.MSSQL_PASSWORD }} -d <database_name> -i script1.sql\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1715989_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cpp", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build . --config ${{ matrix.config }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Check for compiler error code returned after build\nif [ $? -ne 0 ]; then\n  echo \"Compile errors found in ${{ matrix.config }}\" && exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17170063_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/setup-clang", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "scan-build make\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "scan-build --status-bugs\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=unstable::true\"", "name": "", "version": "", "shell": "bash"}]}, {"name": "notify", "steps": [{"type": "shell_cmd", "cmd": "echo \"Build marked as unstable due to new bugs found by Clang Static Analyzer\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17201345_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install\nnpm install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails assets:precompile\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Assuming you have configured CloudBees CLI and logged in\ncbt deploy -A <account> -a <app-name> -e <environment> . -s\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17277871_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "find . -name '*.php' -exec php -l {} \\;", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17302693_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd path/to/your/project\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean build test -workspace YourApp.xcworkspace -scheme YourApp -destination 'platform=iOS Simulator,name=iPhone 12' CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO ONLY_ACTIVE_ARCH=NO\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -workspace YourApp.xcworkspace -scheme YourApp -destination 'generic/platform=iOS' -archivePath $PWD/build/YourApp\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath $PWD/build/YourApp.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath $PWD/build/export\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "17327727_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/parallel-forks", "version": "v2", "shell": "bash"}]}]}
{"id": "17371665_0", "jobs": [{"name": "email_script_contents", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=contents::$(<path_to_jelly_script_file)\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v3", "shell": "bash"}]}]}
{"id": "17405128_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails assets:precompile\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl https://cli-assets.heroku.com/install-ubuntu.sh | sh\nheroku git:remote -a YOUR_HEROKU_APP_NAME\ngit config user.email \"you@example.com\"\ngit config user.name \"GitHub Actions\"\ngit push heroku main\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17414469_0", "jobs": [{"name": "run_behat_tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/behat --format=progress features/jira_issues.feature --tags='@jira'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17457842_0", "jobs": [{"name": "behat-tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Copying Behat configuration for ${{ matrix.environment }} environment\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/behat -p ${{ matrix.environment }}", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17505535_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd java-program-directory\njavac Main.java\njava Main\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd objective-c-program-directory\nclang -framework Foundation main.m -o main\n./main\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17634760_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer global require phing/phing", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "~/.composer/vendor/bin/phing deploy", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17650397_0", "jobs": [{"name": "phpcs", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-interaction --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpcs --standard=PSR12 --report=checkstyle --report-file=checkstyle.xml .", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "17674028_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jenkinsci/gerrit-trigger-plugin", "version": "3.1.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -d \"message=Build triggered successfully by GitHub Actions\" \\\n     -u ${{ secrets.GERRIT_USERNAME }}:${{ secrets.GERRIT_PASSWORD }} \\\n     https://your-gerrit-server.com/a/changes/$CHANGE_NUMBER/revisions/$PATCHSET_NUMBER/review\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17677137_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Code to setup Nexus Repository Manager\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Code to setup SVN\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "eskatos/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Code to setup Ant\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Code to build and test your project\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17678306_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -S localhost:8000 -t ./your-php-directory &", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sleep 3", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install -g http-server", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "http-server ./your-php-directory -p 8080 &", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sleep 3", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install puppeteer", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "node display-loading.js", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17710097_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nuget/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild YourSolution.sln /t:Rebuild", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17738234_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle config path vendor/bundle\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake generate", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "17867467_0", "jobs": [{"name": "behat", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/behat --config behat.yml --profile=my_profile", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1789316_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shirshakbhattarai/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /t:Build,Package /p:Configuration=Release /p:Platform=\"Any CPU\" /p:OutputPath=WebApp.publish WebApp.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Publish-WindowsService.ps1", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to deploy to TFS 2010 here\n# For example, you can use tf command line utility or PowerShell script to deploy\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Remove-Item -Path WebApp.publish -Recurse", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17972053_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/behat --tags=@tag1", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/behat --tags=@tag2", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/behat --tags=@tag3", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1797828_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "andreysaksonov/setup-nant", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nant", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gallio.exe /r:MBUnit /v:Verbose Output.dll", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "17992081_0", "jobs": [{"name": "phpunit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "18033691_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git submodule update --init", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rm -rf tmp_submodule_contents\nmkdir tmp_submodule_contents\ncp -r path/to/submodule/* tmp_submodule_contents\ncat tmp_submodule_contents/* > extracted_content.txt\nrm -rf tmp_submodule_contents\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@users.noreply.github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add extracted_content.txt\ngit commit -m \"Extracted content from submodule\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "18059642_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install bundler\nbundle install\nbundle exec pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourApp.xcworkspace -scheme YourApp -destination 'platform=iOS Simulator,name=iPhone 11' | xcpretty", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "18106353_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir centralized_assets\n# Add commands here to collect software assets from different sources\n# For example:\n# cp /path/to/source/asset1 centralized_assets/\n# curl -o centralized_assets/asset2 https://example.com/asset2\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add centralized_assets\ngit commit -m \"Centralize software assets\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "18257630_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec jekyll build\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "18281164_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build command here\n# e.g., ./build_script.sh\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "18322205_0", "jobs": [{"name": "refactor", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rubocop # Run RuboCop for code style checking\nbundle exec rubocop -a # Auto-correct RuboCop offenses\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install rails_best_practices\nrails_best_practices . -g # Analyze and refactor code using Rails Best Practices\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'GitHub Actions'\ngit config --global user.email 'actions@github.com'\ngit add .\ngit commit -m 'Auto refactoring by GitHub Actions'\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "18354430_0", "jobs": [{"name": "check_version", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "version=$(gcloud app versions list --format='value(version.id)' --service=your-service)\nif [[ $version == \"your-version\" ]]; then\n  echo \"App Engine version already exists\"\nelse\n  echo \"App Engine version does not exist\"\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "18430945_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "warthog618/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=Release", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install -g replace-in-file", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "replace-in-file --regex --search \"YOUR_VARIABLE_NAME\" --replace ${{ secrets.YOUR_SECRET_VARIABLE }} path/to/yourfile.html", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "18457796_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nuget/setup-nuget", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nuget restore YourSolution.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add path/to/nuget/packages\ngit commit -m \"Add NuGet packages to TFS\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "18527511_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpunit tests/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "scp -r ./ user@server:/path/to/deployment/directory\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "18540263_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "EnricoMi/junit-attachments-action", "version": "v2", "shell": "bash"}]}]}
{"id": "18576326_0", "jobs": [{"name": "update_domain", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"your-custom-domain.com\" > CNAME", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"YOUR_EMAIL_ADDRESS\"\ngit config --local user.name \"YOUR_GITHUB_USERNAME\"\ngit add .\ngit commit -m \"Update CNAME file with custom domain\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "18708856_0", "jobs": [{"name": "close-merged-pr", "steps": [{"type": "shell_cmd", "cmd": "echo \"::set-output name=is_merged::$(jq '.pull_request.merged' $GITHUB_EVENT_PATH)\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "18734154_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -NV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane spaceship authenticate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane pilot upload", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "18820117_0", "jobs": [{"name": "reinstall_ubuntu", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rlespinasse/create-vm-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Your script to install Ubuntu goes here\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Ubuntu reinstallation successful!\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Ubuntu reinstallation failed!\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1890228_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud app deploy --quiet", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "18905805_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nphp composer-setup.php\nphp -r \"unlink('composer-setup.php');\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer validate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "18912960_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "shell_cmd", "cmd": "echo \"Deploying the PHP project...\"\n# Add your deployment commands here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "18948424_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "pkobrien/sonarqube-scanner-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands here to build your C project\n# For example:\n# make\n# sonar-scanner\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1895462_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "warrenbuckley/Setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild YourProject.sln /p:Configuration=Release", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19031858_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourWorkspace.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11' | xcpretty -c", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -workspace YourWorkspace.xcworkspace -scheme YourScheme -destination 'generic/platform=iOS' -archivePath build/YourScheme.xcarchive", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath build/YourScheme.xcarchive -exportPath build -exportOptionsPlist ExportOptions.plist", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -v '~> 2.0'", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane pilot distribute -f \"build/YourScheme.ipa\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19033601_0", "jobs": [{"name": "code-review", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b new-branch && git push origin new-branch", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "softprops/action-approve", "version": "v1", "shell": "bash"}]}]}
{"id": "19068182_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jurplel/setup-qt", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "qmake your_project.pro", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "make", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "make test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19110730_0", "jobs": [{"name": "ios_release_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -workspace YourApp.xcworkspace -scheme YourScheme -archivePath build/YourApp\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "devbotsxyz/appstoreconnect-upload", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Successfully uploaded to App Store Connect\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19115949_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir deploy\nrobocopy /MIR src_dir deploy_dir\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easingthemes/deploy-gh-pages", "version": "v3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rmdir /S /Q deploy\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19137424_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "puppet/setup-puppet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "puppet module install puppetlabs-stdlib --version '>= 4.17.0' --ignore-dependencies\npuppet module install puppetlabs-concat --version '>= 6.3.0' --ignore-dependencies\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "puppet apply /path/to/your/manifest.pp\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"github-actions[bot]@users.noreply.github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Apply Puppet manifest changes\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "19200017_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19210088_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=vars::$(cat path/to/variables.yml)\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install jekyll bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ steps.load_vars.outputs.vars }}\" > _config_vars.yml\nbundle exec jekyll build --config _config.yml,_config_vars.yml\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Update Jekyll site with variables\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19221224_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rsync -av --delete --exclude-from='.rsyncignore' ./ /path/to/wordpress/repo\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1922587_0", "jobs": [{"name": "sync", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ovotech/svn", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "svn up", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "SamKirkland/FTP-Deploy-Action", "version": "3.1.1", "shell": "bash"}]}]}
{"id": "19244854_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install -y dpkg-dev apt-transport-https gnupg2\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Replace this with your Debian package building commands\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Add Debian packages\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "19257524_0", "jobs": [{"name": "setup_xcode_project", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -resolvePackageDependencies\nxcodebuild -create-xcframework\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"\ngit remote add origin your_repository_url.git\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Setup Xcode project\"\ngit push -u origin main\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19307890_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Tiny variation\" >> tiny_variation.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"github-actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add tiny_variation.txt\ngit commit -m \"Add tiny variation\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "19335688_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Xvfb :99 -screen 0 1024x768x16 > /dev/null 2>&1 &", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpunit tests/SeleniumTest.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1937388_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "adamhjk/svndig", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/github-script", "version": "0.9.0", "shell": "bash"}]}]}
{"id": "19452586_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ortussolutions/commandbox-cfml-installer", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "box install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "box testbox run", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19481138_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php index.php update_first_page\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'GitHub Actions'\ngit config --global user.email 'actions@github.com'\ngit commit -am \"Mark all pages as first page\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v0.5.3", "shell": "bash"}]}]}
{"id": "19499816_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean test -project YourProject.xcodeproj -scheme YourScheme -destination \"platform=iOS Simulator,OS=latest,name=iPhone 11\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19513126_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Deploying to production...\"\necho \"Environment variable 1: $ENV_VAR_1\"\necho \"Environment variable 2: $ENV_VAR_2\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19555107_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -scheme YourScheme -archivePath build/YourApp.xcarchive", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -NV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "openssl aes-256-cbc -K ${{ secrets.ENCRYPTION_KEY }} -iv ${{ secrets.ENCRYPTION_IV }} -in credentials/AppleCredentials.enc -out credentials/AppleCredentials -d", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane build_and_sign", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane upload_to_testflight", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19576552_0", "jobs": [{"name": "add-folder", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir my-folder", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Copy or move files to the 'my-folder' directory\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Add new folder and files\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "19605752_0", "jobs": [{"name": "netrc-auth-job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ilhakurt/netrc-auth-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Your HTTP-authenticated command goes here\n# For example: curl <your-protected-url>\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19607894_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install cocoapods\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourProjectWorkspace.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11' test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19614951_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Install any dependencies needed\n# For example, you can use CocoaPods\n# /usr/bin/gem install cocoapods\n# pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourWorkspace.xcworkspace -scheme YourScheme -sdk iphonesimulator clean build test | xcpretty\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -workspace YourWorkspace.xcworkspace -scheme YourScheme | xcpretty\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19628512_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourProjectScheme -workspace YourProject.xcworkspace -destination 'platform=iOS Simulator,name=iPhone 11' build test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19669913_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -resolvePackageDependencies\nxcodebuild -fetchIfNeeded\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -project YourProject.xcodeproj -scheme YourScheme build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19737264_0", "jobs": [{"name": "composer-install", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nphp composer-setup.php\nphp -r \"unlink('composer-setup.php');\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php composer.phar install", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19764964_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-dev --optimize-autoloader", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rsync -avz --delete $GITHUB_WORKSPACE/ user@your-server-ip:/path/to/deploy\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19769732_0", "jobs": [{"name": "xcode5_coverage", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "brew install lcov\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' -enableCodeCoverage YES\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "slather coverage --html\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "19773928_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "brew update\nbrew install swiftlint\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean test -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11' CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "swiftlint", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19833169_0", "jobs": [{"name": "build-and-deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "redhat-actions/oc-login", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "oc project your-project-name\noc apply -f path/to/your/deployment.yaml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19845679_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\n# For demonstration, let's say it's a simple build process\necho \"Building project...\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "19926329_0", "jobs": [{"name": "overwrite_repo", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rm -rf target-repo\nmv <source-repo-folder> target-repo\ncd target-repo\ngit init\ngit add .\ngit commit -m \"Overwrite target repository\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "19926738_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build\nVERSION=$(date +%Y%m%d%H%M%S)\necho \"Version: $VERSION\" >> version.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add version.txt\ngit commit -m \"Update version for deployment\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "JamesIves/github-pages-deploy-action", "version": "4.1.5", "shell": "bash"}]}]}
{"id": "19930113_0", "jobs": [{"name": "phpunit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./vendor/bin/phpunit --configuration phpunit.xml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "19961854_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle config set --local path '.bundle'\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme <YourScheme> -destination 'platform=iOS Simulator,OS=15.0,name=iPhone 13' test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcrun llvm-cov show -instr-profile <path/to/code_coverage.profdata> <path/to/your/application> -output-dir <path/to/output/directory> -format=html\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "1998589_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phing", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "20105643_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild build -scheme YourScheme\nxcodebuild test -scheme YourScheme\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -scheme YourScheme -archivePath 'build/YourApp.xcarchive'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "20117354_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "<reusable-actions-repo>/<action-name>", "version": "<tag>", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "<reusable-actions-repo>/<action-name>", "version": "<tag>", "shell": "bash"}]}]}
{"id": "20166017_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean build test -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "20184577_0", "jobs": [{"name": "tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "20192806_0", "jobs": [{"name": "commit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "MSBuild.exe /t:Rebuild", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"githubactions@example.com\"\ngit config --global user.name \"github-actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Auto-commit after building project\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "20328747_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -B build\ncmake --build build\ncd build\n./runTests --result-xml=TestResults.xml\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "udp/analyze-junit-test-duration", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "2047159_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ilammy/setup-vc2005-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "devenv YourSolution.sln /build Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "devenv YourSolution.sln /build Release /run Tests", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "20488174_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -arch i386 -project YourProject.xcodeproj -scheme YourScheme build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "2065982_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-nunit", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nuget restore\n.\\NUnit.ConsoleRunner.3.12.0\\tools\\nunit3-console.exe YourTests.dll\n.\\NAnt\\NAnt.exe -buildfile:build.build\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "20689512_0", "jobs": [{"name": "run_tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test \\\n  -project YourProject.xcodeproj \\\n  -scheme YourScheme \\\n  -destination 'platform=iOS Simulator,name=iPhone 12 Pro Max,OS=latest'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "20693255_0", "jobs": [{"name": "port_repo", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clone https://github.com/${{ github.actor }}/${{ github.event.forkee.name }}.git ported_repo\ncd ported_repo\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Ported repository to new language\"\ngit push origin master\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "2087347_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails db:create RAILS_ENV=test\nbundle exec rails db:schema:load RAILS_ENV=test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec spec/api", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "20874490_0", "jobs": [{"name": "sync_database_updates", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/setup-mysql", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -h 127.0.0.1 -u joomla_user -p${{ secrets.MYSQL_PASSWORD }} joomla_db < path/to/updated/database.sql", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to deploy Joomla site after the database update\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysqladmin -u joomla_user -p${{ secrets.MYSQL_PASSWORD }} -h 127.0.0.1 drop joomla_db", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "20909591_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o ${{ github.workspace }}/publish", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=version::$(Build.SourceVersion)-$(Build.SourceBranchName)-$(Build.BuildId)\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "$version = '${{ steps.patch-version.outputs.version }}'\n(gc $(Get-ChildItem -Path . -Recurse -Filter \"*AssemblyInfo.cs\").FullName) | %{$_ -replace ('(\\[assembly: AssemblyVersion\\(\"\")([.\\d]+)(\"\"\\)]|(\\[assembly: AssemblyFileVersion\\(\"\")([.\\d]+)(\"\"\\)])', \"`$1$version`$3\")} | Out-File $_.FullName\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Auto-increment version to $version\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "20945351_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourProject.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11' | xcpretty", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "21060553_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t debian-package-builder .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run --name package-builder debian-package-builder", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker cp package-builder:/path/to/debian/packages ./built-packages", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "main", "shell": "bash"}]}]}
{"id": "21066470_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-msys2", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pacman -S --noconfirm rsync", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "robocopy source_folder destination_folder /MIR", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "atlassian/github-actions/bitbucket-pipelines-mirror", "version": "main", "shell": "bash"}]}]}
{"id": "2108115_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B dependency:resolve", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn compile", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn test", "name": "", "version": "", "shell": "bash"}]}, {"name": "update-workspace", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "TheRealReal/setup-eclipse", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn eclipse:clean eclipse:eclipse", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Sync Eclipse workspace with current state\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "2109135_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\nphp wp-cli.phar --info\nchmod +x wp-cli.phar\nsudo mv wp-cli.phar /usr/local/bin/wp\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd wordpress\nwp core download --path=.\nwp core config --dbhost=localhost --dbname=wordpress --dbuser=root --dbpass=root\nwp core install --url=http://localhost --title=\"My WordPress Site\" --admin_user=admin --admin_password=admin --admin_email=admin@example.com\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wp plugin install <plugin1> --activate\nwp plugin install <plugin2> --activate\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wp media import /path/to/media/*.jpg --post_id=<post_id>\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git push origin main\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "21151792_0", "jobs": [{"name": "add-comment", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-env name=COMMIT_MESSAGE::$(git log --format=%B -n 1 $GITHUB_SHA)\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "21173819_0", "jobs": [{"name": "xcode_git_check", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt update && sudo apt install git -y", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bad_instructions=$(git grep -nE 'TODO|FIXME|XXX' | grep -v .swiftlint.yml || true)\nif [ -n \"$bad_instructions\" ]; then\n  echo \"ERROR: Found bad instructions in the code:\"\n  echo \"$bad_instructions\"\n  exit 1\nelse\n  echo \"No bad instructions found. Code is clean.\"\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "21220218_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpunit tests\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Install additional tools if necessary\n# Example: composer require squizlabs/php_codesniffer --dev\n# Run static analysis tools on HMVC extension directory\n# Example: php vendor/bin/phpcs src\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "21231926_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarqube-scan", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -u username:password --upload-file path/to/artifact snapshot/repo/\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "EnricoMi/publish-unit-test-result-action", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/upload-sonarqube-action", "version": "master", "shell": "bash"}]}]}
{"id": "21403064_0", "jobs": [{"name": "clean-release-branch", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git submodule deinit -f .\ngit rm --cached -r .\ngit config -f .gitmodules --get-regexp path | while read path_key path_value; do if [ -n \"$path_value\" ]; then git add --all \"$path_value\"; fi; done\ngit commit -m \"Remove submodules from release branch\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/push-to-another-repository", "version": "v1", "shell": "bash"}]}]}
{"id": "21474402_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ovh/ [email protected]", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install ant", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ant -f build.xml -Dflex.sdk.version=4.16.1", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/ [email protected]", "version": null, "shell": "bash"}]}]}
{"id": "21487707_0", "jobs": [{"name": "xcode_build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean archive -workspace YourWorkspace.xcworkspace -scheme YourScheme -archivePath build/YourScheme CODE_SIGN_STYLE=Manual CODE_SIGN_IDENTITY=\"\" | xcpretty\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "21537366_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-dev", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "SamKirkland/FTP-Deploy-Action", "version": "4.1", "shell": "bash"}]}]}
{"id": "2157460_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o publish", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy_staging", "steps": [{"type": "gh_action", "cmd": "", "name": "webfactory/ssh-agent", "version": "v0.5.3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ssh -o StrictHostKeyChecking=no user@staging-server 'cd /var/www/staging\nrm -rf *\ntar -xvf ~/your-project-name.tar -C /var/www/staging'\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy_production", "steps": [{"type": "gh_action", "cmd": "", "name": "webfactory/ssh-agent", "version": "v0.5.3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ssh -o StrictHostKeyChecking=no user@production-server 'cd /var/www/production\nrm -rf *\ntar -xvf ~/your-project-name.tar -C /var/www/production'\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "migrate_database", "steps": [{"type": "gh_action", "cmd": "", "name": "mcr.microsoft.com/mssql/server:2019-latest", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet ef database update --startup-project ./<YOUR_PROJECT_NAME> -c <YOUR_DB_CONTEXT> -- --connection \"<SQL_CONNECTION_STRING>\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "21579078_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake -DBOOST_ROOT=/usr/local/include/boost -DCMAKE_BUILD_TYPE=Release ..\nmake\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "21690298_0", "jobs": [{"name": "create_release", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'GitHub Actions'\ngit config --global user.email '<github-actions-bot-email>@users.noreply.github.com'\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "tag_message=$(git tag -l --format='%(contents)' ${{ github.ref }})\necho \"Tag Message: $tag_message\"\necho \"::set-output name=tag_message::$tag_message\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git tag -a ${{ github.ref }} -m \"${{ steps.get_tag_message.outputs.tag_message }}\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "softprops/action-gh-release", "version": "v1", "shell": "bash"}]}]}
{"id": "21758392_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B clean test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "elgohr/element-action", "version": "v0.0.2", "shell": "bash"}]}]}
{"id": "2180460_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -l index.php", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rsync -avz --delete ./ username@your-server-ip:/path/to/your/project\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "21857563_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mcr.microsoft.com/mssql/server:2017-latest", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "sqlpackage.exe /Action:Publish /SourceFile:PathToYourDacpac1.dacpac /TargetServerName:localhost /TargetDatabaseName:Database1 /TargetUser:sa /TargetPassword:YourStrongPassword\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sqlpackage.exe /Action:Publish /SourceFile:PathToYourDacpac2.dacpac /TargetServerName:localhost /TargetDatabaseName:Database2 /TargetUser:sa /TargetPassword:YourStrongPassword\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "21942588_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild build \\\n  -project YourProjectName.xcodeproj \\\n  -scheme YourSchemeName \\\n  -configuration Release \\\n  -sdk iphoneos \\\n  -destination 'generic/platform=iOS' \\\n  -target YourTargetName \\\n  -DAPPLICATION_NAME=CustomAppName\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "21951166_0", "jobs": [{"name": "fix-line-endings", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global core.autocrlf input\ngit ls-files -z | xargs -0 dos2unix\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"<your_email@example.com>\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Fix line endings from CRLF to LF\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "21972377_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "redhat-developers/openshift-actions/oc-login", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "oc project yourproject\noc apply -f path/to/your/deployment.yaml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22022247_0", "jobs": [{"name": "build_and_test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 13' test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "22088992_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit tests", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your deployment commands here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22168572_0", "jobs": [{"name": "build-dependency", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\nmake\nmake install\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "build-main-project", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake -DDEPENDENCY_DIR=../dependency_project/install ..\nmake\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22182631_0", "jobs": [{"name": "update_project", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "unzip project.zip", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r downloaded-project/* ${{ github.workspace }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Update project files\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "22275744_0", "jobs": [{"name": "phpunit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit --configuration ${{ matrix.config }}", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22322124_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your deployment commands here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22324705_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php framework/cli-script.php dev/build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22361017_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22389591_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcrun llvm-cov export -instr-profile ./DerivedData/Build/Intermediates.noindex/XCProfileData/YourScheme/SomeFile.profdata -arch x86_64 ./DerivedData/Build/Products/Debug-iphonesimulator/YourScheme.app/YourScheme -format=lcov -output-file coverage.lcov\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "2239249_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Azure/pipelines", "version": "2", "shell": "bash"}]}]}
{"id": "2245861_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22482265_0", "jobs": [{"name": "perl_tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shogo82148/actions/setup-perl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cpanm --notest TAP::Harness", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "prove --harness=TAP::Harness", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22582102_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer self-update\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require vendor/package:1.0.0", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22590704_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run lint", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run format-check", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git commit -am \"Code maintenance changes\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "22621690_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22636950_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install cocoapods", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourWorkspace.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22708233_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-postgres", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "psql -h localhost -U postgres -d dbname -f path/to/backup.sql", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22765080_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build\ndotnet test\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "EnricoMi/publish-unit-test-result-action", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "codecov/codecov-action", "version": "v2", "shell": "bash"}]}]}
{"id": "22786299_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install cocoapods\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourScheme -sdk iphonesimulator build test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourScheme -sdk iphonesimulator archive -archivePath build/YourApp.xcarchive", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "brew install svn", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "svn checkout http://your-svn-repo-url/trunk your-local-directory", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"iOS build successful\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22834776_0", "jobs": [{"name": "rename-zip", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mv old-name.zip new-name.zip", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add new-name.zip\ngit commit -m \"Rename old-name.zip to new-name.zip\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "22893477_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test --no-build --configuration Release --logger \"trx;LogFileName=testResults.trx\" --results-directory ./TestResults", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wei/git-auto-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "22902891_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "OctopusDeploy/action-setup-cli", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "octo create-release --project=\"YourProjectName\" --enableservicemessages\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22903081_0", "jobs": [{"name": "update_changes", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Updated changes\" >> changes.md", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add changes.md\ngit commit -m \"Update changes\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "22905081_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "22997721_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Install any necessary dependencies or packages\n# If using CocoaPods:\n# gem install cocoapods\n# pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# For workspace errors, you may need to clean and build the workspace\nxcodebuild clean build -workspace YourWorkspace.xcworkspace -scheme YourScheme\n# Run tests if applicable\n# xcodebuild test -workspace YourWorkspace.xcworkspace -scheme YourTestsScheme\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "23102251_0", "jobs": [{"name": "run-mysql-script", "steps": [{"type": "gh_action", "cmd": "", "name": "ridedott/setup-mysql", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -h localhost -u root -e \"USE your_database;\nSELECT id, name, \n       CASE \n           WHEN age < 18 THEN 'Child'\n           WHEN age < 60 THEN 'Adult'\n           ELSE 'Senior Citizen'\n       END AS age_group\nFROM your_table;\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "23204749_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew clean build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jfrog/github-action-release-artifactory", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "softprops/action-gh-release", "version": "v1", "shell": "bash"}]}]}
{"id": "23231604_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "montudor/setup-dart", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dart pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dart test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "23428720_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nphp composer-setup.php\nphp -r \"unlink('composer-setup.php');\"\nmv composer.phar /usr/local/bin/composer\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chmod -R 777 path/to/uploads", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -S localhost:8000 -t public &", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sleep 3", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -X POST -F 'file=@path/to/image.jpg' http://localhost:8000/upload\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "23558257_0", "jobs": [{"name": "run-server", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm start", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wernight/ngrok-action", "version": "v2", "shell": "bash"}]}]}
{"id": "23584641_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "easingthemes/ftp-action", "version": "v1", "shell": "bash"}]}]}
{"id": "23670711_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"<?php \\\nrequire 'system/core/CodeIgniter.php'; \\\n$encryption_key = 'YOUR_ENCRYPTION_KEY_HERE'; \\\n$this->encryption->initialize(array('driver' => 'openssl')); \\\necho $this->encryption->encrypt('test_data'); \\\n?>\" > test_encryption.php\nphp test_encryption.php\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "23673915_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourSchemeName -workspace YourWorkspace.xcworkspace -archivePath build/YourArchiveName.xcarchive archive", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath build/YourArchiveName.xcarchive -exportPath build/Output -exportOptionsPlist ExportOptions.plist", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "23699787_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit tests/\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to deploy your CodeIgniter project, including CI Merchant PayPal integration\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "23768762_0", "jobs": [{"name": "release", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "softprops/action-gh-release", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rtCamp/action-slack-notify", "version": "v2.0.3", "shell": "bash"}]}]}
{"id": "23853024_0", "jobs": [{"name": "fix_empty_lines", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php fix_empty_lines.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "23904260_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nbundle exec pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean build test -project YourProject.xcodeproj -scheme YourScheme -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 5s,OS=7.0'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "23915270_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B clean verify", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "23917052_0", "jobs": [{"name": "tfs_build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build\ndotnet test --collect \"XPlat Code Coverage\" --results-directory TestResults --logger 'trx;LogFileName=test_results.trx' -p:CollectCoverage=true -p:CoverletOutputFormat=opencover\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "EnricoMi/vsts-test-logger", "version": "v2", "shell": "bash"}]}]}
{"id": "23990264_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add build command here if needed for your PHP application\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easingthemes/ssh-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "23992656_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build:ssis-project", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install -y mssql-tools unixodbc-dev", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sqlcmd -S localhost -U sa -P your_password -d your_database -i path/to/your_script.sql", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24021399_0", "jobs": [{"name": "show-xcode-output", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YOUR_WORKSPACE.xcworkspace -scheme YOUR_SCHEME clean build | tee xcode_build.log\n# Save the Xcode build output to a log file\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cat xcode_build.log", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24031440_0", "jobs": [{"name": "setup-gerrit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dart-lang/setup-dart", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dart pub global activate gerrit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dart pub global run gerrit setup --project=github/repo-name", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Set up Gerrit integration\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "2405176_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install php-xml\ncomposer install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24089355_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"$SSH_PRIVATE_KEY\" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ssh -o StrictHostKeyChecking=no user@your-server \"cd /path/to/your/app && git pull origin main\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "241007_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-gcloud", "version": "v0.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud components install app-engine-python", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud app deploy app.yaml --promote", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl https://YOUR_PROJECT_ID.wl.r.appspot.com\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24127699_0", "jobs": [{"name": "cleanup", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your cleanup script commands here\n# For example, deleting merged branch deployments/configurations\ngit fetch --prune\ngit branch -d ${{ github.event.pull_request.head.ref }}\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "2413504_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get -y install mercurial", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "hg clone https://kiln-repository-url", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "finalbuilder/setup-finalbuilder-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "finalbuilder build-script.fbp8", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "finalbuilder test-script.fbp8", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "finalbuilder deploy-script.fbp8", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24146831_0", "jobs": [{"name": "notify-author", "steps": [{"type": "gh_action", "cmd": "", "name": "softprops/action-slack", "version": "v2", "shell": "bash"}]}]}
{"id": "24168417_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec calabash-ios run BUNDLE_ID=path_to_your_bundle_id", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24170736_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Run your build commands here\n# For example, if using npm:\nnpm install\nnpm run build\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonicdoe/nexus-actions/upload", "version": "v1", "shell": "bash"}]}]}
{"id": "24247973_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Project manifest created at $(date)\" > manifest.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add manifest.txt\ngit commit -m \"Add manifest file [skip ci]\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "24329711_0", "jobs": [{"name": "release", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -N io.takari:maven:wrapper\n./mvnw --version\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./mvnw release:prepare -DdryRun=true\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24332209_0", "jobs": [{"name": "composer_update", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nphp composer-setup.php\nphp -r \"unlink('composer-setup.php');\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php composer.phar update", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add composer.lock\ngit commit -m \"Update Composer dependencies\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "24335970_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud app deploy app.yaml --quiet", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24336309_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer self-update\ncomposer install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -h hostname -u username -ppassword database_name < database.sql\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24370815_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "papyros/qt-installer-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "qmake -r\nmake\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24391572_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "repoA/trigger-pipeline-action", "version": "v1", "shell": "bash"}]}]}
{"id": "24480996_0", "jobs": [{"name": "integration_test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "DeLaGuardo/setup-clojure", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run --rm --link selenium-hub:hub selenium/node-chrome:3.141.59", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "lein test :integration", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24528469_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "find . -name \"*.php\" -exec php -l {} \\;", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "24530001_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install  # If using CocoaPods for dependency management\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -scheme \"YourScheme\" -sdk iphoneos -archivePath \"build/YourScheme\"\n# Replace \"YourScheme\" with your actual Xcode scheme\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath \"build/YourScheme.xcarchive\" -exportPath \"build\" -exportOptionsPlist exportOptions.plist\n# Create an exportOptions.plist file with necessary configurations\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "24530628_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nbundle exec pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean build test -workspace YourWorkspace.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24662467_0", "jobs": [{"name": "replace-git-core", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i 's/git-core/git/g' your_filename_here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"github-actions[bot]@users.noreply.github.com\"\ngit config --local user.name \"github-actions[bot]\"\ngit add .\ngit commit -m \"Replace git-core with git port\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "24688055_0", "jobs": [{"name": "build_and_render", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install jekyll bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec jekyll build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "24688603_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": null, "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24709128_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "game-ci/setup-unity", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "unity -quit -batchmode -projectPath . -executeMethod BuildScript.PerformBuild\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24737621_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 13' -enableCodeCoverage YES | xcpretty", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "24757293_0", "jobs": [{"name": "code_review", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "softmarshmallow/code-review-full-width-action", "version": "v1", "shell": "bash"}]}]}
{"id": "24760435_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build YourSolution.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to deploy Cloud Project 1\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to deploy Cloud Project 2\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Microsoft/pipelines-azure-devops-github", "version": "master", "shell": "bash"}]}]}
{"id": "24776054_0", "jobs": [{"name": "change_variables", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "24792833_0", "jobs": [{"name": "customize_notification", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your customization script here\necho \"Customizing Xcode service notification email content...\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24857137_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [ \"${{ matrix.configuration }}\" == \"Development\" ]; then\n  cp path/to/Development.sln solution.sln\nelse\n  cp path/to/Production.sln solution.sln\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=${{ matrix.configuration }} solution.sln", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "24916625_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ::set-output name=cancelled::true", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "exit 78", "name": "", "version": "", "shell": "bash"}]}, {"name": "start", "steps": [{"type": "gh_action", "cmd": "", "name": "peter-evans/workflow-dispatch", "version": "v2", "shell": "bash"}]}]}
{"id": "24924815_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rubocop\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails db:create RAILS_ENV=test\nbundle exec rails db:schema:load RAILS_ENV=test\nCOVERAGE=true bundle exec rspec\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "codecov/codecov-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install simplecov\n/home/runner/.rbenv/shims/ruby -I./config -rsimplecov -e \"SimpleCov.minimum_coverage 95\" \"./spec/*\"\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "workflow_dispatch", "steps": []}]}
{"id": "24950872_0", "jobs": [{"name": "sonarqube_scan", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean verify sonar:sonar -Dsonar.projectKey=<your_project_key>", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn sonar:project-match -Dsonar.projectKey=<your_project_key> -Dsonar.projectName=<project_name>", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "24969225_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "25011644_0", "jobs": [{"name": "enable-icloud", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodeproj_path=\"YourProject.xcodeproj\"\ncapability=\"iCloud\"\ncd ${xcodeproj_path} || exit\n/usr/libexec/PlistBuddy -c \"Add :capabilities dict\" project.pbxproj\n/usr/libexec/PlistBuddy -c \"Add :capabilities:${capability} dict\" project.pbxproj\n/usr/libexec/PlistBuddy -c \"Add :capabilities:${capability}:enabled bool true\" project.pbxproj\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "25127146_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild build test -scheme YourProjectScheme -workspace YourProject.xcworkspace -destination 'platform=iOS Simulator,name=iPhone 11'\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Build folder path is $GITHUB_WORKSPACE/build\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "25223102_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.3.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud compute instances create github-slave-$(date +%s) \\\n  --image-family=ubuntu-2004-lts \\\n  --image-project=ubuntu-os-cloud \\\n  --machine-type=n1-standard-1 \\\n  --zone=us-central1-a\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "25247632_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "brew install carthage\ncarthage bootstrap --platform iOS --cache-builds\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourApp.xcworkspace -scheme YourUITestsScheme -destination 'platform=iOS Simulator,name=iPhone 12' | xcpretty", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "2533354_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r /path/to/hudson/jobs/. ./hudson_backup\ngit add hudson_backup\ngit commit -m \"Backup Hudson build jobs config\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "25349152_0", "jobs": [{"name": "resolve_issue", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourProjectSchemeName -destination 'platform=iOS Simulator,name=iPhone 12' clean build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourProjectSchemeName -destination 'platform=iOS Simulator,name=iPhone 12' test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "25679691_0", "jobs": [{"name": "push_to_another_branch", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Build Success!\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "25737981_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -resolvePackageDependencies\nxcodebuild -list\nxcodebuild -sdk iphonesimulator -scheme YourScheme\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12'", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "25738278_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "25802882_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "yarn install && yarn encore production", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "webfactory/ssh-agent", "version": "v0.5.3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rsync -r --delete-after $GITHUB_WORKSPACE/ user@example.com:/path/to/deployment/directory\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "25893941_0", "jobs": [{"name": "fork_changes", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b my-changes", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"your-email@example.com\"\ngit config --global user.name \"Your Name\"\ngit add .\ngit commit -m \"Made changes just for me\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v0.5", "shell": "bash"}]}]}
{"id": "25902_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "marketplace/actions/setup-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\nmake\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./build/tests/test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "clang-format -i -style=file src/*.cpp include/*.h\ngit diff --exit-code\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "2590911_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "amokrushin/setup-delphi", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild YourProject.dproj /t:Build /p:config=Release\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "YourTestRunner.exe\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "25928636_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=uniqueName::$(date +'%Y%m%d%H%M%S').jpg\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp path/to/uploaded/file.jpg ${{ github.workspace }}/uploads/$uniqueName\n# Add your CodeIgniter upload logic to save the file with the unique name\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "25961655_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android-emulator/setup-sdk", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android-emulator/start", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "adb wait-for-device", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew connectedDebugAndroidTest", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android-emulator/stop", "version": "v2", "shell": "bash"}]}]}
{"id": "25998407_0", "jobs": [{"name": "coverity-analysis", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": null, "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build --scan", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wget https://downloads.synopsys.com/coverity/Coverity7.7.0/Coverity_Scanner-2019.03-linux64.tar.gz\ntar xvzf Coverity_Scanner-2019.03-linux64.tar.gz\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./Coverity_Scanner-2019.03-linux64/bin/cov-configure --java\n./Coverity_Scanner-2019.03-linux64/bin/cov-build --dir cov-int ./gradlew build\n./Coverity_Scanner-2019.03-linux64/bin/cov-analyze --dir cov-int --all --show-config\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "26048291_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26068730_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild build -workspace YourApp.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11' -quiet", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "2608594_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "warrenbuckley/MSDeploy-WebDeploy-Github-Action", "version": "master", "shell": "bash"}]}]}
{"id": "26086451_0", "jobs": [{"name": "analyze", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/setup-dart", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dart analyze --no-pub --no-exit-on-warnings --options analysis_options.yaml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26101127_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -sS https://getcomposer.org/installer | php\nmv composer.phar /usr/local/bin/composer\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your deployment script here\n# For example: rsync -avz --delete ./ user@your-server:/var/www/html/\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add a check to make sure the deployment was successful\n# For example: curl http://your-server/health_check.php\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your redeployment script here\n# For example: rsync -avz --delete ./ user@your-server:/var/www/html/\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26137878_0", "jobs": [{"name": "push", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\nnew_version=$(git describe --tags)\ngit tag -a $new_version -m \"Release $new_version\"\ngit push origin $new_version\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "26159134_0", "jobs": [{"name": "copy_repository_content", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r * ../destination-repo\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "26218346_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake db:create\nbundle exec rake db:schema:load\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Deploying to staging environment...\"\n# Add deployment steps here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Deploying to production environment...\"\n# Add deployment steps here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26311117_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nyarn install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake db:create\nbundle exec rake db:migrate\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake spec\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake assets:precompile\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26323524_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26334222_0", "jobs": [{"name": "sonarqube", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarqube-scan", "version": "master", "shell": "bash"}]}]}
{"id": "26383663_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [[ ${{ github.ref }} == 'refs/heads/master' ]]; then\n  xcodebuild -workspace YourProject.xcworkspace -scheme YourProductionScheme -destination 'platform=iOS Simulator,name=iPhone 12' clean build\nelif [[ ${{ github.ref }} == 'refs/heads/develop' ]]; then\n  xcodebuild -workspace YourProject.xcworkspace -scheme YourDevelopScheme -destination 'platform=iOS Simulator,name=iPhone 12' clean build\nelif [[ ${{ github.ref }} == 'refs/heads/feature/'* ]]; then\n  feature_branch=$(basename ${{ github.ref }})\n  xcodebuild -workspace YourProject.xcworkspace -scheme YourCustomScheme -destination 'platform=iOS Simulator,name=iPhone 12' clean build\nelse\n  echo \"No matching build configuration for branch ${{ github.ref }}\"\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26397914_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "gajus/teradata-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to install dependencies (e.g., npm install, pip install, etc.)\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to run tests for your Teradata project\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to run any code analysis tools (e.g., linting, static code analysis)\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to deploy your Teradata project (if applicable)\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26445219_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "current_version=$(cat version.txt)\nnew_version=$(echo $current_version | awk -F. '{$NF = $NF + 1;} 1' OFS=.)  # Increment last digit of version\necho $new_version > version.txt\necho \"::set-output name=new_version::$new_version\"  # Output the new version for later steps\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHubActions\"\ngit commit -am \"Auto incremented package version to ${{ steps.increment_version.outputs.new_version }}\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git tag v${{ steps.increment_version.outputs.new_version }}", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "2650187_0", "jobs": [{"name": "sync_ci_activity", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require phing/phing\ncomposer install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Your synchronization logic here\n# Use Phing to interact with SVN and integrate CI activity\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26514475_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -resolvePackageDependencies\nxcodebuild -restoreStandardWorkspace\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourProject.xcworkspace -scheme YourScheme -sdk iphonesimulator", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26536694_0", "jobs": [{"name": "examine-rspec-examples", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec --dry-run\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26586006_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jurplel/setup-qt", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "qmake -makefile\nmake\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "2659433_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\ncd path/to/php && composer install\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd path/to/php\n# Any additional setup steps for the PHP application\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails db:migrate RAILS_ENV=test\nbundle exec rspec\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd path/to/php\n# Commands to run PHP tests\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails db:rollback RAILS_ENV=test\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26595406_0", "jobs": [{"name": "pre-merge", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "luopio/gerrit-trigger-plugin", "version": "v1.1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Commands to run your tests\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Command to trigger the pre-merge action using the Gerrit Trigger Plugin\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26616865_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpunit tests/", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26682968_0", "jobs": [{"name": "update-file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Your updated content goes here\" > path/to/your/file.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add path/to/your/file.txt\ngit commit -m \"Update file using GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "26691606_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php index.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26729124_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundler install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec jekyll build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r path/to/your/images _site/images", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "2673924_0", "jobs": [{"name": "deploy_database_changes", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "julianoe/heavy-mysql-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to deploy database changes before build here\n# For example, using a migration tool like Liquibase or Flyway\n# Example: liquibase update\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to build and deploy your application\n# This step will only run after the database changes have been deployed\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26792493_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec fastlane test", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec fastlane install_fastlane", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec fastlane release_to_testflight", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "2681491_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-android", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chmod +x ./gradlew\n./gradlew build\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26847454_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mathworks/matlab-actions/setup", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "matlab -batch \"disp('Install dependencies here')\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "matlab -batch \"disp('Build MATLAB code here')\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Build successful\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Post to Drone API here\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "26872516_0", "jobs": [{"name": "add_code_block", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "S2Shape/add-code-block-to-pr-description", "version": "v1", "shell": "bash"}]}]}
{"id": "26878182_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install -y nodejs\ngem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails db:create db:schema:load RAILS_ENV=test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails test TEST=test\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "27041616_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-dev", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Replace the following commands with your actual deployment steps using Ant or command line\n# For example, using Ant:\nant -f deploy.xml -Dzsurl=$ZS_URL -Dzskey=$ZS_USER -Dzssecret=$ZS_PASSWORD\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "27076154_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install php-pear\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo pear channel-discover pear.php.net\nsudo pear install phpunit/PHP_ProjectWizard\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit -v", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "27079032_0", "jobs": [{"name": "merge-branches", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git merge --no-ff ${{ github.event.before }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit commit -am \"Merge other branch into mine by GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout master", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit merge --no-ff ${{ github.event.before }}\ngit commit -am \"Merge both branches into master by GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "27131725_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.PROVISIONING_PROFILE }}\" | base64 --decode > profile.mobileprovision\nmkdir -p ~/Library/MobileDevice/Provisioning\\ Profiles\ncp profile.mobileprovision ~/Library/MobileDevice/Provisioning\\ Profiles/\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "/usr/bin/codesign --force --sign \"${{ secrets.PROVISIONING_PROFILE_NAME }}\" --entitlements entitlements.plist MyApp.app\n/usr/bin/plutil -replace beta-reports-active -bool true entitlements.plist\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath MyApp.xcarchive -exportPath MyApp.ipa -exportOptionsPlist ExportOptions.plist\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "27237150_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.2.0", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "aws-actions/configure-aws-credentials", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your deployment commands here\n# For example, if deploying to GCP using gcloud CLI\n# gcloud compute scp <YOUR_LOCAL_FILE> <YOUR_INSTANCE_NAME>:/<REMOTE_PATH>\n\n# If deploying to AWS using AWS CLI\n# aws s3 cp <YOUR_LOCAL_FILE> s3://<YOUR_BUCKET_NAME>/\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "27360190_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp application/config/config.php.example application/config/config.php", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php index.php migrate", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "27362951_0", "jobs": [{"name": "check_tfvc_commits", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add script to fetch latest changeset in TFVC and store it in a file\necho \"Latest TFVC Changeset Number\" > latest_changeset.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/azure/login", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/azure-devops-action", "version": "v1", "shell": "bash"}]}]}
{"id": "27440564_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install cocoapods\npod install --repo-update\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourApp -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 12' build test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Validate your Facebook SDK integration\n# Add commands to test your SDK integration\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "27458830_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chmod +x gradlew", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "27509111_0", "jobs": [{"name": "merge-to-master", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout master && git pull && git merge --no-ff ${{ github.event.ref }}", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "27517657_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "27550422_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to validate and build your source code on Ubuntu\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "27680342_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle config path vendor/bundle\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec middleman build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "27693881_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shimataro/ssh-key", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ssh -o StrictHostKeyChecking=no user@your-ssh-server \"cd /path/to/deployment && git pull\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -X POST -H \"Authorization: Bearer $DRONE_TOKEN\" $DRONE_SERVER/api/repos/<YOUR-REPO>/activate\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "27751578_0", "jobs": [{"name": "fork-repository", "steps": [{"type": "gh_action", "cmd": "", "name": "repo-sync/github-fork", "version": "v1", "shell": "bash"}]}]}
{"id": "28006003_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/propel sql:insert", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker stop mysql", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "28071926_0", "jobs": [{"name": "move_view_folder", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mv view/* view/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"github-actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit commit -am \"Move content of 'view' folder into 'view' folder\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "28079358_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -e 'CREATE DATABASE test_database;'\nmysql test_database < path/to/your/database/migrations.sql\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/kohana-minion test:groups\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "28087223_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build -c Release\n# Add commands to deploy to AppHarbor here\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rtCamp/action-slack-notify", "version": "v2", "shell": "bash"}]}]}
{"id": "28160402_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install jekyll\ngem install html-proofer\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "jekyll build\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "htmlproofer ./_site --disable-external --check-html --empty-alt-ignore --url-ignore '#',ignorethis\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "28219945_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "cynipe/link-checker-action", "version": "v2", "shell": "bash"}]}]}
{"id": "28291313_0", "jobs": [{"name": "store_config", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p .github/config\ncp .github/* .github/config\ngit add .github/config\ngit commit -m \"Store GitHub configuration\" || echo \"No changes to commit\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "28348883_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -NV\nfastlane install_plugins\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane init\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane beta\n# Add any additional parameters or configurations as needed\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "28351568_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer config --global github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer config repositories.private vcs <PRIVATE_VENDOR_REPO_URL>", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require <VENDOR/PACKAGE>:dev-main", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php your_build_script.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "28356706_0", "jobs": [{"name": "version-control", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Perform any changes to the cloned repository here\necho \"Making changes to the cloned repository...\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@users.noreply.github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Automated changes made by GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "28386438_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"<link rel='stylesheet' type='text/css' href='https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/main/path/to/your/css/file.css'>\" >> index.html", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@users.noreply.github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add index.html\ngit commit -m \"Add CSS file to HTML\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "28396075_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build connectedCheck", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud app deploy app.yaml --quiet", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/github-script", "version": "0.3.0", "shell": "bash"}]}]}
{"id": "28507673_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -resolvePackageDependencies\nxcrun simctl list\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourWorkspace.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12'\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -workspace YourWorkspace.xcworkspace -scheme YourScheme -archivePath build/YourApp\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath build/YourApp.xcarchive -exportPath build -exportOptionsPlist ExportOptions.plist\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "28625565_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install bundler\nbundle install --path vendor/bundle\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -scheme YourAppScheme -destination 'platform=iOS Simulator,name=iPhone 11'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "28837340_0", "jobs": [{"name": "xcode_server_ota_install", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean archive -scheme YourAppScheme -archivePath build/YourApp.xcarchive\nxcodebuild -exportArchive -archivePath build/YourApp.xcarchive -exportOptionsPlist exportOptions.plist -exportPath build\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ipatool build-ipa build/YourApp.ipa\nipatool distribute-ipa-to-xcode build/YourApp.ipa\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "28869685_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o publish\ncd publish\ndotnet packagename.dll\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nuget restore YourSolution.sln\nnuget install Microsoft.Owin.Host.SystemWeb -Version 4.2.0\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easingthemes/deploy-cpanel-action", "version": "v1", "shell": "bash"}]}]}
{"id": "28877899_0", "jobs": [{"name": "process_comment", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "bebraw/comment-input-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Parameters: ${{ steps.extract.outputs.parameters }}\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "28880011_0", "jobs": [{"name": "check-code", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run lint", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run format:check", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm audit --audit-level=high", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git diff --name-only origin/main...", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "softprops/action-approve", "version": "v1", "shell": "bash"}]}]}
{"id": "28888159_0", "jobs": [{"name": "precompile-assets", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nnpm install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep 'app/assets\\|public/packs' || exit 0\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake assets:precompile", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit commit -am \"Precompile assets\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29004018_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "chrispat/emu-devcontainer-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild YourProjectName.dproj /p:Config=Debug\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29005382_0", "jobs": [{"name": "xcode_bot_custom_script", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourProjectScheme \\\n           -workspace YourProject.xcworkspace \\\n           -destination 'platform=iOS Simulator,name=iPhone 12' \\\n           build test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your custom script here to process the Xcode Bot results and generate output\necho \"Custom script executed successfully!\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Save the output of the custom script to a file\necho \"Output from custom script\" > custom_output.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "29012537_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "denibertovic/ssdt-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sqlpackage.exe /Action:Publish /SourceFile:$(Build.SourcesDirectory)/YourProject/YourProject.dacpac /TargetServerName:YourServer /TargetDatabaseName:YourDatabase /TargetUser:YourUser /TargetPassword:YourPassword\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29029306_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourApp -workspace YourApp.xcworkspace -sdk iphoneos -configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane gym --workspace YourApp.xcworkspace --scheme YourApp --export_method 'app-store' --configuration 'Release'", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane pilot upload", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29124190_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle config path vendor/bundle\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake assets:precompile\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add public/assets\ngit commit -m \"Precompiled assets\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29208662_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcrun simctl list\nxcodebuild -resolvePackageDependencies\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29270450_0", "jobs": [{"name": "avoid_deleting_local_files", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git diff --name-only HEAD^ HEAD > changed_files.txt\ngit diff --name-only --diff-filter=D HEAD^ HEAD > deleted_files.txt\necho ::set-output name=deleted_files::$(cat deleted_files.txt)\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "deleted_files=$(echo \"${{ steps.deleted_files.outputs.deleted_files }}\" | tr '\\n' ' ')\nfor file in $deleted_files; do\n  if [ ! -e \"$file\" ]; then\n    git checkout HEAD -- \"$file\"\n  fi\ndone\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Fix deleted files\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "29534979_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Install-Module -Name <your_dsc_resource_module_name> -Force -Scope CurrentUser", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Invoke-DscResource -Path .\\your_dsc_configuration_script.ps1", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git push", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29560726_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -scheme YourScheme -workspace YourWorkspace.xcworkspace -configuration Release -archivePath 'build/YourApp'", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [ -d \"build/YourApp.xcarchive\" ]; then\n  echo \"Successful: Archive created\"\nelse\n  echo \"Error: Archive not created\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29622954_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php index.php build-slug\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easingthemes/ssh-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "29665673_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": null, "shell": "bash"}]}]}
{"id": "29685690_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your PHP linting, unit testing commands here\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git pull\n# Add your deployment script/command here for single feature deployment\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29703219_0", "jobs": [{"name": "promote_build_parameter", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ${{ github.event.inputs.promoted_value }} > promoted_value.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'GitHub Actions'\ngit config --global user.email 'actions@users.noreply.github.com'\ngit add promoted_value.txt\ngit commit -m 'Promote build parameter value'\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "29794034_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -scheme YourScheme -workspace YourWorkspace.xcworkspace -configuration Release -archivePath $PWD/build/YourApp.xcarchive", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath $PWD/build/YourApp.xcarchive -exportPath $PWD/build -exportOptionsPlist ExportOptions.plist", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29838634_0", "jobs": [{"name": "skip_files", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add file patterns to skip in the following array\nskip_files=(file1.txt file2.png folder/file3.js)\n\nfor file in \"${skip_files[@]}\"; do\n  if [ -f \"$file\" ]; then\n    git rm --cached \"$file\"\n  fi\ndone\n\ngit commit -m \"Skipping files on commit\" -a --no-verify --allow-empty\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "29980566_0", "jobs": [{"name": "perforce_checkout", "steps": [{"type": "gh_action", "cmd": "", "name": "perforce/p4sync-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [[ $GITHUB_REF == refs/tags/v* ]]; then\n  echo \"RELEASE_BRANCH=$(echo ${GITHUB_REF#refs/tags/})\"\nelse\n  echo \"Cannot determine release branch.\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [[ $RELEASE_BRANCH == 'prod' ]]; then\n  echo \"Deploying to production environment...\"\n  RELEASE_ENV=production\nelif [[ $RELEASE_BRANCH == 'stage' ]]; then\n  echo \"Deploying to staging environment...\"\n  RELEASE_ENV=staging\nelse\n  echo \"Undefined environment.\"\n  exit 1\nfi\necho \"::set-output name=release_env::$RELEASE_ENV\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git fetch --all\ngit checkout ${RELEASE_BRANCH}\necho \"Checked out branch: $RELEASE_BRANCH for $RELEASE_ENV environment.\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29986942_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nvidia/setup-cuda", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nvidia/setup-cudnn", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python -m pip install --upgrade pip\npip install -r requirements.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python test.py  # Replace test.py with your actual testing script\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "29990318_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails assets:precompile RAILS_ENV=production\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Replace these commands with your actual build commands for the SPA frontend\ncd path/to/your/frontend\nnpm install\nnpm run build\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "3000190_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your code linting or formatting checks here\n# Example: npm run lint\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your test commands here\n# Example: npm test\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "github/codeql-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add deployment commands to your staging environment\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add a notification step to alert team members about the pull request\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "30036433_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-dev --optimize-autoloader", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/rocketeer deploy", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "30087129_0", "jobs": [{"name": "transfer", "steps": [{"type": "gh_action", "cmd": "", "name": "endofiz/transfer-repository-action", "version": "v1", "shell": "bash"}]}]}
{"id": "30135691_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout main && git merge ${{ github.head_ref }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.name 'GitHub Actions'\ngit config user.email 'actions@github.com'\ngit commit -am \"Merge branch '${{ github.head_ref }}'\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "3013821_0", "jobs": [{"name": "setup-mysql-replication", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mysql-action/setup-mysql", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -uroot -p\"${{ secrets.MYSQL_ROOT_PASSWORD }}\" -e \"CREATE USER 'repl'@'%' IDENTIFIED BY '${{ secrets.REPL_PASSWORD }}';\"\nmysql -uroot -p\"${{ secrets.MYSQL_ROOT_PASSWORD }}\" -e \"GRANT REPLICATION SLAVE ON *.* TO 'repl'@'%';\"\nMASTER_STATUS=$(mysql -uroot -p\"${{ secrets.MYSQL_ROOT_PASSWORD }}\" -e \"SHOW MASTER STATUS\" | tail -n +2)\necho \"::set-output name=master_status::$MASTER_STATUS\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=master_status::${{ steps.configure-master-database.outputs.master_status }}\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "MASTER_STATUS=(${{ steps.save-master-status.outputs.master_status }})\nmysql -uroot -p\"${{ secrets.MYSQL_ROOT_PASSWORD }}\" -e \"CHANGE MASTER TO MASTER_HOST='${{ secrets.MASTER_DB_IP }}', MASTER_USER='repl', MASTER_PASSWORD='${{ secrets.REPL_PASSWORD }}', MASTER_LOG_FILE='${MASTER_STATUS[0]}', MASTER_LOG_POS=${MASTER_STATUS[1]};\"\nmysql -uroot -p\"${{ secrets.MYSQL_ROOT_PASSWORD }}\" -e \"START SLAVE;\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "30228148_0", "jobs": [{"name": "poll-perforce-streams", "steps": [{"type": "gh_action", "cmd": "", "name": "perforce/p4-cli-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "for stream in stream1 stream2 stream3; do\n  changes=$(p4 -Ztag changes -s submitted //depot/$stream/...@change,change+1)\n  if [ -n \"$changes\" ]; then\n    echo \"Changes detected in $stream\"\n    # Trigger subsequent actions or processes here\n  else\n    echo \"No changes in $stream\"\n  fi\ndone\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "3024817_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourProjectScheme -workspace YourProjectWorkspace.xcworkspace build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourProjectScheme -workspace YourProjectWorkspace.xcworkspace test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "30281536_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme \"YourAppScheme\" clean build test -destination \"platform=macOS\" CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "30372934_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\nnpm ci\nnpm run build\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'Automated Build'\ngit config --global user.email 'actions@users.noreply.github.com'\ngit checkout -b build-artifacts-${GITHUB_RUN_ID}\nmv dist/ build/\ngit add build/\ngit commit -m 'Automated build artifacts'\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "30388900_0", "jobs": [{"name": "build-ios", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -NV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane ios ci", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "30393806_0", "jobs": [{"name": "show-diff", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=sha::${GITHUB_SHA}\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Commit: ${{ steps.commit.outputs.sha }}\"\ngit fetch origin\ngit diff --find-renames $(git log -1 --pretty=%H ${{ steps.commit.outputs.sha }}^)..${{ steps.commit.outputs.sha }} > diff.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mshick/github-action-comment", "version": "v1", "shell": "bash"}]}]}
{"id": "30439927_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec jekyll build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "30440430_0", "jobs": [{"name": "scrutinizer", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "scrutinizer-ci/github-action", "version": "v1", "shell": "bash"}]}]}
{"id": "30445632_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": null, "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build and test commands here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "30492230_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "home64/actions/setup-gcloud", "version": "v0.5", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud config set project <your-project-id>", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth activate-service-account --key-file=${{ secrets.GCP_SA_KEY }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud run deploy <your-service> \\\n  --image=<your-container-image> \\\n  --platform=managed \\\n  --region=<your-region>\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "3056830_0", "jobs": [{"name": "java_build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean install", "name": "", "version": "", "shell": "bash"}]}, {"name": "python_build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pip install -r requirements.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pytest", "name": "", "version": "", "shell": "bash"}]}, {"name": "ruby_build", "steps": [{"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rspec", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "30672602_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nuget restore YourSolution.sln\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild YourSolution.sln /p:Configuration=Release\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to run tests here\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/azure-pipelines-task-lib", "version": "3", "shell": "bash"}]}]}
{"id": "30680846_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -l index.php", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit tests/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Deploying to production server\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Deploying to staging server\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "30697558_0", "jobs": [{"name": "install-packages", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer global require --dev packagename1 packagename2", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "30708983_0", "jobs": [{"name": "push-issues", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clone <GIT_SERVER_REPO_URL>\ncd <REPO_NAME>\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git log --all --grep=\"^Issue\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd $GITHUB_WORKSPACE\n# Add code to parse the fetched issues and push to GitHub repository\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "30741937_0", "jobs": [{"name": "tag_version", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ::set-output name=VERSION::v$(git describe --tags --abbrev=0)", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "go mod download\ngo build -o myapp\ngo test ./...\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git tag ${{ steps.version.outputs.VERSION }}", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "30809323_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git init", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git commit -m \"Initial commit\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "30814130_0", "jobs": [{"name": "change_folder_path", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install cocoapods\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "defaults write com.apple.dt.Xcode IDECustomDerivedDataLocation ${{ github.workspace }}/NewDerivedDataFolder\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "30831187_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild YourSolutionFile.sln /p:Configuration=Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit tag v1.0.$GITHUB_RUN_NUMBER\ngit push origin --tags\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "30981232_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd your_project_directory\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourWorkspace.xcworkspace -scheme YourScheme", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -workspace YourWorkspace.xcworkspace -scheme YourScheme -archivePath build/YourApp.xcarchive", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath build/YourApp.xcarchive -exportPath build -exportOptionsPlist ExportOptions.plist", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "31008383_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud app deploy --project=<your-gcp-project-id> app.yaml module1.yaml module2.yaml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "31047034_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nmatei/labview-actions/setup", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "lv-cli --build myVI.vi --target cRIO --flag myCompileFlag", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "31060947_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "yakkomajuri/gh-contribution-graph", "version": "v1", "shell": "bash"}]}]}
{"id": "31081200_0", "jobs": [{"name": "modify-code", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Replace 'oldData' with 'newData' in example.txt\nsed -i 's/oldData/newData/g' example.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Automated code modification\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "31140200_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Install-Module -Name Pester -Force -SkipPublisherCheck", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Invoke-Command -ComputerName <remote-computer> -ScriptBlock {\n  # Commands to run Pester tests remotely here\n  # Example:\n  Import-Module Pester\n  $result = Invoke-Pester -Path C:\\path\\to\\test\\file.tests.ps1\n  if ($result.FailedCount -gt 0) {\n    Write-Host \"Pester tests failed!\"\n    exit 1\n  } else {\n    Write-Host \"Pester tests passed!\"\n  }\n}\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "31236493_0", "jobs": [{"name": "add-libraries", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subchen/setup-netbeans", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd /path/to/your/project\n# Download libraries or add jars to your project\n# For example:\nwget https://example.com/library.jar -P lib/\n# Or manually copy the jar files\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.email \"<your-email>\"\ngit config user.name \"<your-username>\"\ngit add .\ngit commit -m \"Added libraries to project\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "31377758_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane deliver", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "31380286_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2.1.4", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "gr2m/set-status-action", "version": "v2", "shell": "bash"}]}]}
{"id": "31397844_0", "jobs": [{"name": "merge", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git merge main", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/commit-and-push-action", "version": "v1", "shell": "bash"}]}]}
{"id": "31438954_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp .env.default .env", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bin/cake migrations migrate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bin/cake test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bin/cake i18n extract", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpcs --standard=CakePHP --extensions=php src tests", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require cakephp/authentication:~1.3 --no-interaction", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Build successful\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "31458986_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install --global jspm webpack browserify requirejs\nnpm install # Install project dependencies\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Build your project using either jspm, webpack, browserify, or requirejs\n# Replace the command with your bundling tool of choice\nwebpack # Example command to bundle using webpack\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/msdeploy", "version": "v1", "shell": "bash"}]}]}
{"id": "315778_1", "jobs": [{"name": "clear-builds", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./clear_builds.ps1\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "31683627_0", "jobs": [{"name": "auto_append", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Your Bash script content here\" >> script.sh", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'GitHub Actions'\ngit config --global user.email 'actions@users.noreply.github.com'\ngit add script.sh\ngit commit -m \"Auto-append script\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "31833554_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "versionRegex='\\d+\\.\\d+\\.\\d+\\.\\d+' # Regex pattern to match version number in the project file\nprojectFile='YourProject.csproj' # Path to your Visual Studio project file\n\ncurrentVersion=$(grep -Po $versionRegex $projectFile)\nnewVersion=\"$(cut -d. -f1,2,3 <<<$currentVersion).$((1 + $(cut -d. -f4 <<<$currentVersion)))\"\n\nsed -i \"s/$currentVersion/$newVersion/\" $projectFile\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\n\ngit add $projectFile\ngit commit -m \"Auto increment build version\" || true\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "31890665_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -scheme YourXcodeProjectScheme -destination 'platform=iOS Simulator,name=iPhone 11'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "31924969_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleDebug", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wzieba/Firebase-Test-Lab-Github-Action", "version": "v1.2", "shell": "bash"}]}]}
{"id": "31986449_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane\nfastlane install_plugins\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane supply --apk $APK_PATH --track alpha", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32013323_0", "jobs": [{"name": "manual_job", "steps": [{"type": "gh_action", "cmd": "", "name": "repo/actions/wait-for-approval", "version": "v1", "shell": "bash"}]}, {"name": "automatic_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Running automated tasks...\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32016388_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}]}, {"name": "database-connect", "steps": [{"type": "shell_cmd", "cmd": "# Example: Connect to PostgreSQL\npsql -h $DB_HOST -U $DB_USER -d your_database -c \"SELECT NOW();\"\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "phonegap-build", "steps": [{"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "phonegap/build-action", "version": "v2", "shell": "bash"}]}]}
{"id": "32042482_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo xcode-select -s /Applications/Xcode.app/Contents/Developer", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourWorkspace.xcworkspace -scheme YourScheme test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32083029_0", "jobs": [{"name": "perl-tidy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shogo82148/actions/setup-perl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cpanm Perl::Tidy", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "perltidy -b lib/*.pl t/*.pl", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit diff --staged --quiet || git commit -m \"Apply Perl::Tidy formatting\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "3210501_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phing build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "32109676_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install\nbrew install ruby # Install any dependencies required for your project\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -project YourProject.xcodeproj -scheme YourScheme", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcrun instruments -w \"Your Device Name\" YourApp.app", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "3220647_0", "jobs": [{"name": "phpunit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit --configuration /path/to/phpunit.xml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32239099_1", "jobs": [{"name": "setup_network_access", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Set-Location -Path ${{ github.workspace }}\n.\\configure_network_access.ps1\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32262295_0", "jobs": [{"name": "add_reviewer", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "32330922_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpcs --standard=PSR2 src", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit --coverage-clover=coverage.xml", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "codecov/codecov-action", "version": "v2", "shell": "bash"}]}]}
{"id": "3236740_0", "jobs": [{"name": "static-analysis", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpstan analyse --level max", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32384965_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "coverity/coverity-scan-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cov-analysis-linux64-2021.09/bin/cov-build --dir cov-int make", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "tar czvf coverity-scan-results.tgz cov-int", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "32464231_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build YourProject.csproj --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "32479251_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nanake/headless-chrome-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your command to start Selenium tests with Chrome here\n# Example: mvn test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "timeout=10800\nstart_time=$(date +%s)\nwhile :\ndo\n  now=$(date +%s)\n  elapsed=$(($now - $start_time))\n  if [ $elapsed -ge $timeout ]; then\n    echo \"Process exceeded time limit. Killing...\"\n    pkill java\n    break\n  fi\n  sleep 60 # Check every minute\ndone\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32527186_0", "jobs": [{"name": "count_posts_by_tags", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nbundle exec jekyll build\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "tags_counts=\"$(jq -r '.tags[]' path/to/your/jekyll/site/_posts/*.md | sort | uniq -c)\"\necho \"$tags_counts\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32555518_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -sSL https://cli.mci.run/install.sh | sh", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "magnum setup --token YOUR_MAGNUM_TOKEN", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "magnum run", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "magnum push", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "magnum trigger YOUR_PRIVATE_REPO", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Workflow completed successfully!\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32585972_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp extension/My_controller.php application/controllers/My_controller.php", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php index.php routes/validate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add application/controllers/My_controller.php\ngit commit -m \"Extend CI_Controller in controllers folder\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32596511_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake db:create\nbundle exec rake db:migrate\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "3269133_1", "jobs": [{"name": "phpcs", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpcs", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32743012_0", "jobs": [{"name": "set_build_settings", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -project path/to/your.xcodeproj -scheme \"YourScheme\" -configuration \"Release\" CONFIGURATION_BUILD_DIR='$(PWD)/build' -target \"YourTarget\" CLANG_ENABLE_MODULES=YES OTHER_SWIFT_FLAGS=\"-D SWIFT_COMPILE_TIME_VALUE=\\\"TRUE\\\"\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"github-actions[bot]@users.noreply.github.com\"\ngit config --global user.name \"github-actions[bot]\"\ngit add .\ngit commit -m \"Update Xcode build settings via terminal\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "32759486_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=build_id::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/set-output", "version": "v2", "shell": "bash"}]}]}
{"id": "32815387_0", "jobs": [{"name": "add_projects", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r /path/to/project1/* .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Adding Project1\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r /path/to/project2/* .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Adding Project2\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "32997975_0", "jobs": [{"name": "save-dependencies", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add composer.lock\ngit commit -m \"chore: Update Composer dependencies\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "33022739_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run add-test-properties", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Add HTML properties for test automation\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "33095105_0", "jobs": [{"name": "generate-report", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run generate-report", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "33110549_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit --colors=always tests/Class1Test.php tests/Class2Test.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "33148696_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -NV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane pilot upload", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "3316144_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install httparty\ngem install json\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ruby update_unfuddle_ticket.rb\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "33182534_0", "jobs": [{"name": "upload", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.email \"<your-email>\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add -A", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git commit -m \"Upload project to GitHub\" || echo \"No changes to commit\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "33191163_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "chrislennon/setup-vagrant", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vagrant ssh -c \"cd /vagrant && your_dependency_manager_install_command\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vagrant ssh -c \"cd /vagrant && your_test_command\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vagrant halt", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "33285909_0", "jobs": [{"name": "sonarqube", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "33343904_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install ant\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wget https://archive.apache.org/dist/ant/ivy/2.5.0/apache-ivy-2.5.0-bin.zip\nunzip apache-ivy-2.5.0-bin.zip\nexport IVY_HOME=$RUNNER_TEMP/apache-ivy-2.5.0\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install maven\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wget http://www.phing.info/get/phing-latest.phar\nchmod +x phing-latest.phar\nsudo mv phing-latest.phar /usr/local/bin/phing\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ant build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "java -Divy.home=$IVY_HOME -jar $IVY_HOME/ivy-2.5.0.jar", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phing", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "33344347_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build\n./gradlew sonarqube \\\n  -Dsonar.projectKey=YOUR_PROJECT_KEY \\\n  -Dsonar.organization=YOUR_ORGANIZATION \\\n  -Dsonar.host.url=https://sonarcloud.io \\\n  -Dsonar.login=${{ secrets.SONAR_TOKEN }}\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "IQAndreas/github-sonarqube-action", "version": "v1.1", "shell": "bash"}]}]}
{"id": "33354720_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "pupupulp/setup-ssh-tunnel", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Connection established through SSH tunnel.\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Build success! Sending status to GitHub.\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "33374193_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,OS=latest,name=iPhone 12'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "33402980_0", "jobs": [{"name": "cleanup_and_build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git fetch --prune\ngit reflog expire --expire=1.hour\ngit gc --prune=now\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourProject.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11' build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "33411571_0", "jobs": [{"name": "auto_stage_branch", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit commit -m \"Auto stage changes\" || true\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v1", "shell": "bash"}]}]}
{"id": "33438373_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "soren1711/vsonline-action", "version": "v1", "shell": "bash"}]}]}
{"id": "33576779_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install bundler\nbundle install\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourApp.xcworkspace -scheme YourApp -destination 'platform=iOS Simulator,name=iPhone 12' | xcpretty", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [ $? -ne 0 ]; then\n  echo \"Tests failed. Sending notification to Apple CI bots.\"\n  # Add code here to send notification to Apple CI bots, for example:\n  # curl -X POST 'https://apple-ci-bot.com/notify' -d 'message=Test failures detected in iOS tests.'\nelse\n  echo \"Tests passed successfully!\"\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "33634504_0", "jobs": [{"name": "import", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/import", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Import process started. Check the GitHub repository for import status.\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "33808303_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "w9jds/firebase-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Build your Android/iOS project\n./gradlew assembleRelease\n# Upload the distribution to Crashlytics\n./gradlew crashlyticsUploadDistributionRelease\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rtCamp/action-slack-notify", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rtCamp/action-slack-notify", "version": "v2", "shell": "bash"}]}]}
{"id": "33865283_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require codeigniter/framework", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php index.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "33871306_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install && npm run production", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easingthemes/ssh-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "33900581_0", "jobs": [{"name": "nest_repos", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git submodule add <submodule_repository_url> <submodule_path>\ngit submodule update --init --recursive\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.name \"GitHub Actions\"\ngit config user.email \"<your_email>\"\ngit commit -am \"Add submodule\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/push-repo-action", "version": "v1", "shell": "bash"}]}]}
{"id": "33902158_0", "jobs": [{"name": "continue_pull_request", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b continue-${{ github.event.pull_request.number }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"This is a new line added by GitHub Actions\" >> example.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'GitHub Actions'\ngit config --global user.email 'actions@users.noreply.github.com'\ngit add .\ngit commit -m \"Automated update by GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "34051695_0", "jobs": [{"name": "push-commit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout branch-b\ngit merge origin/branch-a --no-commit\ngit commit -m \"Merged branch-a into branch-b\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "34086051_0", "jobs": [{"name": "sonarqube", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarqube-scan-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your test-running command here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "34106907_0", "jobs": [{"name": "merge_branches", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b merged-branch", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git merge --no-commit --no-ff feature-branch", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git rm -r --cached path/to/file_or_folder", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.name 'Your Name'\ngit config user.email 'youremail@example.com'\ngit commit -am \"Merge feature-branch into main with file/folder exclusion\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "34123105_0", "jobs": [{"name": "delete_superseded_builds", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "345547_0", "jobs": [{"name": "generate-code", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mathworks/matlab-actions/setup", "version": "v0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "matlab -batch \"genCode('path/to/your/model.slx')\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Generated MATLAB code\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "34564791_0", "jobs": [{"name": "clone-laravel-project", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer self-update\ncomposer install --no-scripts\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer create-project laravel/laravel my-laravel-app \"5.1.*\" --prefer-dist", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require torann/geonames", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp .env.example .env", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "34598087_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "chrispat/Setup-Eclipse", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "/opt/eclipse/eclipse -nosplash -application org.eclipse.cdt.managedbuilder.core.headlessbuild -data <path-to-your-eclipse-workspace> -importAll <path-to-your-project> -cleanBuild all\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "34621124_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mindrunner/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "34655381_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install\nnpm install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "34733359_0", "jobs": [{"name": "add-unversioned-file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"This is an unversioned file created using GitHub Actions\" > unversioned-file.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add unversioned-file.txt\ngit commit -m \"Add unversioned file\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "34762063_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r /path/to/your/project/* $GITHUB_WORKSPACE\ngit config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Add project files to repository\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "34813129_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet sonarscanner begin /k:\"your_project_key\" /d:sonar.login=\"${{ secrets.SONAR_TOKEN }}\" /d:sonar.host.url=\"https://sonarcloud.io\" /d:sonar.cs.opencover.reportsPaths=\"**/coverage.opencover.xml\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test --no-build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet sonarscanner end /d:sonar.login=\"${{ secrets.SONAR_TOKEN }}\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "34813778_0", "jobs": [{"name": "notify_on_review", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dezull/action-hipchat", "version": "v2", "shell": "bash"}]}]}
{"id": "34821023_0", "jobs": [{"name": "xcode_ui_tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourAppScheme test | xcpretty -r junit\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "3491849_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pip install -r requirements.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "hg clone https://your-mercurial-repo-url\ncp -r your-mercurial-repo-folder/* $GITHUB_WORKSPACE/\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/deploy-appengine", "version": "main", "shell": "bash"}]}]}
{"id": "35017724_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ${{ secrets.SERVER_KEY }} > serverKey.pem", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "extenda/actions-webstore", "version": "v1", "shell": "bash"}]}]}
{"id": "35043733_0", "jobs": [{"name": "create_nested_repositories", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir nested-repo", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git submodule add <repository_url> nested-repo", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Add nested repository as submodule\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "35054298_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B clean verify", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-html-publish", "version": "v2", "shell": "bash"}]}]}
{"id": "35062911_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35110123_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cxx", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\nmake\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35112185_0", "jobs": [{"name": "check_status", "steps": [{"type": "gh_action", "cmd": "", "name": "github-script/wait", "version": "main", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [ \"${{ steps.wait-for-status.outputs.status }}\" != \"success\" ]; then\n  echo \"The status check did not pass. Exiting the workflow.\"\n  exit 1\nelse\n  echo \"The status check is successful. Proceeding with further actions.\"\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35122791_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "reactivecircus/android-emulator-runner", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "adb devices", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35182471_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your test commands here\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}]}]}
{"id": "35204223_0", "jobs": [{"name": "merge_pull_request", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git fetch origin ${{ github.event.pull_request.head.ref }}\ngit checkout -b pr-branch FETCH_HEAD\ngit merge ${{ github.event.pull_request.head.sha }}\ngit push origin pr-branch\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "35214770_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nbundle exec pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean test -workspace YourProject.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11' CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO ONLY_ACTIVE_ARCH=NO\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35260325_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=Release", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add deployment steps here\n# For example, copying files to a specific location\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35278957_0", "jobs": [{"name": "modify-pull-request", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Modifying the pull request code\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Modify pull request\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "35311315_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "r0adkll/setup-android-emulator", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "emulator -avd <avd-name> -no-window", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35317285_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -workspace YourProject.xcworkspace -scheme YourScheme -archivePath YourApp", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath YourApp.xcarchive -exportOptionsPlist exportOptions.plist -exportPath build", "name": "", "version": "", "shell": "bash"}]}, {"name": "promote", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane deliver --username \"your_apple_id@example.com\" --app_identifier \"your.app.bundle.id\" --ipa \"build/YourApp.ipa\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35367683_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud app deploy app.yaml --quiet\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35458369_0", "jobs": [{"name": "simulate-location", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install cocoapods\npod install\nxcodebuild -resolvePackageDependencies\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourAppScheme -workspace YourApp.xcworkspace -destination 'platform=iOS Simulator,name=iPhone 12' -allowProvisioningUpdates \\\n-gpx /path/to/your/location.gpx clean test\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35499859_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "$encryptedCredentials = $env:MY_CREDENTIALS\n$credentials = ConvertFrom-SecureString $encryptedCredentials\n$username = $credentials.Username\n$password = $credentials.Password\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Your deployment script using $username and $password goes here\n# Example:\n# $cred = New-Object System.Management.Automation.PSCredential($username, (ConvertTo-SecureString $password -AsPlainText -Force))\n# YourDeploymentFunction -Credential $cred\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "$expirationDate = \"2023-12-31\"\n$currentDate = Get-Date\n\nif ($currentDate -ge $expirationDate) {\n  throw \"Credentials have expired. Please update before deployment.\"\n} else {\n  Write-Output \"Credentials are valid.\"\n}\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35547936_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -workspace YourWorkspace.xcworkspace -scheme YourScheme -configuration Release -archivePath YourArchivePath.xcarchive PROVISIONING_PROFILE=\"your_provisioning_profile_uuid\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath YourArchivePath.xcarchive -exportPath YourExportPath -exportOptionsPlist ExportOptions.plist", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "35551739_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -h 127.0.0.1 -u test_user -p${{ secrets.MYSQL_ROOT_PASSWORD }} test_db < path/to/database/schema.sql\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35563012_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"[build | passing]\" > build_status.txt", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "35574502_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Pehr/silea-trigger-pipeline-gerrit-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35599112_0", "jobs": [{"name": "update_default_branch", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [ \"$(git symbolic-ref --short HEAD)\" != \"main\" ]; then\n  echo \"::set-output name=update_branch::true\"\nelse\n  echo \"::set-output name=update_branch::false\"\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git branch -m main new-main\ngit push origin new-main\ngit symbolic-ref refs/heads/main refs/heads/new-main\ngit push origin --delete main\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "repo-sync/github-action", "version": "v2", "shell": "bash"}]}]}
{"id": "35641638_0", "jobs": [{"name": "copy-templates", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p .github\ncp -r path/to/templates/.github/PULL_REQUEST_TEMPLATE/ .github/\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "35642524_0", "jobs": [{"name": "send_email", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Run your script that generates the email content\nscript_output=$(your_script.sh)\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sendgrid/email-action", "version": "v1", "shell": "bash"}]}]}
{"id": "35686138_0", "jobs": [{"name": "install_gem", "steps": [{"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install specific_gem_name --version 'x.x.x'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35751042_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem build your_gem_name.gemspec\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem push your_gem_name-*.gem\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35769047_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "skcript/hockeyapp-action", "version": "v1", "shell": "bash"}]}]}
{"id": "35782425_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -v", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -sS https://getcomposer.org/installer | php", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php composer.phar install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35782953_0", "jobs": [{"name": "pull-and-commit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout <commit_sha>", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit commit -am \"Commit pulled changes\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "3580240_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "skjolber/just-build", "version": "main", "shell": "bash"}, {"type": "shell_cmd", "cmd": ".\\NAnt.exe -buildfile:build.build\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Build completed\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "35912145_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "SamKirkland/FTP-Deploy-Action", "version": "3.1", "shell": "bash"}]}]}
{"id": "35919983_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build:report", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v3", "shell": "bash"}]}]}
{"id": "35981846_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean package", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "36129781_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean build -workspace YourProject.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' CODE_SIGNING_REQUIRED=NO\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "36131639_0", "jobs": [{"name": "check_approval", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}, {"type": "shell_cmd", "cmd": "approvals=$(echo \"${{ steps.pr_approved.outputs.data }}\" | jq '.[] | select(.state == \"APPROVED\")' | jq 'select(length == 0) | length')\nif [ $approvals -eq 0 ]; then\n  echo \"This PR must be approved before merging.\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "36236813_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.4", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /t:Build /p:Configuration=Release", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msdeploy", "version": "v1.0.2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msdeploy -verb:sync -source:package=\"<path-to-package>\" -dest:auto", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "36241966_0", "jobs": [{"name": "update_and_merge", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your update script or commands here\necho \"Updating sources...\"\n# For example, you can git pull changes\ngit pull\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.name 'Your Name'\ngit config user.email 'your.email@example.com'\ngit add .\ngit commit -m \"Auto-update sources $(date +%F)\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2.8.0", "shell": "bash"}]}]}
{"id": "36297802_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud app deploy app.yaml --quiet", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "36402661_0", "jobs": [{"name": "run_ios_simulator", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourProject.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,OS=latest,name=iPhone 11' build test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcrun simctl list\nxcrun instruments -s devices\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcrun simctl boot \"iPhone 11\"\nxcrun simctl launch booted your.bundle.id\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "36420344_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "reactivecircus/android-emulator-runner", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "adb shell input keyevent 82 &", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chmod +x gradlew", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew connectedAndroidTest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew connectedDebugAndroidTest", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "36424639_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -project YourProject.xcodeproj -scheme YourScheme build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Executing shell command\"\n# Add your shell command here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "3649205_0", "jobs": [{"name": "sourcemonitor", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "aaditya-saxena/setup-sourcemonitor", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Run Sourcemonitor command here\nsourcemonitorcli --project path/to/your/project.smp\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "36521801_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": ".\\path\\to\\your\\script.ps1", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "3656988_0", "jobs": [{"name": "build", "steps": [{"type": "shell_cmd", "cmd": "echo \"##[set-env name=BUILD_ID]100\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i 's/old_project_name/new_project_name/g' README.md # Replace 'old_project_name' with the old project name and 'new_project_name' with the new project name\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'Your Name'\ngit config --global user.email 'youremail@example.com'\ngit add .\ngit commit -m \"Renamed the project and set initial build number\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v0.5", "shell": "bash"}]}]}
{"id": "36654260_0", "jobs": [{"name": "export-ssis-diagram", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /t:Build /p:Configuration=Release /p:Platform=\"Any CPU\" YourSSISProjectFile.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd YourSSISProjectFolder\n\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\SQL\\Common7\\IDE\\CommonExtensions\\Microsoft\\SSIS\\110\\DtsDebugHost.exe\" /diagrams Package.dtsx\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "36778339_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "36802309_0", "jobs": [{"name": "change_credentials", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"NEW_USERNAME=your_new_username\\nNEW_TOKEN=your_new_token\" >> .env", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "alexander-akhmetov/github-secret", "version": "v2", "shell": "bash"}]}]}
{"id": "36814259_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cpp", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "g++ -o my_program main.cpp\n./my_program\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "36847920_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "git pull", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "36928717_0", "jobs": [{"name": "sonarqube", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "SonarSource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "3696629_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "36977420_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\nnpm install\nnpm run build\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "codeship/actions/deploy", "version": "master", "shell": "bash"}]}]}
{"id": "36997898_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "lukka/setup-cmake", "version": "v1.2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msvc", "version": "latest", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "NuGet/setup-nuget", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nuget restore YourSolution.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=Release /p:Platform=x64 YourSolution.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test --configuration Release --logger trx --collect \"Code Coverage\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "37010110_0", "jobs": [{"name": "push_old_commit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "OLD_COMMIT=$(git rev-list -n 1 ${{ github.event.before }} --not ${{ github.event.after }})\necho \"::set-output name=old_commit::$OLD_COMMIT\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b new-branch", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git cherry-pick ${{ steps.commit.outputs.old_commit }}", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/push-subdirectory-to-another-repository", "version": "master", "shell": "bash"}]}]}
{"id": "37015414_0", "jobs": [{"name": "xcode_integration", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "xcode/trigger", "version": null, "shell": "bash"}]}]}
{"id": "37062458_0", "jobs": [{"name": "merge-into-master", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout master", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git merge ${{ github.ref }}\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "37103943_0", "jobs": [{"name": "update-submodule", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git submodule init\ngit submodule update\ngit config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Update submodules\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "37107609_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "macrat/send-keys", "version": "v1", "shell": "bash"}]}]}
{"id": "37231342_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "redhat-actions/oc-cli", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "oc login <OPENSHIFT_SERVER> --token=<OPENSHIFT_TOKEN>", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t <IMAGE_NAME> .\ndocker tag <IMAGE_NAME> <REGISTRY_SERVER>/<PROJECT_NAME>/<IMAGE_NAME>\ndocker push <REGISTRY_SERVER>/<PROJECT_NAME>/<IMAGE_NAME>\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "oc apply -f deployment.yaml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "37251427_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\nmake\n./run_catch_tests\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rlespinasse/test-reporter-action", "version": "v1", "shell": "bash"}]}]}
{"id": "3726888_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test ProjectName.Tests/ProjectName.Tests.csproj", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o ./publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "37278612_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install compass", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "compass compile", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "37280954_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test --configuration Release --no-build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "37291054_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.3", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/azure-pipelines-tfs-login", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nuget restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /t:VSTest /p:VSTestPath=\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\TestWindow\\vstest.console.exe\" /p:Platform=\"Any CPU\" /p:Configuration=\"Release\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "37294471_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "aws-actions/aws-codedeploy-github-deploy", "version": "v1", "shell": "bash"}]}]}
{"id": "37362994_0", "jobs": [{"name": "rename_file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mv old_filename new_filename\ngit rm old_filename\ngit add new_filename\ngit commit -m \"Renamed file from old_filename to new_filename\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/push-up-to-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "37405178_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew clean test\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "37405343_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet pack --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nuget/push", "version": "v1", "shell": "bash"}]}]}
{"id": "37421734_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build YourWebProject.csproj --configuration Release\ndotnet publish YourWebProject.csproj --no-restore --configuration Release --output ./publish\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "37468455_0", "jobs": [{"name": "clear-workspace", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rm -rf $GITHUB_WORKSPACE/*\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "37468922_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "diskutil erasevolume HFS+ 'RamDisk' `hdiutil attach -nomount ram://8388608`\nmkdir /Volumes/RamDisk/_xcsbuildd\nchown _xcsbuildd:staff /Volumes/RamDisk/_xcsbuildd\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourWorkspace.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,OS=latest,name=iPhone 12' build test\n# Add any additional build or test commands here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "37512963_0", "jobs": [{"name": "concat_files", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"CSV 1,CSV 2,CSV 3\" > concatenated.csv", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clone <REPOSITORY_URL> additional_repo", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mv concatenated.csv additional_repo/\ncd additional_repo\ngit add concatenated.csv\ngit commit -m \"Add concatenated CSV files\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/push-subdirectory-to-another-repo", "version": "master", "shell": "bash"}]}]}
{"id": "37662267_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}]}, {"name": "notify-on-failure", "steps": [{"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v3", "shell": "bash"}]}]}
{"id": "37720268_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B clean verify", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "37728578_0", "jobs": [{"name": "rework_pr", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"rework-bot@example.com\"\ngit config --global user.name \"Rework Bot\"\ngit checkout -b rework-${{ github.event.pull_request.number }}\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your code changes or fixes here for the rework\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Rework changes\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peter-evans/create-pull-request", "version": "v3", "shell": "bash"}]}]}
{"id": "377629_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-interaction --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit -c web/core/phpunit.xml.dist", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-dev", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "easingthemes/ssh-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "37818879_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install appium appium-webdriverio webdriverio", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": null, "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "appium", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": null, "name": "", "version": "", "shell": "bash"}]}]}
{"id": "37885004_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "swiftwasm/action-setup-swift", "version": "v0.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "swift build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "37892093_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install -y php-pear\npecl install redis\necho \"extension=redis.so\" | sudo tee -a $(php -r 'echo php_ini_loaded_file();')\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -m | grep redis", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "37959631_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wget -c https://wordpress.org/latest.tar.gz\ntar -xvzf latest.tar.gz\nmv wordpress/* .\nrm -rf latest.tar.gz wordpress wp-content/plugins/*\ncp wp-config-sample.php wp-config.php\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\nchmod +x wp-cli.phar\nsudo mv wp-cli.phar /usr/local/bin/wp\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wp config create --dbname=wordpress --dbuser=root --dbpass= --dbhost=localhost --quiet", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Deploying to production... You can add deployment steps here\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38013127_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan migrate", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your deployment script here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38028346_0", "jobs": [{"name": "fork", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "38044020_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python -m pip install --upgrade pip\npip install -r requirements.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pytest --cov=./\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "paambaati/codeclimate-action", "version": "v2.0.1", "shell": "bash"}]}]}
{"id": "38116530_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "fastlane/setup-fastlane", "version": "v3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane release", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38189027_0", "jobs": [{"name": "amend_pull_request", "steps": [{"type": "gh_action", "cmd": "", "name": "ActionsDesk/pull-request-event-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "PR_NUMBER=$(echo ${{ github.event.pull_request.url }} | cut -d'/' -f7)\nGITHUB_TOKEN=$GITHUB_TOKEN hub api --method PATCH /repos/${{ github.repository }}/pulls/${PR_NUMBER} --input '{\"state\": \"open\"}'\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add here the commands to apply your changes to the code\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "PR_NUMBER=$(echo ${{ github.event.pull_request.url }} | cut -d'/' -f7)\nGITHUB_TOKEN=$GITHUB_TOKEN hub api --method PATCH /repos/${{ github.repository }}/pulls/${PR_NUMBER} --input '{\"state\": \"closed\"}'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38203573_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r ./octocat/hello-world/* ./\ngit add .\ngit commit -m \"Forked content from source repo\"\ngit push\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "38220246_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install xcpretty\nbrew install swiftlint\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourProject.xcworkspace -scheme YourScheme clean build | xcpretty\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "swiftlint\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38220778_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "darts-lang/setup-dart", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dart pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dart test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "382482_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "setup-msbuild", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=Release YourDatabaseProject.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your deployment script commands here\n# Example: sqlcmd -S servername -d database -U username -P password -i deploy_script.sql\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38255950_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "roryg/Setup-IIS-Web-Deploy", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msdeploy -verb:sync -source:./dist -dest:iisApp='Default Web Site',wmsvc=$WMSVC_URL,userName=$USERNAME,password=$PASSWORD\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38268119_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "hashicorp/setup-packer", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "packer build path/to/packer/template.json", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install vagrant\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vagrant up", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vagrant ssh -c \"echo 'Hello, Vagrant'\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38269310_0", "jobs": [{"name": "trigger-teamcity-build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/github-script", "version": "v4", "shell": "bash"}, {"type": "shell_cmd", "cmd": "success = ${{ steps.workflow_details.outputs.workflow_run.conclusion == 'success' ? 'true' : 'false' }}\necho \"::set-output name=success::$success\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add script to trigger the TeamCity build here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38312605_0", "jobs": [{"name": "xcode_ui_tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-swift", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -scheme YourAppUITests -destination 'platform=iOS Simulator,name=iPhone 12' | xcpretty", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -scheme YourAppUITests -destination 'platform=iOS Simulator,name=iPhone 12' -resultBundlePath ./TestResults\nxchtmlreport -r ./TestResults -o ./TestResults_html\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "38337694_0", "jobs": [{"name": "check_product_quantity", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "babken/mysqli-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -u root -h 127.0.0.1 < db_schema.sql", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php check_product_quantity.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "3834870_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "santiycr/setup-chromium", "version": "v3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/spec run path/to/spec/files", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "3837657_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android-emulator-actions/setup-android", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android-emulator-actions/start-emulator", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sleep 30", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew connectedCheck -Pandroid.testInstrumentationRunnerArguments=\"--emulator-5554 sendSMS from=1234567890 text='Test message'\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android-emulator-actions/stop-emulator", "version": "v2", "shell": "bash"}]}]}
{"id": "384036_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\ncmake --build .\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd build\nctest --output-on-failure\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd build\n# Run your performance benchmarking tool here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38461314_0", "jobs": [{"name": "run_tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec cucumber", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v2", "shell": "bash"}]}]}
{"id": "38552628_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild build -scheme YourScheme -workspace YourWorkspace.xcworkspace -configuration Debug", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38559218_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler jekyll\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec jekyll build\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"var repoMetadata = {\n  name: '${{ github.repository }}',\n  owner: '${{ github.actor }}',\n  description: '${{ github.event.repository.description }}',\n  url: '${{ github.event.repository.html_url }}'\n  }\" > github-metadata.js\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add github-metadata.js\ngit commit -m \"Update repository metadata in JavaScript file\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38567118_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "redhat-actions/oc", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.OPENSHIFT_TOKEN }}\" | oc login \"${{ secrets.OPENSHIFT_SERVER }}\" --token=-\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd path/to/your/application\noc apply -f openshift-manifests/\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38591980_0", "jobs": [{"name": "trigger-build", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "3862586_0", "jobs": [{"name": "amend_web_config", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i 's/original_content/new_content/g' path/to/web.config\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add path/to/web.config\ngit commit -m \"Amend web config file for test fixtures\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "38635812_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easingthemes/ssh-deploy", "version": "v2.0.0", "shell": "bash"}]}]}
{"id": "38680366_0", "jobs": [{"name": "add-machine-account", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mcr.microsoft.com/azure-sql-db-pool/sql-adt-latest:latest", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your commands here to add a new SQL Server machine account\n# For example: sudo useradd newuser\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Add new SQL Server machine account\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "387164_0", "jobs": [{"name": "trigger-downstream", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}, {"name": "aggregate-results", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Customize this script to aggregate test results\n# Example: cat downstream-job-1/results.xml downstream-job-2/results.xml > aggregated-results.xml\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "38746336_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd downstream-project\nmvn clean install\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wei/github-pullrequest-builder", "version": "master", "shell": "bash"}]}]}
{"id": "38753538_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test --no-build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jolo/actions/vsts-release", "version": "master", "shell": "bash"}]}]}
{"id": "38773233_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec jekyll build --destination _site", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "38783657_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo -e \"\\n\\$config['sess_cookie_name'] = 'shared_session_cookie_name';\" >> application/config/config.php\necho -e \"\\$config['sess_save_path'] = 'ci_sessions';\" >> application/config/config.php\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Update session configuration\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "38839495_0", "jobs": [{"name": "sonarqube-analysis", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarqube-scan-action", "version": "master", "shell": "bash"}]}]}
{"id": "38848295_0", "jobs": [{"name": "run_fitnesse_slim_tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Command to execute FitNesse slim tests\n# Replace this with your actual command to run FitNesse tests\n./run_fitnesse_tests.sh\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v3", "shell": "bash"}]}]}
{"id": "38873252_0", "jobs": [{"name": "phpunit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./vendor/bin/phpunit tests/MyTest.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38929135_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B clean install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ::set-output name=exit_code::${{ steps.maven.results.code }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B clean install", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38950635_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "bahmutov/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build connectedCheck", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "38965600_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nbundle exec pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourProject.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 13'", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "38976124_0", "jobs": [{"name": "commit_generation_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git diff-tree --no-commit-id --name-only -r HEAD > current_commit_files.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Define the list of files to pick (include) in the commit\nFILES_TO_PICK=\"file1.txt file2.txt\"\n\nfor file in $FILES_TO_PICK; do\n  if [ -f $file ]; then\n    git add $file\n  fi\ndone\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Define the list of files to exclude from the commit\nFILES_TO_EXCLUDE=\"file3.txt file4.txt\"\n\nfor file in $FILES_TO_EXCLUDE; do\n  if [ -f $file ]; then\n    git reset HEAD $file\n  fi\ndone\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git commit -m \"Generate new commit with selected files\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/gh-push-action", "version": "v1", "shell": "bash"}]}]}
{"id": "39032462_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cpp", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -B build .\ncmake --build build\n./build/test_runner\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "grep -r \"gtest_filter\" --exclude=\"*.cpp\" --exclude=\"*.hpp\" .\nif [[ $? -eq 0 ]]; then\n  echo \"Found gtest_filter in non-gtest test files\"\n  exit 1\nelse\n  echo \"No gtest_filter found in non-gtest test files\"\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39077904_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build . -t myapp", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-docker", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run --rm myapp", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"user:x:$(id -u):$(id -g):user:/home/user:/bin/sh\" >> /etc/passwd", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cat /etc/passwd | grep user", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo -u user whoami", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39128998_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpspec run", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39150240_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-msvc", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\n# For example:\n# - msbuild Solution.sln /p:Configuration=Release\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "39272211_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "githubrm/web-app-deployment", "version": "v2", "shell": "bash"}]}]}
{"id": "39288918_0", "jobs": [{"name": "sleep_task", "steps": [{"type": "shell_cmd", "cmd": "echo \"Starting the Sleep Task Workflow\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "octokit/wait-for-activity", "version": "v2.1.3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Sleep Task Workflow Completed Successfully\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39319739_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "redhat-actions/oc-login", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "oc project <your-project-name>\noc apply -f <path-to-your-openshift-manifests>\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39364949_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install cocoapods\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -scheme YourScheme -workspace YourWorkspace.xcworkspace -configuration Release -archivePath $PWD/build/YourApp.xcarchive", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -exportOptionsPlist ExportOptions.plist -archivePath $PWD/build/YourApp.xcarchive -exportPath $PWD/build/YourApp.ipa", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "39416731_0", "jobs": [{"name": "run_sas_marketing_campaign", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sassoftware/sas-container-recipes/sas-viya-containers", "version": "main", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to execute SAS marketing campaign\n# For example:\n# sas /path/to/marketing_campaign_program.sas\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39453624_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "cloudfoundry/cli-github-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cf push <APP_NAME> -b <BUILD_PACK> -p <PATH_TO_ARTIFACT>\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39491626_0", "jobs": [{"name": "run_php_script", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php index.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "3958892_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Execute build steps with PowerShell here\n# Example: Invoke-Expression './build.ps1'\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "shell_cmd", "cmd": "# Execute deployment steps to Hudson here using PowerShell\n# Example: Invoke-Expression './deploy.ps1'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39594781_0", "jobs": [{"name": "email-notification", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-email", "version": "v2", "shell": "bash"}]}]}
{"id": "39594867_0", "jobs": [{"name": "reviewdog", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run lint", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "reviewdog/action-checkstyle", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "reviewdog/action-checkstyle", "version": "v2", "shell": "bash"}]}]}
{"id": "39619695_0", "jobs": [{"name": "update_version", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Example: Update version in a file named 'version.txt'\nVERSION=$(< version.txt)\nNEW_VERSION=$((VERSION + 1))\necho $NEW_VERSION > version.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add version.txt\ngit commit -m \"Auto-update application version to $NEW_VERSION\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "39636617_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to trigger TFS build here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39700895_0", "jobs": [{"name": "remove-git-lock", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [ -f .git/index.lock ]; then\n  rm .git/index.lock\n  echo \"Git lock file removed\"\nelse\n  echo \"No Git lock file found\"\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Remove git lock file before commit\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "39703231_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -scheme YourAppScheme -destination 'platform=iOS Simulator,name=iPhone 12' -enableCodeCoverage YES | tee xcodebuild.log", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Insert logic to capture screenshots for the specific test case\necho \"Capturing and uploading screenshots for -[apptests textexample]\"\n# Example script to capture screenshots\ncapture_script.sh\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "39714753_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ReactiveCircus/android-emulator-runner", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "adb devices", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "adb connect emulator-5554", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39717998_0", "jobs": [{"name": "functions", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php my_script_to_edit_insert_functions.php\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"<your-email>\"\ngit config --local user.name \"<your-username>\"\ngit add .\ngit commit -m \"Automated function editing and inserting\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39727505_0", "jobs": [{"name": "publish", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rm -rf .git", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git init\ngit config user.email \"you@example.com\"\ngit config user.name \"Your Name\"\ngit add .\ngit commit -m \"Initial commit without history\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "39741782_0", "jobs": [{"name": "behat", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-interaction --no-suggest --prefer-dist", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp behat.yml.dist behat.yml\nsed -i 's/database_username/root/g' behat.yml\nsed -i 's/database_password/root/g' behat.yml\nsed -i 's/database_name/testdb/g' behat.yml\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/behat", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39786492_0", "jobs": [{"name": "send_email_notification", "steps": [{"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v3", "shell": "bash"}]}]}
{"id": "39798351_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,OS=14.5,name=iPhone 11' -enableCodeCoverage YES\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcrun simctl ui <device> permissionalert get <identifier>\nxcrun simctl ui <device> permissionalert update <identifier> accept\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "39843189_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "repo-sync/trigger-workflow", "version": "v2", "shell": "bash"}]}]}
{"id": "40042811_0", "jobs": [{"name": "build-and-release", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o ${{ github.workspace }}/publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/azure-devops-sprint-boards-app-actions/trigger-release", "version": "master", "shell": "bash"}]}]}
{"id": "40068013_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "cirrus-actions/setup-git-bash", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd ${{ matrix.services }}\nnpm install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd ${{ matrix.services }}\nnpm run build\nnpm test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd ${{ matrix.services }}\n# Add deployment commands here based on your specific deployment strategy\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40087902_0", "jobs": [{"name": "nunit_parser_fix", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install nuget -y", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nuget install NUnit.Console -Version 3.12.0 -OutputDirectory $GITHUB_WORKSPACE/packages", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mono $GITHUB_WORKSPACE/packages/NUnit.Console.3.12.0/tools/nunit3-console.exe YourTest.dll", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i 's/quarantined=\"True\"/quarantined=\"False\"/g' TestResult.xml", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Enflo/publish-unit-test-result-action", "version": "v1.1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rm -r $GITHUB_WORKSPACE/packages", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40122790_0", "jobs": [{"name": "junit-tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "EnricoMi/publish-unit-test-result-action", "version": "v1", "shell": "bash"}]}]}
{"id": "4019194_0", "jobs": [{"name": "move_svn", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install subversion", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "svn checkout http://your-svn-repo-url local_svn_repo", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git init svn_to_github\ncd local_svn_repo\nsvn upgrade\ncd ..\ncp -R local_svn_repo/. svn_to_github/.\ncd svn_to_github\ngit add .\ngit commit -m \"Initial migration from SVN to GitHub\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "40192557_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-gcloud", "version": "v0.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth activate-service-account --key-file=${{ secrets.GCP_SA_KEY }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud app deploy app.yaml --quiet", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40212598_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean build -workspace YourApp.xcworkspace -scheme YourScheme", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourScheme -derivedDataPath ./derivedData test -enableCodeCoverage YES", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "COVERAGE=$(cat ./derivedData/Build/Logs/Test/*.xcresult/*/Action.xccovreport | jq '.targets[] | select(.name == \"YourApp\").lines | .coverage')\necho \"Current coverage is $COVERAGE\"\n# Use curl or another tool to send coverage value to a specific endpoint\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40237720_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shogo82148/setup-msys2", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "choco install powershell --yes", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./path/to/your/powershell_script.ps1\n", "name": "", "version": "", "shell": "pwsh"}]}]}
{"id": "40299084_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install bundler\nbundle install\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourApp -destination 'platform=iOS Simulator,name=iPhone 11' build test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${YOUR_API_KEY}\" > Secrets/api_key.plist\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Any deployment steps (e.g. Upload to App Store/TestFlight)\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "4030997_0", "jobs": [{"name": "test_silverlight_app", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jlesage/firefox:latest", "version": null, "shell": "bash"}]}]}
{"id": "4031679_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./vendor/bin/phpcs", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40391011_0", "jobs": [{"name": "edit-file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Text to add\" >> file-to-edit.txt\necho \"Text to replace\" > another-file.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Edit files via GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}, {"name": "execute-project", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to execute your project here\necho \"Executing the project...\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40392410_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-ccache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcc -o test_program test_program.c", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./test_program\nexit_code=$?\nif [ $exit_code -ne 0 ]; then\n  echo \"ERROR: fread test failed\"\n  exit 1\nelse\n  echo \"fread test passed\"\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40493286_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build and test commands here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=hash::$(git rev-parse --short $GITHUB_SHA)\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git tag v$RUNNER_OS-${{ steps.commit_hash.outputs.hash }}", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "405192_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "robertsaul/SQLServer-Setup", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "choco install \"visualstudio2019-workload-ssdt\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sqlpackage /a:Publish /tsn:localhost /tdn:YourDatabaseName /tu:sa /tp:YourPassword /sf:PathToYourBacpacFile.bacpac", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Commands to run tests on the database schema or data\n# Eg. tSQLt tests, etc.\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sqlpackage /a:Script /sf:PathToYourDatabaseProject.dacpac /op:GeneratedScript.sql", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40582857_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean install -B", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "atlassian/git-ftp-action", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ActiveCampaign/upload-to-artifactory-action", "version": "v1", "shell": "bash"}]}]}
{"id": "40640795_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest --prefer-dist", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest --prefer-dist", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your deployment script here\n# Example: rsync -avz --delete . user@hostname:/path/to/deployment\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40669149_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean test -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' CODE_SIGN_IDENTITY=\"iPhone Developer\" PROVISIONING_PROFILE=\"YourProvisioningProfileUUID\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40704801_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dante-ev/texlive-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pdflatex -interaction=nonstopmode main.tex\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "40710223_0", "jobs": [{"name": "composer", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer config --global github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require your-forked-repository/package-name", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40739287_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run lint", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "40794023_0", "jobs": [{"name": "image_processing", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install php7.4-gd", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php index.php image resize", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Resize uploaded images\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "40795688_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourWorkspace.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' build test\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "4089731_0", "jobs": [{"name": "send_notification", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=url::http://localhost:yourPortNumber\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v3", "shell": "bash"}]}]}
{"id": "40963418_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "msys2/action/setup-msys2", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pacman -Sy --noconfirm mingw-w64-x86_64-toolchain cmake make\npacman -Sy --noconfirm git zip\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\nmake\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir release\ncp <path_to_your_executable> release/\ncd release\nzip -r my_software_nightly.zip ./\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "40965136_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --prefer-dist", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install -g yarn", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "yarn install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "yarn encore production", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "akhileshns/heroku-deploy", "version": "v3.6.6", "shell": "bash"}]}]}
{"id": "40981541_0", "jobs": [{"name": "screenshot", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run screenshots", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "zip -r screenshots.zip screenshots", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v3", "shell": "bash"}]}]}
{"id": "41014280_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "webfactory/ftp-upload-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "candle MyInstaller.wxs", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "light MyInstaller.wixobj", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "candle MyInstaller.wxs -ext WixUIExtension", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "41028185_0", "jobs": [{"name": "setup", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install\ngem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "test", "steps": [{"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourApp.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11 Pro Max'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "41081171_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "microsoft/azure-pipelines-github-action", "version": "v1", "shell": "bash"}]}]}
{"id": "41133548_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dante-ev/working-environment", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pdflatex -interaction=nonstopmode main.tex\npdflatex -interaction=nonstopmode main.tex\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/create-release", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-release-asset", "version": "v1", "shell": "bash"}]}]}
{"id": "41143012_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cpp", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\nmake\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd build\nctest\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "4125934_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add any build commands here (if required)\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easingthemes/deploy-sftp-action", "version": "v3", "shell": "bash"}]}]}
{"id": "41267968_0", "jobs": [{"name": "appveyor_check", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your commands to trigger the AppVeyor check here\n# Ensure the AppVeyor check runs and returns success/failure appropriately\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "merge_check", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}, {"type": "shell_cmd", "cmd": "status=$(jq '.check_runs | .[] | select(.app.name == \"AppVeyor\" and .status != \"completed\") | .conclusion' \"${GITHUB_EVENT_PATH}\")\nif [[ \"$status\" == \"null\" ]]; then\n    echo \"AppVeyor check passed, can merge the pull request.\"\nelse\n    echo \"AppVeyor check failed, cannot merge the pull request.\"\n    exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "4128372_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "msbuild/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /t:Build /p:Configuration=Release Path/To/Your/DatabaseProject.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /t:Deploy /p:Configuration=Release /p:DeployOnBuild=true /p:DeployTarget=WebPublish /p:WebPublishMethod=FileSystem /p:DeleteExistingFiles=True /p:publishUrl=Path/To/PublishFolder Path/To/Your/DatabaseProject.sln", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "41345629_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update && sudo apt-get install subversion -y", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "svn checkout <SVN_REPO_URL> liferay-project", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd liferay-project\n./gradlew build\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "maxheld83/gha-yarn-cache", "version": "v1", "shell": "bash"}]}]}
{"id": "41387282_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clean -ffxd\ngit reset --hard\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git status", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Cleanup repository using GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "41405036_0", "jobs": [{"name": "build-and-deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build WebJobProject.csproj", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish WebJobProject.csproj --output ${{github.workspace}}/publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "41423745_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test --logger:trx --results-directory:TestResults", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "EnricoMi/xunit-builder-action", "version": "v2", "shell": "bash"}]}]}
{"id": "41465532_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "swift-actions/setup-swift", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "brew install fastlane\ngem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane run_ui_tests", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "41564942_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "mathworks/actions/setup-matlab", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "matlab -batch \"ascii_characters_check\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "41568730_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test -- --coverage", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "hellopolly/sonarqube-action", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "threshold=$(curl -u ${{ secrets.SONARQUBE_TOKEN }}: \"$SONARQUBE_URL/api/measures/component?component=<sonar_project_key>&metric=coverage&metric=ncloc\" | jq -r '.component.measures[] | select(.metric==\"coverage\").value')\nif (( $(echo \"$threshold < 80\" | bc -l) )); then\n  echo \"Error: Code coverage is less than 80% in SonarQube\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "41577118_0", "jobs": [{"name": "move_files", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [ -d \"path/to/source/directory\" ]; then\n  mv path/to/source/directory/file1.txt path/to/destination/directory/\n  mv path/to/source/directory/file2.txt path/to/destination/directory/\n  echo \"Files moved successfully!\"\nelse\n  echo \"Source directory does not exist.\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add path/to/destination/directory/\ngit commit -m \"Move files to destination directory\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "41599813_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "warrenbuckley/Setup-MSBuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nuget restore YourSolution.sln\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "${{ github.workspace }}/path/to/YourProject2/packages.config", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild YourSolution.sln /t:Test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "41615804_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build -- --prod", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/azure/devops", "version": "v1", "shell": "bash"}]}]}
{"id": "41675232_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install cocoapods", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12,OS=latest' test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "41678296_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/kubernetes-action/kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f deployment.yaml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "41870299_0", "jobs": [{"name": "replace-paths", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i 's|old/path|new/path|g' path/to/file.txt\n# Add more 'sed' commands here for additional paths if needed\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Replace artifacts paths\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "41876441_0", "jobs": [{"name": "trigger_concourse_ci", "steps": [{"type": "gh_action", "cmd": "", "name": "distributhor/concourse-github-action", "version": "v1", "shell": "bash"}]}]}
{"id": "41889216_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "game-ci/setup-unity", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Invoke-WebRequest -Uri 'https://download.unity3d.com/download_unity/xxxxxxxxx/Windows64EditorInstaller/UnitySetup64-versionNumber.exe' -OutFile 'UnitySetup64.exe'\nStart-Process -FilePath 'UnitySetup64.exe' -ArgumentList '/S' -NoNewWindow -Wait\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "<Path to Unity executable> -projectPath <Path to Unity project> -executeMethod <Name of build method>\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "41916862_0", "jobs": [{"name": "sort-yaml", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install liquid\nruby sort_yaml.rb\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "41919053_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourAppScheme -workspace YourApp.xcworkspace -destination 'platform=iOS Simulator,name=iPhone 12' build test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourWatchKitExtensionScheme -workspace YourApp.xcworkspace -destination 'platform=iOS Simulator,name=Apple Watch Series 6 - 40mm' build test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Specify the paths of the entitlements files for both the iOS app and WatchKit extension\nentitlementsPathApp=\"YourApp/YourApp.entitlements\"\nentitlementsPathExtension=\"YourWatchKitExtension/YourWatchKitExtension.entitlements\"\n\n# Extract App Group from iOS app entitlements\nappGroupApp=$(grep 'com.apple.security.application-groups' \"$entitlementsPathApp\" | sed 's/.*<array><string>\\(.*\\)<\\/string><\\/array>.*/\\1/')\necho \"App Group for iOS app: $appGroupApp\"\n\n# Extract App Group from WatchKit extension entitlements\nappGroupExtension=$(grep 'com.apple.security.application-groups' \"$entitlementsPathExtension\" | sed 's/.*<array><string>\\(.*\\)<\\/string><\\/array>.*/\\1/')\necho \"App Group for WatchKit extension: $appGroupExtension\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "41957452_0", "jobs": [{"name": "compare", "steps": [{"type": "gh_action", "cmd": "", "name": "appleboy/svn-checkout", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "diff -r -q svn-code github-code || true\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "42077887_0", "jobs": [{"name": "rspec", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "42177405_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec cucumber\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "42238634_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/setup-buildx-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build . -t gcr.io/$PROJECT_ID/$IMAGE_NAME:$GITHUB_SHA\necho ${{ secrets.GCP_KEY_FILE }} | base64 --decode > key.json\ngcloud auth activate-service-account --key-file=key.json\ngcloud config set project $PROJECT_ID\ndocker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$GITHUB_SHA\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/k8s-deploy-action", "version": "v2", "shell": "bash"}]}]}
{"id": "42261373_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your test commands here\necho \"Running tests...\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wei/github-upload-action", "version": "master", "shell": "bash"}]}]}
{"id": "42269819_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "<deploy_action>", "version": null, "shell": "bash"}]}]}
{"id": "42278087_0", "jobs": [{"name": "build", "steps": [{"type": "shell_cmd", "cmd": "if [ \"$BUILD_REASON\" == \"Manual\" ]; then\n  echo \"::set-output name=manual_build::true\"\nelse\n  echo \"::set-output name=manual_build::false\"\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"VSTS build was triggered manually: ${{ steps.check-trigger.output.manual_build }}\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "42333531_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B clean verify deploy -s .github/settings.xml\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "gpg", "version": "setup", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"<settings><servers><server><id>ossrh</id><username>\\${env.OSSRH_USERNAME}</username><password>\\${env.OSSRH_PASSWORD}</password></server></servers></settings>\" > .github/settings.xml\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B clean deploy -s .github/settings.xml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "42335256_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec jekyll build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "42345556_0", "jobs": [{"name": "build-and-publish", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build MyExtension.sln\ndotnet build MyExtension.vsixproj\ndotnet publish MyExtension.vsixproj -o publish\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ms-vsce/vscode-marketplace-publish-action", "version": "v1", "shell": "bash"}]}, {"name": "trigger-tfs-build", "steps": [{"type": "shell_cmd", "cmd": "curl -X POST \\\n  -u \"username:$MY_VSTS_TOKEN\" \\\n  -H \"Content-Type:application/json\" \\\n  -d '{\"definition\": {\"id\": '$TFS_BUILD_DEFINITION_ID' }}' \\\n  https://yourtfsinstance.com/tfs/YourCollection/YourProject/_apis/build/builds?api-version=6.0\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "423978_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "warrenbuckley/Setup-NET-Framework", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test --configuration Release", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "42407457_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourProjectName.xcworkspace -scheme YourSchemeName clean build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "42407633_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "WarheadIIS/webdeploy", "version": "main", "shell": "bash"}]}]}
{"id": "42424891_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "splunk/splunk-connect-for-kubernetes", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "splunk query \"your search query for generating the chart\" | \\\nchart \"your chart visualization configuration\" | \\\noutputchartlist path=chart_output.png\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "42625727_0", "jobs": [{"name": "build-and-deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o $(Build.ArtifactStagingDirectory)", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "42718373_0", "jobs": [{"name": "increment_version", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ::set-output name=TAG::$(git describe --tags --abbrev=0)", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ::set-output name=VERSION::${{ steps.tag.outputs.TAG }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ::set-output name=NEW_VERSION::$(node -p \"v = '${{ steps.version.outputs.VERSION }}'.split('.'); v[v.length-1]++; v.join('.')\")", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ${{ steps.increment.outputs.NEW_VERSION }} > VERSION", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.name 'GitHub Actions'\ngit config user.email 'actions@users.noreply.github.com'\ngit add VERSION\ngit commit -m \"Increment version to ${{ steps.increment.outputs.NEW_VERSION }}\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "42758355_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-hugo", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "hugo --minify", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "4277912_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild build -workspace YourApp.xcworkspace -scheme YourScheme -destination 'generic/platform=iOS' archive -archivePath $PWD/build/YourApp", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "42810503_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run lint", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm audit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add deployment steps here\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rtCamp/action-slack-notify", "version": "v2", "shell": "bash"}]}]}
{"id": "42815219_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f kubernetes/multi-container-pod.yaml", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl get pods --watch", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "42885896_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "game-ci/setup-unity", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install -y xvfb\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xvfb-run --auto-servernum --server-args=\"-screen 0 640x480x24\" unity -quit -batchmode -projectPath path/to/your/project -executeMethod YourBuildScriptClassName.YourBuildMethod\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "42915157_0", "jobs": [{"name": "trigger-vsts-build", "steps": [{"type": "gh_action", "cmd": "", "name": "microsoft/azure-pipelines-github-action", "version": "v1", "shell": "bash"}]}]}
{"id": "42920065_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "deangiberson/jmeter-parallel-remote-setup", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd $GITHUB_WORKSPACE\n./jmeter/bin/jmeter -n -t mqtt_load_test.jmx -l test_results.jtl\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "42960764_0", "jobs": [{"name": "commit_changes", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git commit -m \"Automated commit from GitHub Actions\" || true\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "43028308_0", "jobs": [{"name": "update_repository", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r <source-repository-path>/* <target-repository-path>/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'github-actions'\ngit config --global user.email 'actions@users.noreply.github.com'\ngit add .\ngit commit -m \"Update repository\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "43075447_0", "jobs": [{"name": "notify", "steps": [{"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v2.3.2", "shell": "bash"}]}]}
{"id": "43223520_0", "jobs": [{"name": "manage_database_schemas", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-docker", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t mydatabaseimage .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run -d --name mydatabasecontainer1 -e DATABASE=schema1 mydatabaseimage", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run -d --name mydatabasecontainer2 -e DATABASE=schema2 mydatabaseimage", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker exec mydatabasecontainer1 sh -c \"echo 'Database operations for schema1'\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker exec mydatabasecontainer2 sh -c \"echo 'Database operations for schema2'\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker stop mydatabasecontainer1\ndocker stop mydatabasecontainer2\ndocker rm mydatabasecontainer1\ndocker rm mydatabasecontainer2\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "43291940_0", "jobs": [{"name": "update_config", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i \"s/OLD_VALUE/NEW_VALUE/g\" app/src/main/res/values/strings.xml\n# Replace OLD_VALUE and NEW_VALUE with your specific values\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"<YOUR_EMAIL>\"\ngit config --local user.name \"<YOUR_NAME>\"\ngit add app/src/main/res/values/strings.xml\ngit commit -m \"Update Android configuration value in CI\" || echo \"No changes to commit\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "43294937_0", "jobs": [{"name": "update_cart", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install\ncp application/config/database.php.ci application/config/database.php\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php index.php update_cart_fields_command\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "43322804_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleRelease", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/gdrive-action", "version": "master", "shell": "bash"}]}]}
{"id": "43366601_0", "jobs": [{"name": "codeception", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp acceptance.suite.yml.dist acceptance.suite.yml\nsed -i \"s/BROWSERSTACK_USERNAME/${BROWSERSTACK_USERNAME}/g\" acceptance.suite.yml\nsed -i \"s/BROWSERSTACK_ACCESS_KEY/${BROWSERSTACK_ACCESS_KEY}/g\" acceptance.suite.yml\n./vendor/bin/codecept run acceptance\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "43386801_0", "jobs": [{"name": "first_commit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"First commit\" > first_commit.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add first_commit.txt\ngit commit -m \"Initial commit by GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "43399038_0", "jobs": [{"name": "fastlane_deliver", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -NV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane deliver --platform tvos", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "43449036_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Auto-commit by GitHub Action\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "43509323_0", "jobs": [{"name": "code-review", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "softprops/action-approve", "version": "v1", "shell": "bash"}]}]}
{"id": "43514083_0", "jobs": [{"name": "autoStage", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git status", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git commit -m \"Auto staging changes caused by other commits\" || true\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "43536884_0", "jobs": [{"name": "send-notification", "steps": [{"type": "gh_action", "cmd": "", "name": "rtCamp/action-slack-notify", "version": "v2", "shell": "bash"}]}]}
{"id": "43573411_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/aks-set-context", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3\nchmod 700 get_helm.sh\n./get_helm.sh\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm upgrade --install $RELEASE_NAME ./path/to/helm/chart --namespace $NAMESPACE\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "43575754_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install\nbrew install applesimutils\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12'\nxcodebuild test -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' -only-testing:UITests/YourUITestBundleIdentifier\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "43599452_0", "jobs": [{"name": "change_author", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "arc429/git-rewrite-author-action", "version": "v0.1.0", "shell": "bash"}]}]}
{"id": "43632938_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleRelease\njarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore YOUR_KEYSTORE.jks -storepass ${{ secrets.KEYSTORE_PASSWORD }} -keypass ${{ secrets.KEY_PASSWORD }} app/build/outputs/apk/release/app-release-unsigned.apk YOUR_KEY_ALIAS\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew clean\n./gradlew bundleRelease\nbundletool validate --bundle=app/build/outputs/bundle/release/app-release.aab\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "r0adkll/upload-google-play", "version": "v1", "shell": "bash"}]}]}
{"id": "43679820_0", "jobs": [{"name": "create_pull_request", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b new-branch-name", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Your changes\" >> file.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Automated changes\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peter-evans/create-pull-request", "version": "v3", "shell": "bash"}]}]}
{"id": "43679948_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build\ndotnet test\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o ./publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "43693245_0", "jobs": [{"name": "add-service-extension", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-pwsh", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "$appId = $env:APP_ID\n$appInstallationId = $env:APP_INSTALLATION_ID\n$privateKeyPath = $env:PRIVATE_KEY_PATH\n\n$token = New-GitHubAppToken -AppId $appId -InstallationId $appInstallationId -PrivateKeyPath $privateKeyPath\n\n$headers = @{\n    \"Accept\" = \"application/vnd.github.v3+json\"\n    \"Authorization\" = \"Bearer $token\"\n}\n\n$body = @{\n    name = \"service-extension-name\"\n    operations = @{\n        some_operation = \"some_value\"\n    }\n    permissions = @{\n        read = \"all\"\n    }\n}\n\nInvoke-RestMethod -Uri \"https://api.github.com/apps/{app_id}/extensions\" -Method POST -Headers $headers -ContentType \"application/json\" -Body ($body | ConvertTo-Json)\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "43715224_0", "jobs": [{"name": "laravel_ci", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp .env.example .env", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-ansi --no-dev --no-interaction --no-progress --no-scripts --optimize-autoloader", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan key:generate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan migrate --force", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run test:e2e", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer check-style", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer analyze", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "tail storage/logs/*.log", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "43731499_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install cocoapods\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourApp -destination 'generic/platform=iOS' archive -archivePath build/YourApp", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath build/YourApp.xcarchive -exportPath build -exportOptionsPlist ExportOptions.plist", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "simpleweb/github-action-hockeyapp", "version": "v3", "shell": "bash"}]}]}
{"id": "43781024_0", "jobs": [{"name": "version_control", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Copy files from system A to system B (replace with your own logic)\n# Example command: cp -r /path/to/systemA/* /path/to/systemB/\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"you@example.com\"\ngit config --global user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Sync files from system A to system B using GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "43793699_0", "jobs": [{"name": "deploy_dacpac", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/sql-server-actions/setup", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sqlpackage.exe /Action:Publish /SourceFile:<Path to DACPAC 1> /TargetServerName:<Server Name> /TargetDatabaseName:<Database Name> /TargetUser:<Username> /TargetPassword:<Password>\nsqlpackage.exe /Action:Publish /SourceFile:<Path to DACPAC 2> /TargetServerName:<Server Name> /TargetDatabaseName:<Database Name> /TargetUser:<Username> /TargetPassword:<Password>\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "43796060_0", "jobs": [{"name": "canonicalize_xml", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mradenovic/xml-canonicalize-action", "version": "v1", "shell": "bash"}]}]}
{"id": "43829193_0", "jobs": [{"name": "download_repository_info", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pip install requests", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "TOKEN=$TOKEN    # Replace TOKEN with your GitHub personal access token\nORG=$ORG        # Replace ORG with the organization or user name\nREPO_INFO_FILE=\"repository_info.json\"\ncurl -s -H \"Authorization: token $TOKEN\" -H \"Accept: application/vnd.github.v3+json\" \"https://api.github.com/orgs/$ORG/repos\" > $REPO_INFO_FILE\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "43878525_0", "jobs": [{"name": "fetch-remote-branch", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v4", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git remote add other-repo https://github.com/username/other-repo.git\ngit fetch other-repo\ngit checkout other-repo/remote-branch-name  # Change this to the remote branch name you want to track\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "43903694_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add any setup commands specific to your AOSPA build environment\n# e.g., source build/envsetup.sh\n\n# To handle library errors, you can add commands to resolve dependencies\n# e.g., sudo apt-get install <library-name>\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Run the AOSPA build command\n# e.g., lunch aosp_device-userdebug && make -j8\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "43905511_0", "jobs": [{"name": "import-concourse-folder", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -R path/to/concourse-folder $GITHUB_WORKSPACE/concourse-folder", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Import Concourse CI folder\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "439164_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get -y install gnupg2 lsb-release\ncurl -L https://packagecloud.io/intersystems/Cache/install | sudo bash\nsudo apt-get -y install intersystems-cache\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ccontrol start default\ncsession CACHE_NAMESPACE <path-to-your-scripts>/build-and-test.script\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "43987837_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chmod +x ./gradlew", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew check", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "44007643_0", "jobs": [{"name": "import-module", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r module-directory target-directory\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"\ngit add target-directory\ngit commit -m \"Import module from source repository\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "44053073_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android/setup-android", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-docker", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build . -t my-android-image", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "44095775_0", "jobs": [{"name": "version-local-packages", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "conda-incubator/setup-miniconda", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "conda install -y -c conda-forge conda-build\nconda install -y conda-verify setuptools\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "conda build /path/to/local_package\nconda install -y --use-local <package-name>\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "export VERSION=$(git describe --tags --abbrev=0)\necho \"Package version: $VERSION\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "conda build /path/to/local_package --output-folder build\ncp build/linux-64/<package-name>-*.tar.bz2 /path/to/versioned-packages\ngit add /path/to/versioned-packages/<package-name>-*.tar.bz2\ngit commit -m \"Versioning local package\"\ngit tag $VERSION\ngit push origin main --tags\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "44108837_4", "jobs": [{"name": "build", "steps": []}]}
{"id": "44185414_0", "jobs": [{"name": "phpcs", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpcs --standard=PSR2 .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl https://scrutinizer-ci.com/api/repositories/:user/:repo/code-annotations --data token=$SCRUTINIZER_TOKEN --data-url \"https://scrutinizer-ci.com/g/:user/:repo/\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "44199658_0", "jobs": [{"name": "backup", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "tar -czf project_backup.tar.gz .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"backup@example.com\"\ngit config --global user.name \"Backup Bot\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add project_backup.tar.gz\ngit commit -m \"Automated backup on $(date +'%Y-%m-%d')\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "44204514_0", "jobs": [{"name": "change_commit_author", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"new-email@example.com\"\ngit config --global user.name \"New Name\"\ngit filter-branch --env-filter '\n  export GIT_COMMITTER_NAME=\"$GIT_AUTHOR_NAME\"\n  export GIT_COMMITTER_EMAIL=\"$GIT_AUTHOR_EMAIL\"\n' -- --all\ngit push --force --tags origin 'refs/heads/*'\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/push-subdirectory-to-another-repo", "version": "master", "shell": "bash"}]}]}
{"id": "44219449_0", "jobs": [{"name": "remove-venv-and-add-requirements", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rm -rf venv/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python -m pip install --upgrade pip\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pip freeze > requirements.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add requirements.txt\ngit commit -m \"Remove venv and add requirements.txt [skip ci]\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "44247795_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": null, "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": null, "shell": "bash"}]}]}
{"id": "44252837_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew clean build\n./gradlew assembleRelease\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jfreer/github-action-android-arsenal", "version": "v1", "shell": "bash"}]}]}
{"id": "44255898_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build MySolution.sln && dotnet test MyTestsProject/*.csproj", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o ./publish\necho '::set-output name=app_path::publish'\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "44261626_0", "jobs": [{"name": "make_public", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r private-folder public-folder\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "44279703_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -workspace YourApp.xcworkspace -scheme YourScheme -archivePath build/YourApp\nxcodebuild -exportArchive -archivePath build/YourApp.xcarchive -exportPath build -exportOptionsPlist ExportOptions.plist\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "webfactory/ssh-agent", "version": "v0.5.3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "scp -i $SSH_PRIVATE_KEY build/YourApp.ipa user@server.local:/path/to/destination\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ssh -i $SSH_PRIVATE_KEY user@server.local \"xcrun altool \\\n--upload-app \\\n--type ios \\\n--file /path/to/destination/YourApp.ipa \\\n--username 'YourAppleID' \\\n--password '@keychain:YourAppleIDPassword'\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "44306580_0", "jobs": [{"name": "klocwork-publish", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Run your build command with Klocwork analysis\n# For example:\n# ./path/to/klocwork/bin/kwinject make clean all\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonar-scanner-cli", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Install Klocwork CLI to download and prepare Klocwork reports\n# For example:\n# wget http://path/to/klocwork-cli.zip\n# unzip klocwork-cli.zip\n# export PATH=$PATH:/path/to/klocwork-cli/bin\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Download the Klocwork report from the server\n# For example:\n# kwadmin --url http://klocwork-server:port -p project -s some-sub.com -t token --build some-build getxml --xml path/to/klocwork/report.xml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "44308299_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "some/plugin", "version": null, "shell": "bash"}]}]}
{"id": "44319313_0", "jobs": [{"name": "powershell_ci", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Install-Module -Name 'Pester' -Force -Scope CurrentUser\nInstall-Module -Name 'PSake' -Force -Scope CurrentUser\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Your PowerShell commands go here\nWrite-Host 'Hello from PowerShell!'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "44344350_0", "jobs": [{"name": "sonarqube", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "SonarSource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "44414413_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./mvnw package -B\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easyangel/tomcat-deploy", "version": "v1", "shell": "bash"}]}]}
{"id": "44464477_0", "jobs": [{"name": "build", "steps": [{"type": "shell_cmd", "cmd": "echo \"Branch name is ${{ github.event_name }}\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": null, "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": null, "name": "", "version": "", "shell": "bash"}]}]}
{"id": "44483455_0", "jobs": [{"name": "tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "gregorifaraujo/setup-adobe-air-sdk", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run integration-test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "4452951_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "start=$SECONDS\nbundle exec rake -T | while read task; do\n  task_name=$(echo $task | awk '{ print $2 }')\n  echo -n \"Starting task '$task_name'... \"\n  time bundle exec rake $task_name\n  echo \"Task '$task_name' finished\"\ndone\nend=$SECONDS\necho \"Total time taken for all tasks: $((end-start)) seconds\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "44545635_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/setup-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t your_image_name .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker push your_image_name", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "webfactory/ssh-agent", "version": "v0.5.3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ssh user@your_server_address 'docker pull your_image_name\ndocker stop your_container_name\ndocker rm your_container_name\ndocker run -d -p 80:80 --name your_container_name your_image_name'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "44561199_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec --format documentation\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "44601687_0", "jobs": [{"name": "fix_remote_issue", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands here to fix the issue in the repository\n# For example:\ngit config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\necho \"Fixed the issue\" > fixed_file.txt\ngit add fixed_file.txt\ngit commit -m \"Fixed the issue\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "44632638_0", "jobs": [{"name": "notify", "steps": [{"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "44633229_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/setup-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker-compose up -d\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "44711733_0", "jobs": [{"name": "check_email_format", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "node check_email_format.js", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/slack-action", "version": "master", "shell": "bash"}]}]}
{"id": "44718720_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler --no-document\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails db:setup\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec parallel_rspec --runtime-log tmp/parallel_runtime_rspec.log spec\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "44723618_0", "jobs": [{"name": "selenium", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nanogiants/selenium-webdriver", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python selenium_test.py\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "44731129_0", "jobs": [{"name": "add-webhook", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sdras/github-action-webhook-pull-request", "version": null, "shell": "bash"}]}]}
{"id": "44796873_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "security create-keychain -p \"\" build.keychain\nsecurity set-key-partition-list -S apple-tool:,apple: -s -k \"\" build.keychain\nsecurity default-keychain -s build.keychain\nsecurity unlock-keychain -p \"\" build.keychain\nsecurity set-keychain-settings -t 3600 -u build.keychain\necho \"$CERT_P12\" | base64 --decode > certificate.p12\necho \"$MOBILEPROV\" | base64 --decode > profile.mobileprovision\nsecurity import certificate.p12 -k ~/Library/Keychains/login.keychain -P $KEY_PASSWORD -A\nmkdir -p ~/Library/MobileDevice/Provisioning\\ Profiles\ncp profile.mobileprovision ~/Library/MobileDevice/Provisioning\\ Profiles/\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean build -workspace YourProject.xcworkspace -scheme YourScheme -sdk iphoneos CODE_SIGN_STYLE=Automatic CODE_SIGN_IDENTITY=\"\" PROVISIONING_PROFILE_SPECIFIER=\"\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "44804830_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/compose-cli-action", "version": "v0.3.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker-compose version", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker-compose pull", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "44822357_0", "jobs": [{"name": "build-and-push-container", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-app . \ndocker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-app\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy-to-gke", "steps": [{"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --zone ${{ secrets.GKE_CLUSTER_ZONE }} --project ${{ secrets.GCP_PROJECT_ID }}\nkubectl set image deployment/my-app my-app=gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-app\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "44860685_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "drush cc all\ndrush updb -y\ndrush fra -y\ndrush cron\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "SamKirkland/FTP-Deploy-Action", "version": "2.1.0", "shell": "bash"}]}]}
{"id": "44884442_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "homerjam/setup-build-monitor", "version": "v1", "shell": "bash"}]}]}
{"id": "4491087_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your code to include or update hosting-specific files here\necho \"This is hosting-specific code\" > hosting_file.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Add hosting-specific code\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "44955539_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -B build -S . -DCMAKE_BUILD_TYPE=Debug", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd build\nctest --output-on-failure\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "lcov --directory . --capture --output-file coverage.info\nlcov --remove coverage.info '/usr/*' --output-file coverage.info\nlcov --list coverage.info\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "codecov/codecov-action", "version": "v2", "shell": "bash"}]}]}
{"id": "45017998_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "lukasmrtvy/FTP-Deploy-Action", "version": "v3", "shell": "bash"}]}]}
{"id": "45054594_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "$branchName = \"new-branch\"  # Set the new branch name here\n$fileToOverwrite = \"path/to/file.ext\"  # Set the path to the file to overwrite\n$newContent = \"New content goes here\"  # Set the new content of the file\n\ngit checkout -b $branchName\nSet-Content -Path $fileToOverwrite -Value $newContent\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Overwrite file on branch\"\ngit push origin $branchName\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "45065875_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p ~/Library/MobileDevice/Provisioning\\ Profiles\necho \"$CERTIFICATE_BASE64\" | base64 --decode > certificate.p12\necho \"$PROVISIONING_PROFILE_BASE64\" | base64 --decode > profile.mobileprovision\nsecurity create-keychain -p \"\" ios-build.keychain\nsecurity import ./certificate.p12 -k ~/Library/Keychains/ios-build.keychain -P $CERTIFICATE_PASSWORD -T /usr/bin/codesign\nsecurity list-keychains -s ~/Library/Keychains/ios-build.keychain\nsecurity unlock-keychain -p \"\" ~/Library/Keychains/ios-build.keychain\ncp ./profile.mobileprovision ~/Library/MobileDevice/Provisioning\\ Profiles/\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean build CODE_SIGN_IDENTITY=\"iPhone Developer\" PROVISIONING_PROFILE_SPECIFIER=\"Name of Provisioning Profile\" -workspace YourProject.xcworkspace -scheme YourScheme", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "45080945_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "red-gate/RedgateDocker/SQLSourceControlCLI", "version": "1.0", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add any build and test commands needed for your project\n# For example: msbuild /p:Configuration=Release\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Use Redgate SQL Source Control CLI to generate a deployment script\n/opt/sqlsourcecontrol/sqlpackage /sourcecontrol:link /action:createscript /workingfolder:$(github.workspace) /scriptsfolder:$(github.workspace)/Scripts\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Apply the deployment script to the target database\n/opt/sqlcmd -S <your_servername> -U <your_database_username> -P <your_database_password> -d <your_database_name> -i $(github.workspace)/Scripts/DatabaseScript.sql\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "45100298_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "reactivecircuits/setup-android-emulator", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "emulator -avd ${{ matrix.device-name }} -no-audio -no-window -gpu swiftshader_indirect", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew connectedAndroidTest", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "45113410_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest --prefer-dist\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest --prefer-dist\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your deployment script here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "45133596_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "JoelKatz/boost-cmake-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\ncmake --build . --config Release\nctest --output-on-failure -T Test\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "EnisMulic/xunit-gh-action", "version": "v2", "shell": "bash"}]}]}
{"id": "45138185_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nfastlane install_plugins\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11 Pro'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "45153137_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "tecfu/github-actions-generic-webhook", "version": "v1", "shell": "bash"}]}]}
{"id": "45213498_0", "jobs": [{"name": "syntax-check", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "find . -name \"*.php\" -exec php -l {} \\;", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "45275116_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-docker", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t mysymfonyapp .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run -d --name symfonyapp -p 8080:80 mysymfonyapp", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "45292048_0", "jobs": [{"name": "convert-credential", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=token::${{ secrets.GITHUB_TOKEN }}\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "$token = '${{ steps.get_token.outputs.token }}'\n$SecureToken = ConvertTo-SecureString -String $token -AsPlainText -Force\n$credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList 'GitHubToken', $SecureToken\n# Now you can use $credential in your PowerShell scripts\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "$credential\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "45306699_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-docker", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run --dns=<your_custom_dns_ip> --dns-search=<your_custom_dns_search> drone/drone-docker", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "45306753_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "pullreminders/gh-action-comment", "version": "v1", "shell": "bash"}]}]}
{"id": "45335124_0", "jobs": [{"name": "postgresql", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ryanhein/setup-postgres", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "psql -h 127.0.0.1 -U testuser -d testdb -c \"CREATE TABLE users (id SERIAL PRIMARY KEY, name VARCHAR NOT NULL);\"\npsql -h 127.0.0.1 -U testuser -d testdb -c \"INSERT INTO users (name) VALUES ('Alice');\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "psql -h 127.0.0.1 -U testuser -d testdb -c \"SELECT * FROM users;\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "45352914_0", "jobs": [{"name": "process-parameters", "steps": [{"type": "shell_cmd", "cmd": "echo \"::set-output name=myParam::${{ github.event.after }}\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": ".github/actions/another-workflow", "version": null, "shell": "bash"}]}]}
{"id": "45404161_0", "jobs": [{"name": "sonar", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean verify sonar:sonar", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "45439698_0", "jobs": [{"name": "eslint-config", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Fetching ESLint configuration file...\"\ncurl -sLO https://raw.githubusercontent.com/[your_team_repository]/[your_branch]/path/to/.eslintrc\necho \"ESLint configuration file downloaded successfully.\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wagoid/eslint-action", "version": "v2", "shell": "bash"}]}]}
{"id": "45442512_0", "jobs": [{"name": "dispatch_job", "steps": [{"type": "gh_action", "cmd": "", "name": "repo-sync/github-action", "version": "v2", "shell": "bash"}]}]}
{"id": "45500034_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec fastlane build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "45544358_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "export ANDROID_HOME=$RUNNER_TOOL_CACHE/Android\nexport ANDROID_SDK_ROOT=$ANDROID_HOME\necho \"Android SDK Root path: $ANDROID_SDK_ROOT\"\nexport ANDROID_AVD_HOME=$ANDROID_SDK_ROOT/.android/avd\necho \"Updating AVD System Path to $ANDROID_AVD_HOME\"\necho \"AVD system path before fix:\"\nls $ANDROID_HOME/.android/avd\necho \"\"\nmkdir -p $ANDROID_AVD_HOME\necho \"AVD system path after fix:\"\nls $ANDROID_AVD_HOME\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "45553214_0", "jobs": [{"name": "configure_webhook", "steps": [{"type": "gh_action", "cmd": "", "name": "repo-sync/pull-request-webhook-action", "version": "v2", "shell": "bash"}]}]}
{"id": "45565464_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir subfolder\ncp -r path/to/subfolder/* subfolder/\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "45578001_0", "jobs": [{"name": "release", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "atlassian/gajira-release", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "softprops/action-gh-release", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Release ${{ steps.bump_version.outputs.new_tag }} completed successfully\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "45591520_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nbundle exec pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean build -workspace YOUR_WORKSPACE.xcworkspace -scheme YOUR_SCHEME -destination 'platform=iOS Simulator,name=iPhone 12' CODE_SIGN_IDENTITY=-\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YOUR_WORKSPACE.xcworkspace -scheme YOUR_SCHEME -destination 'platform=iOS Simulator,name=iPhone 12'\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -workspace YOUR_WORKSPACE.xcworkspace -scheme YOUR_SCHEME -archivePath build/YourApp.xcarchive\nxcodebuild -exportArchive -archivePath build/YourApp.xcarchive -exportPath build -exportOptionsPlist ExportOptions.plist\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "codesign -s YOUR_CODE_SIGN_IDENTITY -f --entitlements YOUR_ENTITLEMENTS build/YourApp.ipa\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "45677221_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install chef", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chef install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chef exec rspec", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install chef", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chef install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chef exec knife cookbook upload YOUR_COOKBOOK -o YOUR_PATH --freeze", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "45716106_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "bazelbuild/actions/setup-bazel", "version": "v0.5.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bazel build //path/to/your:target", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "45719046_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-dev --optimize-autoloader", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install && npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easingthemes/ssh-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "45730257_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o $(Build.ArtifactStagingDirectory)", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -o vs_TestAgent_bootstrap.exe https://download.visualstudio.microsoft.com/download/pr/12193915/e64dac02cc198a4bf1bad1c20e73a303/vs_TestAgent.exe\n.\\vs_TestAgent_bootstrap.exe\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Start-Service -Name VSTestAgent\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "45735029_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec jekyll build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Automated build $(date +'%Y-%m-%d %H:%M:%S')\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "45751865_0", "jobs": [{"name": "copy-artifacts", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sebastianpopp/curl-ftp-upload", "version": "v2", "shell": "bash"}]}]}
{"id": "45754931_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install -y mssql-tools\necho 'export PATH=\"$PATH:/opt/mssql-tools/bin\"' >> ~/.bashrc\nsource ~/.bashrc\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sqlcmd -S localhost -U username -P password -d DatabaseName -i path/to/post-deployment-script.sql\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ::set-output name=exit_code::${{ steps.RunSQLScript1.outcome }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"SQL script ran successfully!\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "45780263_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -B build -S .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ctest -C build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "45827810_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-env name=APP_ENV::${{ secrets.APP_ENV }}\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "45836071_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "qminder/qt-setup", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "qmake && make", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "danmar/cppcheck-action", "version": "v1", "shell": "bash"}]}]}
{"id": "45944048_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "goanpeca/setup-miniconda", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "conda env create -f environment.yml", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "conda activate $(awk '/name:/ {print $2}' environment.yml | tr -d '\\r')", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pip install git+https://github.com/username/repo.git", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python test_script.py", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "45983212_0", "jobs": [{"name": "configure-gradle", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"android.enableAapt=false\" >> gradle.properties", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add gradle.properties\ngit commit -m \"Configure gradle.properties\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "46047177_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/aws/eks", "version": "v1", "shell": "bash"}]}]}
{"id": "46061049_0", "jobs": [{"name": "create-build-agents", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-docker", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t my_image:latest .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker push my_image:latest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "for i in {1..3}; do\n  docker run -d --name vsts-agent-$i my_image:latest\ndone\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker ps", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "46066802_0", "jobs": [{"name": "grant_access", "steps": [{"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "46131568_0", "jobs": [{"name": "detect_language", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec github-linguist", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "46244673_0", "jobs": [{"name": "clearcase_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "romnnn/clearcase-ucm-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "modified_components=$($cleartool lsmod -fmt \"%[mod_comps]p\" | tr ' ' '\\n')\necho \"Modified components: $modified_components\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "IFS=' ' read -ra components <<< \"$modified_components\"\nfor component in \"${components[@]}\"; do\n  echo \"Loading $component...\"\n  $cleartool load -force $component\ndone\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "4627740_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "kmmbvnr/setup-qt", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install -y build-essential libgl1-mesa-dev\nqtchooser -run-tool=qmake -qt=$QT_VERSION # Replace with actual qmake command for your project\nqmake # If not yet done in previous step\nmake\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cucumber # Run Cucumber tests for Qt-based application\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "46310928_0", "jobs": [{"name": "trigger_remote_build", "steps": [{"type": "shell_cmd", "cmd": "array_param=\"element1,element2,element3\"\necho \"Array Param: $array_param\"\necho \"::set-output name=array_param::$array_param\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peter-evans/trigger-remote-workflow", "version": "v1", "shell": "bash"}]}]}
{"id": "464172_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/setup-lisp", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ros install prove\nros install qlot\nqlot install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ros run -e (ql:quickload :your-project-tests) -e (exit :code (or (prove:run :your-project) 0))", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "46465383_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Assuming you have a build script to build and package the application into a .war file\n./build_script.sh\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "michaellavelle/jfrog-artifactory-upload-action", "version": "v1", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "michaellavelle/jfrog-artifactory-download-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to deploy the downloaded .war file to your server or container\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "46488882_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/phpunit/phpunit/phpunit tests/", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/ssh-action", "version": "master", "shell": "bash"}]}]}
{"id": "46501607_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "androidsdk/setup-android-sdk", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "46509883_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build YourAspNetCoreProject.csproj\ndotnet test YourAspNetCoreProject.sln\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install -g @angular/cli", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd YourAngularProject\nnpm install\nng build\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peter-evans/ssh-action", "version": "v2", "shell": "bash"}]}]}
{"id": "46552612_0", "jobs": [{"name": "merge_on_approval", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "gr2m/merge-on-approved-action", "version": "v1", "shell": "bash"}]}]}
{"id": "46654043_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "redhat-actions/oc-cd", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "oc rsh <YOUR_POD_NAME> pip install numpy scipy\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "46688176_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourScheme clean build test -destination 'platform=iOS Simulator,name=iPhone 12'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "46699166_0", "jobs": [{"name": "assert_commits_in_release_branch", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git fetch --no-tags --depth=1 origin +refs/heads/*:refs/remotes/origin/*", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [ ${{ steps.branch_name.outputs.branch }} != \"release\" ]; then\n  echo \"Branch is not a release branch.\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=messages::$(git log --format=%B -n 5)\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [[ \"${{ steps.branch_name.outputs.branch }}\" == \"release\" && ${{ steps.check_branch.outcome }} == \"success\" ]]; then\n  # Check for required keywords in commit messages\n  if echo \"${{ steps.commits.outputs.messages }}\" | grep -q \"keyword\"; then\n    echo \"Commits contain required keyword. Assertion passed.\"\n  else\n    echo \"Commits do not contain required keyword. Assertion failed.\"\n    exit 1\n  fi\nelse\n  echo \"Branch is not a release branch. Assertion skipped.\"\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "46755628_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "46825958_0", "jobs": [{"name": "check_changes", "steps": [{"type": "gh_action", "cmd": "", "name": "srt32/diff-filter-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [ \"${{ steps.diff.outputs.diff_found }}\" == \"true\" ]; then\n  echo \"Unauthorized changes detected. Please review the commits.\"\nelse\n  echo \"No unauthorized changes found.\"\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "46848539_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec kitchen test\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "46854505_0", "jobs": [{"name": "hide_branches", "steps": [{"type": "gh_action", "cmd": "", "name": "ByaaR/branch-protection-disabler", "version": "master", "shell": "bash"}]}]}
{"id": "46905113_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -NV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane release", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "46919336_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mssql/actions/setup", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your deployment commands here, example:\n# sqlpackage.exe /a:Publish /tsn:<SQL_SERVER_IP> /tdn:<TARGET_DATABASE> /su:<TARGET_USER> /sp:<TARGET_PASSWORD> /sf:<PATH_TO_DACPAC_FILE>\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "46944606_0", "jobs": [{"name": "migration-check", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake db:environment:set RAILS_ENV=test\nbundle exec rake db:create RAILS_ENV=test\nbundle exec rake db:schema:load RAILS_ENV=test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake db:migrate:check RAILS_ENV=test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "46959091_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to run tests for your SQL project\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "winrm qc -q\nwinrm set winrm/config/service @{AllowUnencrypted=\"true\"}\nwinrm set winrm/config/service/auth @{Basic=\"true\"}\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to deploy built SQL project to VSTS using WinRM\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "46980241_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-scripts --no-interaction", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run production", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer global require laravel/envoy", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "envoy run deploy", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer global remove laravel/envoy", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "47035366_0", "jobs": [{"name": "start-jboss", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "geerlingguy/ansible-role-install-ansible", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "ansible-playbook -i inventory playbook.yml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "47038221_0", "jobs": [{"name": "upload", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec fastlane deliver\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "47047729_0", "jobs": [{"name": "close_pull_request", "steps": [{"type": "gh_action", "cmd": "", "name": "peter-evans/close-pull-requests", "version": "v1", "shell": "bash"}]}]}
{"id": "47049510_0", "jobs": [{"name": "backup_and_push", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install git -y", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php path/to/backup/script.php", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"github-actions@users.noreply.github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Automated site backup\"\ngit push origin master  # Replace 'master' with the branch name you want to push to\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "47074716_0", "jobs": [{"name": "conditional_approval_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=trigger_approval::${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "extensions/request-changes", "version": "v1", "shell": "bash"}]}, {"name": "build", "steps": [{"type": "shell_cmd", "cmd": "echo \"Building the project\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "47077239_0", "jobs": [{"name": "job1", "steps": [{"type": "shell_cmd", "cmd": "echo \"This is Job 1\"", "name": "", "version": "", "shell": "bash"}]}, {"name": "job2", "steps": [{"type": "shell_cmd", "cmd": "echo \"This is Job 2\"", "name": "", "version": "", "shell": "bash"}]}, {"name": "job3", "steps": [{"type": "shell_cmd", "cmd": "echo \"This is Job 3\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "47087751_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o ${{ github.workspace }}/publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "47138904_0", "jobs": [{"name": "trigger-onpremise-job", "steps": [{"type": "gh_action", "cmd": "", "name": "webfactory/ssh-action", "version": "v2", "shell": "bash"}]}]}
{"id": "47219675_0", "jobs": [{"name": "transfer-ownership", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "baptistemesta/azure-sql-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sqlcmd -S localhost -U ${{secrets.SQL_USERNAME}} -P ${{secrets.SQL_PASSWORD}} -d your-database-name -Q \"ALTER AUTHORIZATION ON DATABASE::your-database-name TO sa;\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "47260437_0", "jobs": [{"name": "code-analysis", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "<command to run code analysis tool>", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/azure/cli", "version": "v1", "shell": "bash"}]}]}
{"id": "47273619_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build Path/To/Your/WebApp.csproj", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish Path/To/Your/WebApp.csproj -c Release -o publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "47290996_0", "jobs": [{"name": "style-check", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install rubocop-foodcritic\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rubocop -D", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "47297650_0", "jobs": [{"name": "import-tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourMainTarget build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourTestTarget test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "47318302_0", "jobs": [{"name": "notify_on_success", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "marvinpinto/action-slack", "version": "v3", "shell": "bash"}]}]}
{"id": "47374187_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nbundle exec pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourApp -workspace YourApp.xcworkspace -sdk iphoneos -configuration Release clean archive -archivePath build/YourApp", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath build/YourApp.xcarchive -exportPath build/exports -exportOptionsPlist ExportOptions.plist", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/scp-action", "version": "master", "shell": "bash"}]}]}
{"id": "47487617_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test --no-restore --verbosity normal", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "47495785_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/setup-helm", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm repo add my-repo <REMOTE_REPOSITORY_URL>", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm repo update", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm install my-chart my-repo/my-chart", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "47577512_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "prince-chrismc/githubfile-action", "version": "releases/v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Changed files:\"\ncat changed-files.txt\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "47578215_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "brew install xcparse\nnpm install -g appcenter-cli\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourScheme -sdk iphonesimulator build test\nappcenter test run xcuitest --app \"YourApp\" --devices \"iPhone 12 Pro Max\" --app-path path/to/YourApp.ipa --test-series \"xcuitest\" --locale \"en_US\" --debug --token $TEST_TOKEN\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "47594917_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=github_url::${{ github.repository_url }}\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "$githubUrl = '${{ steps.set_github_url.outputs.github_url }}'\nWrite-Output \"GitHub Repository URL: $githubUrl\"\n# You can use $githubUrl variable within the script as needed\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "47659503_0", "jobs": [{"name": "phpunit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nphp composer-setup.php --install-dir=/usr/local/bin --filename=composer\nphp -r \"unlink('composer-setup.php');\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require phpunit/phpunit vendor/package:$vendor --ignore-platform-reqs", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "47663315_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update && sudo apt-get install php-ioncube-loader", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r 'file_put_contents(\"decoded.php\", ioncube_read_file(\"encoded.php\", true));'", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add decoded.php\ngit commit -m \"Decoded IonCube files\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "47724375_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler && bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake test TESTOPTS=\"--seed ${{ github.run_number }}\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "47798470_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\ngem install fastlane\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane <lane_name>", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "47827457_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "aws-actions/configure-aws-credentials", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "eb init -p ruby-2.7 my-rails-app --region us-east-1\neb deploy\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "47861169_0", "jobs": [{"name": "copy_repository", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r * /path/to/destination-repo\ncd /path/to/destination-repo\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Copy content from source repository\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "47938100_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "warrenbuckley/Setup-MSBuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmd /c \"vswhere -property installationPath | set /p=\" && dir %installationPath%\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "NuGet/setup-nuget", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nuget restore Path/To/Your/UWPProject.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild Path/To/Your/UWPProject.sln /p:Configuration=Debug", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild Path/To/Your/TestProject.csproj /t:VSTest", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "47941505_0", "jobs": [{"name": "rename-file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git mv old-file-name new-file-name", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit commit -am \"Rename file\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "48075803_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-ansi --no-interaction --no-progress", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp .env.dist .env", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"file_put_contents('.env', str_replace(['APP_SECRET', 'DATABASE_URL'], [getenv('APP_SECRET'), getenv('DATABASE_URL')], file_get_contents('.env')));\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php bin/console asset:install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "48096814_0", "jobs": [{"name": "build-and-deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install cocoapods\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean archive -scheme YourScheme -workspace YourWorkspace.xcworkspace -sdk iphoneos -configuration Release -archivePath build/YourApp\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath build/YourApp.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath build\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcrun altool --upload-app -f build/YourApp.ipa -t ios -u $APPLE_ID -p $APP_SPECIFIC_PASSWORD\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "48152916_0", "jobs": [{"name": "analyze-build-health-and-push-frequency", "steps": [{"type": "shell_cmd", "cmd": "# Add script to check CI build health\n# This script could check the status of recent builds and determine overall health\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "chicoribas/pull-stats-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add script to compare build health and push frequency\n# Notify relevant information based on the analysis\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "48181249_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bash bin/install-wp-tests.sh wordpress_test root '' localhost $WP_VERSION\nmkdir -p build/logs\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wp-env run phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wp-env run phpcs", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "48208989_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew wrapper --gradle-version=7.0", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleDebug", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "48255657_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YOUR_WORKSPACE.xcworkspace -scheme YOUR_SCHEME -destination 'generic/platform=iOS' clean archive -archivePath build/YourApp", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath build/YourApp.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "48288433_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-msys2", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pacman -Sy --noconfirm --needed mingw-w64-x86_64-gcc mingw-w64-x86_64-cmake\npacman -Sy --noconfirm --needed mingw-w64-x86_64-openssl\nexport PATH=$PATH:/mingw64/bin\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -Bbuild -S.\ncmake --build build --config Release\nsigntool sign /f path/to/certificate.pfx /p ${{ secrets.CERT_PASSWORD }} build/your_binary.exe\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "48353919_0", "jobs": [{"name": "add-files", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "find . -type f -name '*.txt' -exec sh -c 'cp \"$@\" /github/workspace/ && ls -l \"$@\"' _ {} +\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Add files with specific extension to repository\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "4844471_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails assets:precompile", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails s -d -e test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sleep 5", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "cypress-io/github-action", "version": "v2", "shell": "bash"}]}]}
{"id": "48445171_0", "jobs": [{"name": "automation", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mcr.microsoft.com/mssql/server:2019-latest", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "sqlcmd -S localhost -U sa -P $SA_PASSWORD -i scripts/database_backup.sql", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sqlcmd -S localhost -U sa -P $SA_PASSWORD -i scripts/migration_script.sql", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "tf vc checkin /path:. /comment:\"Automated database deployment\" /noprompt\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "48467464_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mathworks/matlab-actions/setup", "version": "v0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd $GITHUB_WORKSPACE\nmatlab -batch \"add_folder_to_git\"  # Replace with the name of your MATLAB script\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Add new folders to git\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "48513874_0", "jobs": [{"name": "build", "steps": [{"type": "shell_cmd", "cmd": "message=$(git log --format=%B -n 1 ${{ github.sha }})\nif [[ $message == *\"maven release\"* ]]; then\n  echo \"Maven release commit detected. Skipping workflow execution.\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": null, "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean install", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "48545950_0", "jobs": [{"name": "fetch-pull-requests", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"$PULL_REQUESTS\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "48555272_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "aws-actions/aws-codedeploy", "version": "v2", "shell": "bash"}]}]}
{"id": "48555735_0", "jobs": [{"name": "generate_posts", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install jekyll bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir _posts\nfor entry in $(jq -r '.posts[] | keys | .[]' posts.yaml); do\n  post_title=$(jq -r \".posts[0][\\\"$entry\\\"].title\" posts.yaml)\n  post_content=$(jq -r \".posts[0][\\\"$entry\\\"].content\" posts.yaml)\n  echo \"---\\nlayout: post\\ntitle: $post_title\\n---\\n$post_content\" > \"_posts/${entry}.md\"\ndone\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Generate Jekyll posts from YAML array\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "48572506_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Building the project\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Running tests\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"This step requires manual approval\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wei/github-action-approve", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Deploying the project\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "48608231_0", "jobs": [{"name": "push-database-changes", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ridedott/setup-mysql-client", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -h ${{ secrets.MYSQL_HOST }} -u ${{ secrets.MYSQL_USERNAME }} -p\"${{ secrets.MYSQL_PASSWORD }}\" < path/to/your/sql/script.sql\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "48623779_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/setup-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build . -t my_nginx_image", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run -d -p 8080:80 my_nginx_image", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "48757402_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-dev", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require username/repository:version", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "48767733_0", "jobs": [{"name": "setup_emulators", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"no\" | $ANDROID_HOME/tools/bin/sdkmanager --install \"system-images;android-30;google_apis;x86\"\necho \"no\" | $ANDROID_HOME/tools/bin/sdkmanager --licenses\n\navdmanager create avd -n Pixel_API_30 -k \"system-images;android-30;google_apis;x86\" --device \"pixel\"\navdmanager create avd -n Tab7_API_30 -k \"system-images;android-30;google_apis;x86\" --device \"7in\"\navdmanager create avd -n Tab10_API_30 -k \"system-images;android-30;google_apis;x86\" --device \"10in\"\n\n$ANDROID_HOME/emulator/emulator -avd Pixel_API_30 -no-audio -no-window -gpu swiftshader_indirect &\n$ANDROID_HOME/emulator/emulator -avd Tab7_API_30 -no-audio -no-window -gpu swiftshader_indirect &\n$ANDROID_HOME/emulator/emulator -avd Tab10_API_30 -no-audio -no-window -gpu swiftshader_indirect &\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "48803245_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "webbertakken/unity-actions", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Build the Unity project\n/opt/unity/Editor/Unity -quit -batchmode -executeMethod BuildScript.PerformBuild\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "48815239_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean verify", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "48843026_0", "jobs": [{"name": "hide-password", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install git -y", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git filter-branch --index-filter 'git update-index --remove <path-to-password-file> && echo \"<password-placeholder>\" > <path-to-password-file>' --tag-name-filter cat -- --all\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "48897758_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"RewriteEngine On\" > .htaccess\necho \"RewriteCond %{HTTP_HOST} ^(www\\.)?yourdomain\\.com$\" >> .htaccess\necho \"RewriteRule ^(.*)$ /codeigniter/$1 [L]\" >> .htaccess\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Redirect domain to CodeIgniter folder\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "48913294_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install -g @google-cloud/dlialogflow", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth print-access-token | dialogflow import agent \\ --agent \"projects/${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}/locations/global/agents/${{ secrets.DIALOGFLOW_AGENT_ID }}\" \\ --content ./path/to/your/dialogflow.json", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "48930108_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/setup-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace maven:3.6.3-jdk-11 mvn dependency:go-offline\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "49017993_0", "jobs": [{"name": "notify_team", "steps": [{"type": "gh_action", "cmd": "", "name": "repo-sync/github-action-new-issue", "version": "v2", "shell": "bash"}]}]}
{"id": "49041231_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-swift", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "swift build\nswift test\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "49138684_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "leemunroe/gatling-github-action", "version": "releases/v3", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Your deployment script here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "49149975_0", "jobs": [{"name": "collaborate", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "49163279_0", "jobs": [{"name": "setup", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "brew install applesimutils\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "export BOOTED_SIMULATOR_ID=$(xcrun simctl list | grep -o '\\b\\com.apple.CoreSimulator.SimRuntime.iOS.*\\b')\nxcrun simctl boot \"$BOOTED_SIMULATOR_ID\" || xcrun simctl boot \"com.apple.CoreSimulator.SimRuntime.iOS-XX-XX-XX\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -scheme YourScheme -destination 'platform=iOS Simulator,id=$BOOTED_SIMULATOR_ID' | xcpretty\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "49232224_0", "jobs": [{"name": "tag_handling", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Write-Host \"Handling tag: ${{ github.ref }}\"\n\n$tagName = \"${env:GITHUB_REF}\".Replace('refs/tags/', '')\nWrite-Host \"Extracted tag name: $tagName\"\n\n# Add your custom PowerShell commands to handle the Git tags here\n", "name": "", "version": "", "shell": "pwsh"}]}]}
{"id": "49262370_0", "jobs": [{"name": "check_changes", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "digitalocean/action-k8s-set-context", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl get deployment your-deployment-name -o yaml > current_deployment.yaml", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Checks for any changes between current and updated deployment files\nif ! diff -q current_deployment.yaml updated_deployment.yaml; then\n  echo \"::set-output name=deploy_required::true\"\nelse\n  echo \"No deployment changes found.\"\n  echo \"::set-output name=deploy_required::false\"\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f updated_deployment.yaml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "49276702_0", "jobs": [{"name": "update_project_path", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"path/to/your/project\" > project_path.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"<your-email>\"\ngit config --local user.name \"GitHub Actions\"\ngit add project_path.txt\ngit commit -m \"Update project path\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "49286193_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp .env.example .env\nphp index.php migrate\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php index.php mycontroller mymethod --silent", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "49302563_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "lukka/get-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake -DCMAKE_BUILD_TYPE=Release .. # Add any other CMake arguments you need here\ncmake --build .\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd build\nctest --output-on-failure -R my_test_pattern # Add your custom ctest arguments here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "49374616_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "steebchen/kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl set image deployment/myapp-deployment myapp-container=${{ secrets.STAGING_IMAGE }}\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl set image deployment/myapp-deployment myapp-container=${{ secrets.PRODUCTION_IMAGE }}\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "49374876_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-hugo", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "hugo --minify", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "49396697_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "security create-keychain -p mysecretpassword ios-build.keychain\nsecurity default-keychain -s ios-build.keychain\nsecurity unlock-keychain -p mysecretpassword ios-build.keychain\nsecurity set-keychain-settings -t 3600 -u ios-build.keychain\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mspangenberg/setup-keychain", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourApp -destination 'generic/platform=iOS' PROVISIONING_PROFILE=\"Your Provisioning Profile\" CODE_SIGN_IDENTITY=\"Your Code Signing Identity\" clean build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "49427267_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "azure/cli", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "OctopusDeploy/Deploy", "version": "4", "shell": "bash"}]}]}
{"id": "49430929_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -project YourProject.xcodeproj -scheme YourScheme clean build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "49470279_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-hugo", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"$USERNAME:$(openssl passwd -apr1 $PASSWORD)\" > ${GITHUB_WORKSPACE}/htpasswd", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/ssh-action", "version": "master", "shell": "bash"}]}]}
{"id": "49499575_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build YourSolution.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test YourSolution.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o ${{ github.workspace }}/publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Azure/functions-actions", "version": "v1", "shell": "bash"}]}]}
{"id": "49530224_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jurplel/setup-qt", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "qmake -o build ${GITHUB_WORKSPACE}/path/to/project.pro\ncd build\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "make\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "make test\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "49586251_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/aws/codebuild", "version": "v1", "shell": "bash"}]}]}
{"id": "49588674_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your correction logic here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.email \"actions@github.com\"\ngit config user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"<YOUR_COMMIT_MESSAGE>\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "marocchino/github-action-push", "version": "v2", "shell": "bash"}]}]}
{"id": "49708337_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Generate report logic here\" > report.txt", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v3", "shell": "bash"}]}]}
{"id": "49775102_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "redhat-developer/openshift-actions/openshift-login", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "oc project my-project", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "oc apply -f path/to/deployment.yaml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "49846594_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-swift", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "swift build\nswift test\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "49872269_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "perforce/software/p4broker", "version": "latest", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "your-ldap-action", "version": null, "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to push changes to Perforce\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "4987684_0", "jobs": [{"name": "bring_file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp path/to/source/file path/to/target/directory", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "4988238_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easingthemes/ssh-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "49896222_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn package", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "weblogicdeploy/weblogic-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "49966090_0", "jobs": [{"name": "run_sql_query", "steps": [{"type": "gh_action", "cmd": "", "name": "aliem/composer-oracle-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get -y install libaio1 && \\\ncurl -o instantclient-basiclite-linux.x64-21.1.0.0.0.zip https://download.oracle.com/otn_software/linux/instantclient/211000/instantclient-basiclite-linux.x64-21.1.0.0.0.zip && \\\nunzip instantclient-basiclite-linux.x64-21.1.0.0.0.zip -d /opt/oracle/ && \\\nrm instantclient-basiclite-linux.x64-21.1.0.0.0.zip\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"/opt/oracle/instantclient_21_1\" | sudo tee -a /etc/ld.so.conf.d/oracle-instantclient.conf && sudo ldconfig", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sqlplus user/password@database @path/to/your/sql/script.sql\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "50025872_0", "jobs": [{"name": "connect-folder", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r /path/to/local/folder/* .\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Connect local folder to GitHub repo\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "50050808_0", "jobs": [{"name": "laravel_migration_and_seed", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp .env.example .env", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan key:generate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan migrate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan db:seed", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chmod -R 777 storage", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "50062839_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp .env.example .env", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i 's/localhost/mysql/g' application/config/database.php", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan cache:clear", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "50115650_0", "jobs": [{"name": "check-local-changes", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout HEAD -- path/to/file1\ngit checkout HEAD -- path/to/file2\n# Add more files as needed\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.name \"Your GitHub Actions Bot\"\ngit config user.email \"<your-email-address>\"\ngit commit -am \"Restore original state of files\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "50155903_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Commands to build the project\necho \"Building the project...\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Commands to run tests\necho \"Running tests...\"\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/vsts", "version": "v2", "shell": "bash"}]}]}
{"id": "50159795_0", "jobs": [{"name": "merge", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "<your-custom-action-repository>/<your-eap-merge-action>", "version": null, "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}]}]}
{"id": "50207816_0", "jobs": [{"name": "sonarqube_analysis_a", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "SonarSource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}, {"name": "sonarqube_analysis_b", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "SonarSource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "50259730_0", "jobs": [{"name": "format", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn checkstyle:check", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "netbeans-integration", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subchen/install-netbeans", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "netbeans/bin/netbeans --userdir `mktemp -d` --nosplash --checkstyle-check src/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Apply code formatting\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "50299840_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' | xcpretty", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "find ~/Library/Developer/Xcode/DerivedData/ -name \"*.crash\" -print\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "50361302_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/compose-cli", "version": "v0.7.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker-compose up -d\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker-compose exec your-service-name pytest tests/\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker-compose down\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "50366756_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run test:coverage", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mikepenz/action-github-blue-coverage", "version": "v1", "shell": "bash"}]}]}
{"id": "50369117_0", "jobs": [{"name": "deploy_sidecar_mysql", "steps": [{"type": "gh_action", "cmd": "", "name": "docker/compose-cli-action", "version": "v0.1.4", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker compose -f docker-compose.yml up -d\ndocker ps\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Execute your tests or commands that require MySQL connection here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker compose -f docker-compose.yml down", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "50436095_0", "jobs": [{"name": "disable-approve", "steps": [{"type": "gh_action", "cmd": "", "name": "ncipollo/github-pr-approval-action", "version": "v2", "shell": "bash"}]}]}
{"id": "50437126_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-hugo", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "hugo --minify", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Deploying to GitHub Pages...\"\ngit config --global user.name 'GitHub Actions'\ngit config --global user.email 'actions@users.noreply.github.com'\ngit checkout gh-pages || git checkout --orphan gh_pages\ngit rm -rf .\nmv public/* .\nrm -rf public\ntouch .nojekyll\ngit add .\ngit commit -m \"Deploy Hugo site\"\ngit push -f origin gh-pages\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "50460093_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud firebase test android run \\\n  --type instrumentation \\\n  --app path/to/your/apk \\\n  --test path/to/your/test_apk \\\n  --device model=Pixel2,version=29,locale=en,orientation=portrait\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Save your test results to a file or upload them to a cloud storage like GCS\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "50497126_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "game-ci/setup-unity", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir Build\nUNITY_EXECUTABLE=\"Unity/Editor/Unity\"\n$UNITY_EXECUTABLE -batchmode -quit -projectPath . -executeMethod BuildScript.PerformBuild -logFile -\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "50524579_0", "jobs": [{"name": "set-tab-size", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "for file in $(git ls-files '*.js' '*.html' '*.css'); do\n  sed -i 's/\\t/    /g' $file\ndone\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'GitHub Actions'\ngit config --global user.email 'actions@github.com'\ngit add .\ngit commit -m 'Set tab size to 4 spaces'\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "50562567_0", "jobs": [{"name": "run_jmeter_tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "martindsouza/jmeter-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "jmeter -n -t path/to/your/test.jmx -l testresults.jtl", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python push_results_to_ALM.py", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "50764179_0", "jobs": [{"name": "update-private-repo", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git fetch https://github.com/public_repo_username/public_repo.git master", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git merge FETCH_HEAD", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "50820360_0", "jobs": [{"name": "cypress", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "cypress-io/github-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npx cypress run --headless --config baseUrl=\"http://example.com\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "50844167_0", "jobs": [{"name": "configure_webhook", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.3.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud config set project YOUR_PROJECT_ID", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "WEBHOOK_URL=\"https://YOUR_GCP_IAP_URL\"\ngh api repos/:owner/:repo/hooks/:hook_id -f config.url=$WEBHOOK_URL\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "50868292_0", "jobs": [{"name": "build", "steps": [{"type": "shell_cmd", "cmd": "echo \"PIPELINE_VAR=Hello, World!\" >> $GITHUB_ENV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo $PIPELINE_VAR", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-email", "version": "v2", "shell": "bash"}]}]}
{"id": "50978307_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your commands here to run tests for PHPGrid Lite with CodeIgniter 3.1.7\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your deployment commands here if needed\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "51020085_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"$SSH_PRIVATE_KEY\" > deploy_key\nchmod 600 deploy_key\necho \"$SSH_KNOWN_HOSTS\" > ssh_known_hosts\n\nbundle exec cap production deploy\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "51036337_0", "jobs": [{"name": "sonarcloud", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "51037239_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest --no-interaction", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp web/sites/default/default.settings.php web/sites/default/settings.php\ncd web && chmod a+w sites/default\nphp core/scripts/drupal quick-start\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpcs --standard=Drupal web/modules custom", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/behat", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "51054464_0", "jobs": [{"name": "update_package_version", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php composer-setup.php", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"unlink('composer-setup.php');\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php composer.phar install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php composer.phar require vendor/package:2.0 --update-with-dependencies", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php composer.phar update", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add composer.json composer.lock\ngit commit -m \"Update package version\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "51160302_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.3.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud container clusters get-credentials CLUSTER_NAME --zone ZONE --project PROJECT_ID\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl get pods\n# Add more kubectl commands as needed\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "51188807_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.2.1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker login -u _json_key -p \"$(echo ${GOOGLE_APPLICATION_CREDENTIALS} | base64 -i -d)\" https://gcr.io\ndocker pull gcr.io/<project-id>/<image-name>:<tag>\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "51315351_0", "jobs": [{"name": "rspec", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler:2.2.28\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "5137905_0", "jobs": [{"name": "checkstyle", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require --dev squizlabs/php_codesniffer\nvendor/bin/phpcs --report=checkstyle --report-file=checkstyle.xml\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "51401023_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to build your Ruby project\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to run tests for your Ruby project\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "51419606_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "haskell/actions/setup", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cabal new-update && cabal new-build --only-dependencies --enable-tests", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cabal new-test --test-show-details=streaming --test-options=\"--format=specdoc --format=junit\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "5142319_0", "jobs": [{"name": "generate-scripts", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wnameless/oracle-instantclient", "version": "1.0.2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir scripts\nsqlplus -S user/password@//hostname:port/service_name <<EOF\nset heading off\nset pagesize 0\nset long 1000000\nset feedback off\nset termout off\nspool scripts/create_scripts.sql\nSELECT dbms_metadata.get_ddl(object_type, object_name) FROM all_objects WHERE owner = 'YOUR_SCHEMA_NAME';\nspool off\nexit;\nEOF\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp create_scripts.sql scripts/create_scripts.sql\ngit add scripts\ngit config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit commit -m \"Generate scripts for Oracle schema objects\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "51441880_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-rust", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cargo build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global credential.helper store\ngit clone https://github.com/your-private-dependency-repo.git\ncd your-private-dependency-repo\ngit checkout $CRATE_REPO_CRATE_BRANCH\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cargo build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "51442381_0", "jobs": [{"name": "install", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "51479710_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "env0/github-action-set-status", "version": "v1", "shell": "bash"}]}]}
{"id": "51524843_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chmod +x gradlew", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "reactivecircus/android-emulator-runner", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "adb wait-for-device", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew connectedAndroidTest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "adb emu kill", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "exit 0\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "51540821_0", "jobs": [{"name": "set_title", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=branch_name::$(echo $GITHUB_REF | rev | cut -d/ -f1 | rev)\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "repo-sync/pull-request", "version": "v2", "shell": "bash"}]}]}
{"id": "5158912_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-interaction --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "5158942_0", "jobs": [{"name": "codesign", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "security find-identity -v -p codesigning\ncodesign --force --sign \"Developer Distribution Certificate\" --timestamp=none ./path_to_your_app.app\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "security find-identity -v -p codesigning\ncodesign --force --sign \"Enterprise Distribution Certificate\" --timestamp=none ./path_to_your_app.app\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "51632522_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.DOCKER_PASSWORD }}\" | docker login -u \"${{ secrets.DOCKER_USERNAME }}\" --password-stdin", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t my-docker-image:$GITHUB_SHA .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker push my-docker-image:$GITHUB_SHA", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/setup-kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl set image deployment/my-deployment my-container=my-docker-image:$GITHUB_SHA\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "51772515_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/setup-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run -d <your-docker-image>", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Running shell script...\"\n# Add your shell script commands here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker stop $(docker ps -q)", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "51778295_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"export APP_ENV=$APP_ENV\" >> $GITHUB_ENV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"export DATABASE_URL=$DATABASE_URL\" >> $GITHUB_ENV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php bin/console cache:clear", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "51781446_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "warrenbuckley/SetupMSBuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /t:Rebuild /p:Configuration=Release YourInstallerProject.vdproj\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "7z a YourInstallerFiles.zip path\\to\\your\\installer\\files\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "51819335_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "bahmutov/start-server-and-test", "version": "v10", "shell": "bash"}]}]}
{"id": "51958616_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ashishchawla/sfdx-cli-action", "version": "v1.1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sfdx force:org:create -f config/project-scratch-def.json -a scratch-org -s", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sfdx force:package:install -p 04t... -w 20", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sfdx force:apex:test:run -u scratch-org -c -r human", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "51994548_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o ./publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "your_nexus_go_cd_action", "version": null, "shell": "bash"}]}]}
{"id": "51998698_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec cucumber $(bundle exec ruby -e \"require 'cucumber/tag_expressions'; puts Cucumber::TagExpressions::Parser.new.parse('(YOUR_TAG_EXPRESSION)').to_s\") --tags 'not @skip'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "52038034_0", "jobs": [{"name": "push_conda_env", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "conda-incubator/setup-miniconda", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "conda env export > environment.yml", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add environment.yml\ngit commit -m \"Update Conda environment\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "pull_conda_env", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git fetch --all\ngit checkout ${{ github.ref }}\ngit pull\ncp environment.yml $GITHUB_WORKSPACE/environment.yml\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "conda-incubator/setup-miniconda", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "conda env create -f environment.yml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "5213488_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "52224319_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "8398a7/action-slack", "version": "v3", "shell": "bash"}]}]}
{"id": "52271670_0", "jobs": [{"name": "security", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/github-script", "version": "v3", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "52277142_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "katalon-studio/docker-images", "version": "main", "shell": "bash"}, {"type": "shell_cmd", "cmd": "/katalonc.sh -noSplash -runMode=console -projectPath=\"$(Agent.BuildDirectory)/_your_project_path\" -testSuitePath=\"Test Suites/Regression Test Suite\" -browserType=\"Chrome\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "release", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}]}]}
{"id": "52282546_0", "jobs": [{"name": "import_project", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android-actions/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Clone the repository\ngit clone https://github.com/yourusername/your-repo-name.git\n\n# Open the project in Android Studio\ncd your-repo-name\nopen -a /Applications/Android\\ Studio.app .\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "52307667_0", "jobs": [{"name": "modify-branch", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"New content to be added\" >> example.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Modify files in the branch by GitHub Actions workflow\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "5233134_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -Bbuild -H.\ncmake --build build --config Release\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -Bnightly-build -H.\ncmake --build nightly-build --config Release\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "52345536_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "game-ci/setup-unity", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "\"C:\\Program Files\\Unity\\Editor\\Unity.exe\" -quit -batchmode -projectPath ${{ github.workspace }} -executeMethod BuildScript.BuildWindows\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "52389328_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test --filter TestCategory=Unit", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/appcenter-actions/upload-artifacts", "version": "v2", "shell": "bash"}]}]}
{"id": "52588096_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"GKE_PROJECT_ID=your-gke-project-id\" >> $GITHUB_ENV\necho \"GKE_CLUSTER_NAME=your-gke-cluster-name\" >> $GITHUB_ENV\necho \"GKE_ZONE=your-gke-zone\" >> $GITHUB_ENV\necho \"OTHER_ENV_VARIABLE=value\" >> $GITHUB_ENV\n# Add any other environment variables needed\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud container clusters get-credentials ${{ env.GKE_CLUSTER_NAME }} --zone ${{ env.GKE_ZONE }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f your-kubernetes-manifests/\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "5260130_0", "jobs": [{"name": "build_rails", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake db:setup\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec", "name": "", "version": "", "shell": "bash"}]}, {"name": "build_dotnet", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "52621914_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -NV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane ios build_test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "52663216_0", "jobs": [{"name": "create_pull_request", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b new-branch\ngit config --global user.email \"actions@users.noreply.github.com\"\ngit config --global user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your code changes here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Auto-generated changes\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peter-evans/create-pull-request", "version": "v3", "shell": "bash"}]}]}
{"id": "52708084_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o ./publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "52715365_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "react-native-community/react-native-android", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "52754351_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet tool install --global dotnet-ef", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet ef dbcontext scaffold \"YourConnectionString\" Microsoft.EntityFrameworkCore.SqlServer -o Models --force\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git diff-index --quiet HEAD -- || (git config --global user.name 'GitHub Actions' && git config --global user.email 'actions@users.noreply.github.com' && git commit -am \"Automated EDMX update\" && git push)\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "52755116_0", "jobs": [{"name": "refresh", "steps": [{"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "52757211_1", "jobs": [{"name": "daily-build", "steps": []}]}
{"id": "52757211_2", "jobs": [{"name": "release-project", "steps": []}]}
{"id": "52773104_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/sql-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=Release /p:Platform=\"Any CPU\" /t:Build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sqlpackage.exe /a:Publish /tsn:$SERVER_NAME /tdn:$DATABASE_NAME /tu:$USERNAME /tp:$PASSWORD /sf:DatabaseArtifact/*.dacpac\necho \"Database deployment done\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "5277796_0", "jobs": [{"name": "sonarqube-analysis", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/github-action-publish-github-check", "version": "master", "shell": "bash"}]}]}
{"id": "52873453_0", "jobs": [{"name": "rspec", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec\nif [ $? -ne 0 ]; then echo \"::error::RSpec tests failed\"; exit 1; fi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "52879526_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python -m pip install --upgrade pip\npip install ftputil\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python compare_and_backup.py", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wei/fetch-ftp-action", "version": "v2", "shell": "bash"}]}]}
{"id": "52945289_0", "jobs": [{"name": "extract_word", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php extract_word.php \"Hello World\" \"World\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "52952445_0", "jobs": [{"name": "maven-release", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn release:prepare -DautoVersionSubmodules=true -B\ntag=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)\ngit tag $tag\ngit push --tags\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "52999555_0", "jobs": [{"name": "add-teams", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Install any necessary tools or dependencies here\n# For example:\n# brew install jq\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Run the script or command line tool to add teams to Xcode server\n# Replace the command below with the actual command to add teams\n# For example:\n# /path/to/add_teams_script.sh team1 team2\n\necho \"Adding teams to Xcode server...\"\n/path/to/add_teams_script.sh team1 team2\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Run any verification steps to ensure teams were added successfully\n# For example:\n# /path/to/verify_teams_script.sh\n\necho \"Verifying teams were added successfully...\"\n/path/to/verify_teams_script.sh\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Workflow completed successfully!\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "52999911_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easimon/xvfb", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "export DISPLAY=:99\nnpm test\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "53010356_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-go", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "go test ./...", "name": "", "version": "", "shell": "bash"}]}, {"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-go", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "go build -o myapp", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth activate-service-account --key-file=creds.json", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth configure-docker -q", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t gcr.io/$PROJECT_ID/myapp:$GITHUB_SHA .\ndocker push gcr.io/$PROJECT_ID/myapp:$GITHUB_SHA\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud container clusters get-credentials $CLUSTER_NAME --zone=$ZONE --project=$PROJECT_ID\nkubectl set image deployment/myapp-deployment myapp=gcr.io/$PROJECT_ID/myapp:$GITHUB_SHA\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "53015289_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android/setup-android-emulator", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android/emulator-runner", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "adb install -r app/build/outputs/apk/debug/app-debug.apk", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "53057282_0", "jobs": [{"name": "recover_files", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git log --oneline\n# Copy the commit hash before hard reset\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b recovered-files COMMIT_HASH_BEFORE_HARD_RESET\n# Replace COMMIT_HASH_BEFORE_HARD_RESET with the actual commit hash\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout ANOTHER_BRANCH_NAME -- path/to/recover/*\n# Replace ANOTHER_BRANCH_NAME with the branch containing the files to recover\n# Replace path/to/recover/* with the path or file pattern of the files to recover\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Recover files after hard reset\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/push-to-another-repository", "version": "v1", "shell": "bash"}]}]}
{"id": "53230873_0", "jobs": [{"name": "build-and-deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "redhat-actions/oc-cli", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "oc login $OPENSHIFT_SERVER_URL --token=$OPENSHIFT_TOKEN", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "oc new-app . --name=myapp\noc expose svc/myapp\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your test commands here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to deploy to a staging environment\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to deploy to production environment\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "53262094_0", "jobs": [{"name": "auto_pull_request", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "juliangut/squash-and-merge", "version": "v1", "shell": "bash"}]}]}
{"id": "53424444_0", "jobs": [{"name": "xcode_build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourProjectScheme -destination 'platform=iOS Simulator,name=iPhone 12' clean build test\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "53458529_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -- '*.pdf' '*.jpg' '*.png'", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.email \"you@example.com\"\ngit config user.name \"Your Name\"\ngit add -A\ngit commit -m \"Protect user attachments and uploaded files\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "53554269_0", "jobs": [{"name": "behat", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/behat", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "53632337_0", "jobs": [{"name": "review", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wearemojave/setup-intellij", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn idea:idea", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn idea:inspections", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "53684723_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "53692264_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "swift-actions/setup-swift", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "swift build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "swift test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "53713123_1", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "path/to/ci_template.yml", "version": null, "shell": "bash"}]}]}
{"id": "53729749_0", "jobs": [{"name": "check-local-changes", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [[ $(git diff --name-only origin/main) ]]; then\n  echo \"::set-output name=has_changes::true\"\nelse\n  echo \"::set-output name=has_changes::false\"\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "unsplash/comment-on-pull-request", "version": "v1", "shell": "bash"}]}]}
{"id": "53735216_0", "jobs": [{"name": "reopen_pull_request", "steps": [{"type": "gh_action", "cmd": "", "name": "peter-evans/repo-ecosystem-webhooks", "version": "1.1", "shell": "bash"}]}]}
{"id": "53756175_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "hashicorp/setup-terraform", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "terraform init && terraform plan -out=tfplan -detailed-exitcode", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=changed::$(test ${{ steps.deployment-code.result }} -eq 0 && echo false || echo true)\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "terraform apply -auto-approve tfplan", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rm tfplan", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "53801080_0", "jobs": [{"name": "check-perforce-changes", "steps": [{"type": "gh_action", "cmd": "", "name": "perforce/p4-cli-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "p4 login -a\np4 sync ...\nCHANGES=$(p4 changes -ss @=change | wc -l)\necho \"Perforce changes detected: $CHANGES\"\nif [ $CHANGES -gt 0 ]; then\n  echo \"::set-output name=changes-detected::true\"\nelse\n  echo \"::set-output name=changes-detected::false\"\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Perforce changes detected. Run downstream job here.\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "53807_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php path/to/your/script.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "53834567_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run test:coverage", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "coverallsapp/github-action", "version": "v1.1.2", "shell": "bash"}]}]}
{"id": "53837969_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "windows-tool-cache/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /t:Restore,Build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /t:SonarQubePrepare /d:sonar.host.url=<YourSonarQubeServerURL> /d:sonar.login=<YourToken> /d:sonar.cs.msbuild.sln={YourSolutionFile}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /t:Rebuild /nr:false", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /t:SonarQubeAnalyze /d:sonar.host.url=<YourSonarQubeServerURL> /d:sonar.login=<YourToken>", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "53915170_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "53938578_0", "jobs": [{"name": "cleanup", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clean -ffdX\ngit checkout -- .\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Cleanup untracked files using GitHub Actions\" || true\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "53991328_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud components install docker-credential-gcr", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth configure-docker\ndocker build -t gcr.io/your-project-id/your-app .\ndocker push gcr.io/your-project-id/your-app\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud app deploy --image-url=gcr.io/your-project-id/your-app", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "54008227_0", "jobs": [{"name": "phpunit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "54023038_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler jekyll\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "jekyll build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "54061820_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/setup-qemu-action", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/setup-buildx-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.DOCKER_PASSWORD }}\" | docker login --username \"${{ secrets.DOCKER_USERNAME }}\" --password-stdin", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker buildx create --use\ndocker buildx build --platform linux/amd64,linux/arm64 -t yourdockerusername/yourimage:latest .\ndocker buildx build --push --platform linux/amd64,linux/arm64 -t yourdockerusername/yourimage:latest .\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/setup-virtualbox", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run -d --name mycontainer yourdockerusername/yourimage:latest\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "5408261_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nphp composer-setup.php\nphp -r \"unlink('composer-setup.php');\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer create-project --repository=https://repo.magento.com/ magento/project-community-edition .\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "5408313_0", "jobs": [{"name": "build-and-test-project1", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "your-org/shared-library", "version": "main", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to build and test project 1\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "build-and-test-project2", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "your-org/shared-library", "version": "main", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to build and test project 2\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "54134598_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Your commands to build the Android app\n./gradlew assembleDebug\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Your commands to run tests if needed\n./gradlew test\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "reactivecircus/android-emulator-runner", "version": "v2", "shell": "bash"}]}]}
{"id": "54155967_0", "jobs": [{"name": "type-check", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --prefer-dist --no-progress --no-suggest --no-interaction", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpstan analyse --memory-limit 2G", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "54181322_0", "jobs": [{"name": "trigger_pipeline", "steps": [{"type": "gh_action", "cmd": "", "name": "peter-evans/workflow-dispatch", "version": "v1", "shell": "bash"}]}]}
{"id": "54205112_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build -- --prod", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarSource/sonarqube-scan-action", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "54227370_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth activate-service-account --key-file=${{ secrets.GCP_SA_KEY }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud compute scp YOUR_LOCAL_FILES USERNAME@GCE_INSTANCE:/PATH/TO/REMOTE/LOCATION --zone=YOUR_ZONE\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud compute ssh USERNAME@GCE_INSTANCE --zone=YOUR_ZONE --command=\"echo 'Deployment successful'\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "54239566_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "andriip/iib-install-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "iib-command.sh mqsicreatebar -data ./path_to_your_application -b /path_to_output/barfile.bar\niib-command.sh mqsideploy -e integration_server -a barfile.bar\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "54240415_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add build and test commands here\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "tzkhan/approvals-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to create the release here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "542975_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i 's/<add key=\"YourKey\" value=\"YourValue\" \\/>/<add key=\"YourKey\" value=\"NewValue\" \\/>/' path/to/web.config\ngit add path/to/web.config\ngit commit -m \"Automatically update web.config during CI build by GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "54387674_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundler -v", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install --path vendor/bundle", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your deployment commands here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "54416894_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter analyze", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "54561975_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android-actions/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "54589786_0", "jobs": [{"name": "sidecar-job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "kube-actions/setup-kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f sidecar-job.yaml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "54591822_0", "jobs": [{"name": "sonarcloud-analysis", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "5459540_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "easingthemes/ssh-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "54652664_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/login", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "54668801_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "unsplash/pullrequest-feedback-action", "version": "v1", "shell": "bash"}]}]}
{"id": "54689800_0", "jobs": [{"name": "publish", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build YourProjectName.csproj", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish YourProjectName.csproj -c Release -o ./publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/rsync", "version": "v2", "shell": "bash"}]}]}
{"id": "54706728_0", "jobs": [{"name": "filter_commits", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git log --format=\"%H\" --author=\"Author Name\" > commits.txt\ngit checkout main\ngit reset --hard $(git hash-object -w commits.txt)\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/push-to-another-repository", "version": "v1", "shell": "bash"}]}]}
{"id": "54716625_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -NV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane match development", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane beta", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "54753194_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "bmattozzi/setup-ant", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ant clean compile", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "54819907_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/login", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/azure-data-factory-deploy", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "az data factory pipeline create-run --factory-name 'YourDataFactoryName' --name 'YourPipelineName'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "54857931_0", "jobs": [{"name": "trigger_cloud_build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud builds submit --config=path/to/cloudbuild.yaml repo1/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud builds submit --config=path/to/cloudbuild.yaml repo2/", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "54872596_0", "jobs": [{"name": "version", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=VERSION::$(npm version --json)\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ steps.semver.outputs.VERSION }}\" > package.json\nnpm version patch --no-git-tag-version\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Bump version to ${{ steps.bump.outputs.newVersion }}\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v1", "shell": "bash"}]}]}
{"id": "54927999_0", "jobs": [{"name": "automate_jira_workflow", "steps": [{"type": "gh_action", "cmd": "", "name": "atlassian/gajira-create-issue", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "atlassian/jira-issue-comment", "version": "v1", "shell": "bash"}]}]}
{"id": "54940892_0", "jobs": [{"name": "sonarqube", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean verify", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -s \"https://sonarcloud.io/api/qualitygates/project_status?projectKey=<your_project_key>\" | jq .projectStatus.status | grep ERROR", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "54958075_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker login -u _ -p $(oc whoami -t) $(oc registry info --internal)\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "redhat-actions/oc-cli", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "oc project <your-project-name>\noc apply -f <path-to-your-pipeline-yaml>\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "54975830_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean package", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "chef/setup-chef-workstation", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chef-client --local-mode --override-runlist 'recipe[java-app::deploy]' -z", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "54996288_0", "jobs": [{"name": "google_cloud_build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "googlecloudplatform/github-actions/cloud-build", "version": "main", "shell": "bash"}]}]}
{"id": "55126368_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "game-ci/setup-unity", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "unity-editor -version", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "unity-editor -quit -batchmode -projectPath ./ -executeMethod BuildScript.BuildAndroid", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "55185557_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -o- https://api.codemagic.io/bash/download/latest > /tmp/download-codemagic-cli.sh\nchmod +x /tmp/download-codemagic-cli.sh\n/tmp/download-codemagic-cli.sh\nsudo mv codemagic /usr/local/bin/codemagic\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "codemagic test\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "55213050_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "hashicorp/setup-packer", "version": "v1.3.1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "packer build -var 'aws_access_key=${AWS_ACCESS_KEY_ID}' -var 'aws_secret_key=${AWS_SECRET_ACCESS_KEY}' -var 'region=${AWS_REGION}' example.json\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "55230795_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-dev --optimize-autoloader", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/dep deploy production", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "55235609_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "main", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud app deploy --quiet", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "55251206_0", "jobs": [{"name": "update_pull_request", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "marvinpinto/github-action-update-pull-request", "version": "v1", "shell": "bash"}]}]}
{"id": "55256142_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install bundler \nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourApp.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11' -enableCodeCoverage YES\nxcrun xccov view build/Logs/Test/*.xcresult -r . -f xccovjson > coverage.json\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "55279463_0", "jobs": [{"name": "code-coverage", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn package", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn jacoco:report", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "55281976_0", "jobs": [{"name": "generate-changelog", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update && sudo apt-get install git -y", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git fetch --tags\npreviousTag=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))\necho \"::set-output name=tag::$previousTag\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "changelog=$(git log $(echo ${{ steps.previous_tag.outputs.tag }})..HEAD --format='- %s')\necho \"::set-output name=changelog::$changelog\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ steps.changelog.outputs.changelog }}\" > changelog.md", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"<YOUR_EMAIL>\"\ngit config --local user.name \"github-actions\"\ngit add changelog.md\ngit commit -m \"Update changelog [skip ci]\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "55399687_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install bundler\nbundle install\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean build -workspace YourProject.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' -configuration Debug", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "55416131_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nbundle exec pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourWorkspace.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "55422685_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-docker", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t myapp .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.DOCKER_PASSWORD }}\" | docker login -u \"${{ secrets.DOCKER_USERNAME }}\" --password-stdin", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker push myapp", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/k8s-deploy", "version": "v1", "shell": "bash"}]}]}
{"id": "55453326_0", "jobs": [{"name": "sonarqube", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "55502264_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.1.1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud builds submit --config=cloudbuild.yaml --substitutions _STEP=${{ matrix.step }}\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "55505665_0", "jobs": [{"name": "copy-files", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp src/main/resources/bootstrap.yml /path/to/destination/folder/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp src/test/resources/bootstrap.yml /path/to/destination/folder/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Copy bootstrap.yml files\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "55609043_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "brew install cocoapods\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourApp -destination \"platform=iOS Simulator,OS=14.0,name=iPhone 11\" build test", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "brew install cocoapods\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourApp -sdk iphoneos -configuration Release -archivePath $PWD/build/YourApp.xcarchive archive", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath $PWD/build/YourApp.xcarchive -exportOptionsPlist exportOptions.plist -exportPath $PWD/build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wmcinnes/actions-upload-testflight", "version": "v1", "shell": "bash"}]}]}
{"id": "55649052_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mcr.microsoft.com/mssql/server:2019-latest", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install -y mssql-tools", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Replace below with commands to run your SQL scripts for schema updates\nsqlcmd -S localhost -U sa -P ${{ secrets.DB_SA_PASSWORD }} -d YourDatabase -i db_update_script.sql\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "55659524_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# For example, use CocoaPods to install dependencies\ngem install cocoapods\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean build test -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11'\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git status\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "55677280_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud config set project ${{ secrets.GCP_PROJECT_ID }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud builds submit --config=cloudbuild.yaml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "55736016_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "wget https://archive.apache.org/dist/maven/maven-3/3.8.4/binaries/apache-maven-3.8.4-bin.zip\nunzip -qq apache-maven-3.8.4-bin.zip\nexport PATH=$PATH:$RUNNER_WORKSPACE/apache-maven-3.8.4/bin\necho \"Maven installed\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -v", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn help:evaluate", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "55737807_0", "jobs": [{"name": "moveFiles", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir foldername", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mv file1.js file2.js foldername", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"\ngit add .\ngit commit -m \"Move files to folder\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "55758832_0", "jobs": [{"name": "build-and-deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "redhat-actions/oc-login", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "oc whoami", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "oc project ${{ secrets.OPENSHIFT_NAMESPACE }}\noc new-app . --name=my-app\noc expose svc/my-app\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "55771907_0", "jobs": [{"name": "rerun_pipeline", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=tag::$(git describe --tags `git rev-list --tags --max-count=1`)\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peter-evans/trigger-pipeline", "version": "v1", "shell": "bash"}]}]}
{"id": "55828570_0", "jobs": [{"name": "label", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "your-username/custom-labeler-action", "version": "v1", "shell": "bash"}]}]}
{"id": "55830994_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "conda-incubator/setup-miniconda", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "conda create -n myenv python=3.8\nconda activate myenv\nconda install conda-build\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "conda build path/to/your/conda_recipe\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-release-asset", "version": "v1", "shell": "bash"}]}]}
{"id": "55841215_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npx lerna bootstrap\nnpx lerna run build\nnpx lerna run test\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/cloud-build", "version": "main", "shell": "bash"}]}]}
{"id": "55851526_0", "jobs": [{"name": "tag_jar_artifact", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your JAR build commands here\n# For example:\nmvn clean package\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "jar_file=$(find ./target -type f -name \"*.jar\")\njar_version=$(unzip -p $jar_file META-INF/MANIFEST.MF | grep Implementation-Version | awk -F: '{print $2}' | tr -d '[:space:]')\necho \"::set-output name=version::$jar_version\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit tag ${{ steps.jar_version.outputs.version }}\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "55864397_0", "jobs": [{"name": "convert_urls", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php convert_urls.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "56028910_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd PowerAppsSolution\ndotnet build --configuration Release\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/pipelines", "version": "1", "shell": "bash"}]}]}
{"id": "56036216_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/setup-helm", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm upgrade --install my-release ./path/to/chart ${matrix.condition.value}\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "56059144_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bash path/to/script.sh", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "PowerShell/PowerShell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": ".\\path\\to\\script.ps1", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "56066592_0", "jobs": [{"name": "set-build-description", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=description::The build output goes here\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rlespinasse/github-action-gh-api", "version": "v3", "shell": "bash"}]}]}
{"id": "56104583_0", "jobs": [{"name": "update_boards", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global credential.helper store && echo \"https://username:$TOKEN@gmail.com\" > ~/.git-credentials", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=issue_ids::$(git log --pretty=format:%s ${{ github.event.before }}..${{ github.sha }} | grep -o '#[0-9]\\+' | sed 's/#//')\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "github-script", "version": "v4", "shell": "bash"}]}]}
{"id": "56141160_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "einaregilsson/eb-deploy", "version": "v3", "shell": "bash"}]}]}
{"id": "56149395_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "OctopusDeploy/Action", "version": "v2", "shell": "bash"}]}]}
{"id": "56172349_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec [YOUR_COMMAND]", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "56255317_0", "jobs": [{"name": "create_ngrok_tunnel", "steps": [{"type": "gh_action", "cmd": "", "name": "wemake-services/ngrok-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ngrok http 22", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "56363036_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run test:e2e", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "scrutinizer-ci/upload-test-results-action", "version": "v1", "shell": "bash"}]}]}
{"id": "56369932_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build apk", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "56376048_0", "jobs": [{"name": "deployment", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Your deployment script or commands here\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy_approval", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}, {"type": "shell_cmd", "cmd": "allApproved = ${{ fromJson(steps.reviews.outputs.data) }}\necho \"${allApproved}\"\nif [[ $allApproved == \"[]\" ]]; then\n  echo \"No approvals found. Deployment requires manual approval.\"\nelse\n  uniqueApprovers=$(jq -r '.[] | .user.login' <<< \"${allApproved}\" | sort -u)\n  if [[ \"${#uniqueApprovers[@]}\" -eq 1 ]]; then\n    echo \"Deployment approved by: ${uniqueApprovers[0]}. Proceeding with deployment.\"\n  else\n    echo \"Multiple approvers found. Manual approval required.\"\n  fi\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "56383287_0", "jobs": [{"name": "evict-deployments", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "steebchen/kubectl", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt update\nsudo apt install jq -y\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "deployments=$(kubectl get deployments -o json)\necho \"::set-output name=deployments::${deployments}\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "deployments=\"${{ steps.list-deployments.outputs.deployments }}\"\ninactive_deployments=''\ncurrent_time=$(date +%s)\n\nfor row in $(echo \"${deployments}\" | jq -r '.items[] | @base64'); do\n  _jq() {\n    echo ${row} | base64 --decode | jq -r ${1}\n  }\n\n  last_updated=$(_jq '.metadata.creationTimestamp')\n  last_updated_time=$(date --date=\"$last_updated\" +%s)\n  time_diff=$((current_time - last_updated_time))\n\n  if [ $time_diff -gt 86400 ]; then # 86400 seconds = 1 day\n    deployment=$(_jq '.metadata.name')\n    inactive_deployments=\"$inactive_deployments $deployment\"\n  fi\ndone\n\necho \"Evicting inactive deployments: $inactive_deployments\"\nfor deployment in $inactive_deployments; do\n  kubectl delete deployment $deployment\ndone\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "56419241_0", "jobs": [{"name": "doctrine_fixtures", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php bin/console doctrine:fixtures:load --no-interaction", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "56439620_0", "jobs": [{"name": "build-and-deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth activate-service-account --key-file=service-account.json", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud builds submit --tag gcr.io/$PROJECT_ID/my-image\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud deployment-manager deployments create deployment-name --config deployment-config.yaml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "56441446_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.name 'GitHub Actions'\ngit config user.email 'actions@users.noreply.github.com'\ngit checkout -B main\nmv local_folder/* .\ngit add .\ngit commit -m \"Add contents of local folder\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "56469687_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php publish.php ${{ github.ref }}", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "56542500_0", "jobs": [{"name": "build-and-deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run generate", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "aws-amplify/github-actions/deploy", "version": "v0.4.2", "shell": "bash"}]}]}
{"id": "56559235_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec fastlane your_lane_name", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec fastlane deploy_lane_name", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "56588176_0", "jobs": [{"name": "check-build-status", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"The build status is ${{ steps.wait-for-checks.outputs.data }}\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "56626543_0", "jobs": [{"name": "remove-and-push", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git reset HEAD\ngit rm --cached path/to/file1 path/to/file2\ngit status\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'Your Name'\ngit config --global user.email 'your-email@example.com'\ngit commit -m \"Remove specific files from index\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "56626600_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o $(Build.ArtifactStagingDirectory)", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "56629933_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nbundle exec pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourApp.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 11' CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO ONLY_ACTIVE_ARCH=NO -quiet\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -workspace YourApp.xcworkspace -scheme YourScheme -archivePath build/YourApp CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "5665230_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install rsync", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rsync -avz --delete <path_to_local_project_directory> <remote_user>@<server_ip>:<path_to_deploy_directory>", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "56687425_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install -g xml-js", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "XML_CONTENT=$(cat path/to/AndroidManifest.xml)\nVERSION_CODE=$(xml2json <<< $XML_CONTENT | jq -r '.manifest[\"@_android:versionCode\"]')\nNEW_VERSION_CODE=$((VERSION_CODE + 1))\nUPDATED_CONTENT=$(echo $XML_CONTENT | xml fo --nsclean -v | xml ed --update \"/manifest/@android:versionCode\" -v $NEW_VERSION_CODE -)\necho \"$UPDATED_CONTENT\" > path/to/AndroidManifest.xml\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add path/to/AndroidManifest.xml\ngit commit -m \"Update version code\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "56691637_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jakejarvis/s3-sync-action", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "deltaskelta/CloudFront-invalidator-action", "version": "v1.0.2", "shell": "bash"}]}]}
{"id": "56725928_0", "jobs": [{"name": "update_properties", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo 'app.version=1.0.0' > app.properties\ngroovy -e \"def props = new Properties(); props.load(new FileInputStream('app.properties')); props.setProperty('app.version', '1.1.0'); props.store(new FileOutputStream('app.properties'), null);\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add app.properties\ngit commit -m \"Update app version to 1.1.0\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "56768381_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./mvnw clean package", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jvanderl/aws-lambda-deploy", "version": "v0.1", "shell": "bash"}]}]}
{"id": "56792031_0", "jobs": [{"name": "run-script", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-docker", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build . -t my-docker-image", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run my-docker-image bash -c \"<your_script_or_command_here>\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "56853029_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud app deploy app.yaml --stop-previous-version", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud app deploy cron.yaml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "56866533_0", "jobs": [{"name": "argocd-notify-buildkite", "steps": [{"type": "gh_action", "cmd": "", "name": "buildkite/github-action", "version": "v3", "shell": "bash"}]}, {"name": "buildkite-notify-argocd", "steps": [{"type": "shell_cmd", "cmd": "curl -X POST -H \"Authorization: Bearer ${{ secrets.ARGOCD_API_TOKEN }}\" \\\n-H \"Content-Type: application/json\" \\\n--data '{\"name\": \"New Build from Buildkite\", \"source\": \"Buildkite\"}' \\\nhttps://argocd.server/api/notifications\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "56917419_0", "jobs": [{"name": "build-and-deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/login", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Azure/functions-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "az group create --name 'your-resource-group' --location 'your-region'\naz servicebus namespace create --name 'your-namespace' --resource-group 'your-resource-group' --location 'your-region'\naz servicebus queue create --name 'your-queue' --namespace-name 'your-namespace' --resource-group 'your-resource-group'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "56988236_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Azure/setup-helm", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm dependency build path/to/your/main/chart", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "for chart in path/to/your/main/chart/charts/*; do\n  helm install $(basename $chart) $chart\ndone\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "for chart in path/to/your/main/chart/charts/*; do\n  helm upgrade --install $(basename $chart) $chart\ndone\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "57004256_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/setup-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker-compose up -d", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/scp-action", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/ssh-action", "version": "master", "shell": "bash"}]}]}
{"id": "57022045_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth configure-docker\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/app:${{ github.sha }} .\ndocker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/app:${{ github.sha }}\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud container clusters get-credentials my-cluster --zone us-central1-a --project ${{ secrets.GCP_PROJECT_ID }}\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f kubernetes/deployment.yaml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "57024308_0", "jobs": [{"name": "codecov", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourSchemeName -workspace YourWorkspace.xcworkspace -sdk iphonesimulator clean build CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO | xcpretty", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourSchemeName -workspace YourWorkspace.xcworkspace -sdk iphonesimulator test CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO | xcpretty", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -JLsS https://codecov.io/bash | bash -s", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bash <(curl -s https://codecov.io/bash) -f ./path/to/your/code_coverage_file.xml -s ./path/to/your/source_code_directory -t your_codecov_token", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "57043048_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/aks-set-context", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.DOCKERHUB_TOKEN }}\" | docker login --username \"${{ secrets.DOCKERHUB_USERNAME }}\" --password-stdin", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build . -t your-dockerhub-username/your-image-name:latest\ndocker push your-dockerhub-username/your-image-name:latest\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f deployment.yaml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "57100631_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -Ls -o sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.0.2311-linux.zip\nunzip sonar-scanner-cli.zip\nexport PATH=$(pwd)/sonar-scanner-cli-4.6.0.2311-linux/bin:$PATH\nsonar-scanner -Dsonar.projectKey=your_project_key -Dsonar.sources=src\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarqube-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "57108331_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud compute config-ssh", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ssh -i $HOME/.ssh/google_compute_engine <windows_username>@<windows_instance_ip> \"cd C:\\path\\to\\your\\repo && git pull\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "57128267_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "digitalocean/action-doctl", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl set image deployment/<your-deployment-name> <your-container-name>=<your-image-name>:${GITHUB_SHA}\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "57165829_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd ./your-ssdt-project-directory\nmsbuild /t:build /p:Configuration=Release\nmsbuild /t:publish /p:Configuration=Release\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "github-script", "version": "v4", "shell": "bash"}]}]}
{"id": "57166444_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/SqlBuildTools/setup", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /t:build /p:PublishProfile=YOUR_PUBLISH_PROFILE_NAME.pubxml /p:SqlPublishProfilePath=YOUR_PUBLISH_PROFILE_PATH /p:SqlPublishProfilePublishMethod=Script /p:SqlPublishProfileUpdateDatabase=True /p:UpdateDatabase=True /p:SqlPublishProfileRemoveConnections=true /p:SqlPublishProfilePassword=YOUR_DB_PASSWORD\n\n# Add any post-build or deployment steps here...\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "57168488_0", "jobs": [{"name": "cypress-run", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "cypress-io/cache-action", "version": "2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "cypress-io/github-action", "version": "v2", "shell": "bash"}]}]}
{"id": "57289366_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane spaceship authenticate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane gym", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "57297176_0", "jobs": [{"name": "download-dsyms", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane run download_dsyms", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "57332101_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane build_and_publish_to_app_center", "name": "", "version": "", "shell": "bash"}]}, {"name": "launch", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Replace the following command with the script to launch the app\necho \"Launching the app after build and publish\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "57357797_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/setup-docker", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t data-processor .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run -v ${{ github.workspace }}/data:/data data-processor python process_data.py /data/raw_data", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "57361043_0", "jobs": [{"name": "checkout-new-branch", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "fastlane/fastlane", "version": "2.6.4", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b new-branch\ngit push origin new-branch\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "57400904_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "amine7533/s3-deploy", "version": "v1", "shell": "bash"}]}]}
{"id": "57418610_0", "jobs": [{"name": "connect-google-cloud-shell", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud container clusters get-credentials <GKE_CLUSTER_NAME> --zone <GKE_CLUSTER_ZONE>\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl get nodes", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "57419363_0", "jobs": [{"name": "build-and-push-image", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "redhat-actions/oc-login", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker login quay.io -u ${{ secrets.QUAY_USERNAME }} -p ${{ secrets.QUAY_PASSWORD }}\ndocker build -t quay.io/${{ secrets.QUAY_USERNAME }}/your-image-name .\ndocker push quay.io/${{ secrets.QUAY_USERNAME }}/your-image-name\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "57443216_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "steebchen/kubectl", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ${{ secrets.KUBE_CONFIG_DATA }} | base64 -d > kubeconfig\nmkdir -p $HOME/.kube && mv kubeconfig $HOME/.kube/config\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f path/to/your/kubernetes/deployment.yaml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "57488679_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter analyze", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build apk --release", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "r0adkll/upload-google-play", "version": "v1", "shell": "bash"}]}]}
{"id": "57503578_0", "jobs": [{"name": "auto_pull_request", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b auto-pr-branch", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Automated pull request content\" >> automated-file.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add automated-file.txt\ngit commit -m \"Automated pull request\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peter-evans/create-pull-request", "version": "v3", "shell": "bash"}]}]}
{"id": "57602425_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy_to_heroku", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git push https://heroku:$HEROKU_API_KEY@git.heroku.com/YOUR_HEROKU_APP_NAME.git HEAD:main\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy_to_gh_pages", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.email \"actions@github.com\"\ngit config user.name \"GitHub Actions\"\nnpm run deploy\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "run_migrations", "steps": [{"type": "gh_action", "cmd": "", "name": "easypi/mysql", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run migrate\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "5764037_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require squizlabs/php_codesniffer", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./vendor/bin/phpcs --standard=PSR2 .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require phpmd/phpmd", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./vendor/bin/phpmd src xml unusedcode", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "57683392_0", "jobs": [{"name": "detect_ruby_default", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pip install -r requirements.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your detection logic here\ndefault_ruby_version=$(ruby -v)\n\nif [ $(python -c \"import django; print(django.get_version())\") ]; then\n  echo \"Django project detected.\"\n  \n  echo \"Detected Ruby default version: $default_ruby_version\"\nelse\n  echo \"Not a Django project or Django not installed.\"\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "57762519_0", "jobs": [{"name": "branching-and-merging", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b feature-branch\ngit push origin feature-branch\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Adding feature X\"\ngit push origin feature-branch\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "pullreminders/merge-me-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout master\ngit branch -D feature-branch\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "57791810_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build apk", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "release_to_appcenter", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "hnakamur/upload-appcenter-action", "version": "v1", "shell": "bash"}]}]}
{"id": "57808152_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter analyze", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build apk", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "57916983_0", "jobs": [{"name": "security_check", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "github/codeql-action/codeql-analysis", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p ${{github.workspace}}/results\nmv ${{github.workspace}}/codeql-bundles/codeql-database ${{github.workspace}}/results/\nmv ${{github.workspace}}/codeql-bundles/codeql-bundle.zip ${{github.workspace}}/results/\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "57960912_0", "jobs": [{"name": "create_admin_theme", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p vendor/your-theme\n# Add your theme files to the vendor/your-theme directory\n# For example:\n# cp -r path/to/theme-files vendor/your-theme\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add vendor/your-theme\ngit commit -m \"Add Magento 2 Admin Theme\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "57965588_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "57998312_0", "jobs": [{"name": "create-trigger", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud alpha builds triggers create github \\\n  --repo-name=[YOUR_REPO_NAME] \\\n  --repo-owner=[YOUR_REPO_OWNER] \\\n  --branch-pattern=\"main\" \\\n  --build-config=\"cloudbuild.yaml\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58061430_0", "jobs": [{"name": "run_powershell_script", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": ".\\path\\to\\your\\script.ps1", "name": "", "version": "", "shell": "pwsh"}]}]}
{"id": "58100904_0", "jobs": [{"name": "sast_scan", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "github/codeql-action/setup", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "github/codeql-action/analyze", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "github/codeql-action/upload-sarif", "version": "v1", "shell": "bash"}]}]}
{"id": "58115996_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.DOCKER_PASSWORD }}\" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin ${{ secrets.DOCKER_REGISTRY }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "COMMIT_HASH=$(echo $GITHUB_SHA | cut -c1-7) # Get the first 7 characters of the Git commit hash\nIMAGE_NAME=my-docker-image\ndocker build -t ${{ secrets.DOCKER_REGISTRY }}/$IMAGE_NAME:$COMMIT_HASH .\ndocker push ${{ secrets.DOCKER_REGISTRY }}/$IMAGE_NAME:$COMMIT_HASH\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/k8s-image", "version": "v1", "shell": "bash"}]}]}
{"id": "58119657_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/setup-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t container-monitoring .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run -d container-monitoring", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker logs $(docker ps -q --filter ancestor=container-monitoring) --follow\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58152975_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "aws-actions/aws-codebuild-run-build", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "aws-actions/aws-codedeploy-appspec-run-task", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "aws-actions/aws-codepipeline-start-pipeline-execution", "version": "v1", "shell": "bash"}]}]}
{"id": "58182869_0", "jobs": [{"name": "create-webhook", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=PAYLOAD_URL::http://your-webhook-url\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rtCamp/github-create-comment-webhook", "version": "v1", "shell": "bash"}]}]}
{"id": "58189966_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir jdk", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mv $RUNNER_TOOL_CACHE/Java/* jdk/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Java Home: $JAVA_HOME\"\njava -version\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58200400_0", "jobs": [{"name": "send-slack-notification", "steps": [{"type": "gh_action", "cmd": "", "name": "rtCamp/action-slack-notify", "version": "v2.0", "shell": "bash"}]}]}
{"id": "58229687_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install\nbundle exec pod install\ncarthage bootstrap --platform iOS\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58241262_0", "jobs": [{"name": "comment-on-pull-request", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=diff::$(curl -s -H 'Accept: application/vnd.github.v3.diff' ${{ steps.event.inputs.github-api-url }}/pulls/${{ github.event.pull_request.number }}/files)\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "diff_output=$(echo \"$PR_DIFF\" | grep -E \"\\.exe|\\.jpg|\\.png|\\.zip|\\.gz\")  # Adjust file extensions as needed\nif [ -n \"$diff_output\" ]; then\n  comment_url=\"$(jq -r '.comments_url' <<< ${{ steps.event.outputs.event }})\"\n  comment_body=\":warning: **Warning**: This pull request contains changes to binary files that are not shown in the diff.\\n\\nPlease review the changes carefully.\"\n  curl -s -H \"Authorization: token ${{ secrets.GITHUB_TOKEN }}\" -X POST -d \"{\\\"body\\\": \\\"$comment_body\\\"}\" $comment_url\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58257891_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update sudo apt-get install -y build-essential libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build cd build cmake .. make", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58291620_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php bin/magento setup:static-content:deploy -f", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.name \"GitHub Actions\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git commit -m \"Deploy CSS updates\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git push", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58308626_0", "jobs": [{"name": "update_submodules", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git submodule update --init --recursive\ngit submodule foreach git pull origin master\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"your-email@example.com\"\ngit config --local user.name \"Your Name\"\ngit add .\ngit commit -m \"Update submodules\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "58311847_0", "jobs": [{"name": "update-package-json", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "node -e '\nconst fs = require(\"fs\");\nconst packageJson = require(\"./package.json\");\n\npackageJson.version = \"1.0.0\"; // Update the version as needed\n\nfs.writeFileSync(\"./package.json\", JSON.stringify(packageJson, null, 2));\nconsole.log(\"Updated package.json file successfully.\");\n'\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Update package.json file\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "58318733_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -O https://tools.nanobox.io/cli/linux/amd64/nanobox\nchmod +x nanobox\nsudo mv nanobox /usr/local/bin/\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nanobox login\nnanobox deploy\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58334180_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-ssdt", "version": "v1.0.1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /t:BuildAndPublish /p:TargetConnectionString=\"your_connection_string\" /p:Configuration=Release\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "58342284_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "windows-toolkit/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=Release", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58348225_0", "jobs": [{"name": "combination_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir new_folder\ncp -r backend/* new_folder/\ncp -r frontend/* new_folder/\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd new_folder\nrm -rf .git\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"github-actions[bot]@users.noreply.github.com\"\ngit config --global user.name \"github-actions[bot]\"\ngit add .\ngit commit -m \"Combine backend and frontend folders\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "58350578_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/setup-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build . -t my-docker-image", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run my-docker-image", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58360374_0", "jobs": [{"name": "order_collection", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Run the script or plugin command to manually order a Jekyll collection\n# For example using `jekyll-ordered` plugin\n# Replace `your_collection_name` with the actual collection name\nbundle exec jekyll collection order your_collection_name\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n\ngit add .\ngit commit -m \"Manually ordered Jekyll collection\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58379262_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wzieba/Firebase-Test-Lab-Github-Action", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wzieba/Firebase-Test-Lab-Github-Action", "version": "v1", "shell": "bash"}]}]}
{"id": "58430182_0", "jobs": [{"name": "install-packages", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "npm-authenticate", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "yarn install", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58441207_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -NV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec fastlane your_lane_name", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58465833_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/setup-graalvm", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gu install native-image", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "native-image -jar path/to/your-jar-file.jar", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "58473097_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "webservices/mariadb", "version": "v3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -h $DB_HOST -u $DB_USER -p$DB_PASSWORD $DB_DATABASE -e \"CALL your_stored_procedure_1();\"\nmysql -h $DB_HOST -u $DB_USER -p$DB_PASSWORD $DB_DATABASE -e \"CALL your_stored_procedure_2();\"\n# Implement caching logic here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58489875_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wei/jar-deploy", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ls /path/to/deploy", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58491535_0", "jobs": [{"name": "run-script-and-output-result", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./path/to/your/script.sh", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=result::$(cat ${{ steps.script-output.path }})\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Script result: ${{ steps.script-output.outputs.result }}\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58501588_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "brew install swiftlint\nbundle install\nbundle exec pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild build -scheme YourSchemeName -workspace YourWorkspace.xcworkspace -configuration Release | xcpretty", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -scheme YourSchemeName -workspace YourWorkspace.xcworkspace -configuration Release | xcpretty", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58513349_0", "jobs": [{"name": "split_projects", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Specify the directory names of the projects to be split\nPROJECT1_DIR=\"project1\"\nPROJECT2_DIR=\"project2\"\n\n# Create directories for the new projects\nmkdir $PROJECT1_DIR\nmkdir $PROJECT2_DIR\n\n# Copy files to the respective project directories\ngit mv <list of files for project 1> $PROJECT1_DIR/\ngit mv <list of files for project 2> $PROJECT2_DIR/\n\n# Commit the changes\ngit add .\ngit commit -m \"Split projects\"\ngit push\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "5861528_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\nmake\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd build\nctest --output-on-failure\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd build\ncmake -DGCOV=ON ..\nmake\nmake coverage\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "58621271_0", "jobs": [{"name": "check_templates", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nyarn install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails assets:precompile\nbundle exec erb-lint app/views/**/*.html.erb\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58622014_0", "jobs": [{"name": "laravel_pipeline", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-ansi --no-interaction --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp .env.example .env", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan key:generate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install && npm run production", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rsync -avz --exclude '.env' --exclude 'node_modules' $GITHUB_WORKSPACE/ user@example.com:/path/to/your/laravel/project\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58628798_0", "jobs": [{"name": "phpunit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/github-script", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit --include-path=path/to/custom-class", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58630405_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install -g firebase-tools", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "firebase login:ci", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Set the timeout in seconds\nexport TIMEOUT=300\necho \"::set-env name=TIMEOUT::$TIMEOUT\"\n\nfirebase test:android run \\\n  --type instrumentation \\\n  --app path_to_your_apk_file \\\n  --device model=Pixel2,version=29 \\\n  --timeout $TIMEOUTs\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58675068_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud builds submit --tag gcr.io/$GOOGLE_CLOUD_PROJECT/<your-app-name>\ngcloud beta run deploy <your-app-name> --image gcr.io/$GOOGLE_CLOUD_PROJECT/<your-app-name> --vpc-connector YOUR_VPC_CONNECTOR_NAME\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58728531_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm ci", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "bahmutov/parallel-jest", "version": "v1", "shell": "bash"}]}]}
{"id": "58737198_0", "jobs": [{"name": "build_app1", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild build -project path_to_app1_project.xcodeproj -scheme App1", "name": "", "version": "", "shell": "bash"}]}, {"name": "build_app2", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild build -project path_to_app2_project.xcodeproj -scheme App2", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58767677_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "extenda/actions/setup-kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl config set-context $(kubectl config current-context) --namespace=${{ secrets.KUBE_NAMESPACE }}\nkubectl config view\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f kubernetes/deployment.yaml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58785448_0", "jobs": [{"name": "merge", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "alex-page/merge-pull-request-action", "version": "v1", "shell": "bash"}]}]}
{"id": "58789535_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "derencius/xvfb", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58825421_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleDebug test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/appcenter-action", "version": "v2", "shell": "bash"}]}]}
{"id": "58861573_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easingthemes/ [email protected]", "version": null, "shell": "bash"}]}]}
{"id": "58883811_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nbundle exec pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourWorkspaceName.xcworkspace -scheme YourSchemeName -destination 'platform=iOS Simulator,name=iPhone 11' | xcpretty", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -workspace YourWorkspaceName.xcworkspace -scheme YourSchemeName -archivePath build/YourApp.xcarchive", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath build/YourApp.xcarchive -exportPath build -exportOptionsPlist ExportOptions.plist", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wzieba/Fastlane-iOS-Testflight-Deploy", "version": "v1", "shell": "bash"}]}]}
{"id": "58884408_0", "jobs": [{"name": "add-binary-to-path", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-docker", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t my-custom-image .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "container_id=$(docker create my-custom-image)\ndocker cp $container_id:/path/to/binary .\ndocker rm $container_id\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::add-path::$(pwd)\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"$PATH\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58884891_0", "jobs": [{"name": "remove_large_files", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "for file in $(git diff --name-only HEAD^); do\n  file_size=$(wc -c <\"$file\")\n  if [ $file_size -gt 1048576 ]; then # Define the file size limit in bytes (1 MB in this case)\n    echo \"File $file exceeds size limit. Removing...\"\n    git rm --cached \"$file\"\n  fi\ndone\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\n\ngit commit -am \"Remove large files exceeding size limit\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "58934735_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ddev start", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ddev stop", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58946340_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' | xcpretty\ntest_count=$(grep -E 'Test Case' build/reports/actions_testSum.result | wc -l)\necho \"Number of test cases: $test_count\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "58975112_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter analyze", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build apk", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "59007308_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "zip -r build.zip build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "s3-upload/action", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/ssh-action", "version": "master", "shell": "bash"}]}]}
{"id": "59018772_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-interaction", "name": "", "version": "", "shell": "bash"}]}, {"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-interaction", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-interaction", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Commands to deploy Laravel project to server\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "5907847_0", "jobs": [{"name": "phpunit-test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Start SeleniumRC server\njava -jar selenium-server-standalone.jar &\nsleep 5\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit --log-junit report.xml", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v3", "shell": "bash"}]}]}
{"id": "59091575_0", "jobs": [{"name": "rerun-job", "steps": [{"type": "gh_action", "cmd": "", "name": "montudor/action-re-run-job", "version": "v1", "shell": "bash"}]}]}
{"id": "59112001_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "reactivecircus/setup-android-emulator", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chmod +x gradlew\n./gradlew assembleDebug assembleDebugAndroidTest\n./gradlew connectedDebugAndroidTest\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew connectedDebugAndroidTest || ./gradlew connectedDebugAndroidTest\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "59178635_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane release", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "59239768_0", "jobs": [{"name": "sync", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.name 'Your Name'\ngit config user.email 'youremail@example.com'\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git pull", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "eskatos/setup-android-emulator", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleDebug", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit status\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "59240304_0", "jobs": [{"name": "install-msi", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "joshuaavalon/windows-package-installer", "version": "v1", "shell": "bash"}]}]}
{"id": "59250786_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Azure/setup-helm", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Azure/setup-kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm upgrade --install my-release ./path/to/helm/chart\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl get all", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "59261296_0", "jobs": [{"name": "build-and-deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/login", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Azure/logicapps", "version": "1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Azure/functions-action", "version": "v1", "shell": "bash"}]}]}
{"id": "59263669_0", "jobs": [{"name": "create-function", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo 'function exampleFunction() { console.log(\"Hello, GitHub!\"); }' >> path/to/your/file.js\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add path/to/your/file.js\ngit commit -m \"Add example function\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "59268810_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build -- --localize", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-nginx", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nginx -g 'daemon off;'", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "service nginx status", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "59344869_0", "jobs": [{"name": "render_task_definition", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "some-github-org/render-ecs-task-definition-action", "version": "v1", "shell": "bash"}]}]}
{"id": "59353589_0", "jobs": [{"name": "generate_ipa", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -workspace YourWorkspace.xcworkspace -scheme YourScheme -archivePath build/YourApp.xcarchive", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath build/YourApp.xcarchive -exportPath build -exportOptionsPlist exportOptions.plist", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mv build/YourApp.ipa build/NewApp.ipa", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "59427068_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "xu-cheng/latex-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pdflatex your-main-latex-file.tex", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "59460276_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "main", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"your_secret_variable: ${{ secrets.YOUR_SECRET }}\" > $APP_YML_PATH\ncat $APP_YML_PATH\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud app deploy ${{ env.APP_YML_PATH }} --version=latest", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "59488945_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Pull Request Approved\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jenkinsci/github-branch-source-plugin", "version": "2.10.0", "shell": "bash"}]}]}
{"id": "59499899_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build -- --prod", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "einaregilsson/beanstalk-deploy", "version": "v1", "shell": "bash"}]}]}
{"id": "59624557_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "set -o pipefail && \\\nxcodebuild test -workspace YourPlaygroundWorkspace.xcworkspace -scheme YourPlaygroundScheme -destination 'platform=macOS' | xcpretty\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "59647104_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "59652426_0", "jobs": [{"name": "diagnose", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-docker", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t blueocean-diagnosis .\ndocker run blueocean-diagnosis\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Checking network configuration\"\ndocker network inspect bridge\necho \"Checking Docker container logs\"\ndocker logs $(docker ps -q)\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "59666594_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.3.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth configure-docker -q", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "packer validate your-packer-template.json\npacker build your-packer-template.json\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud compute images create your-image-name --source-uri=your-image-source-uri --project=your-project-id\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "59701790_0", "jobs": [{"name": "save_dependencies", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p archive\ncp -R ~/.pub-cache archive\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p flutter_project/.pub-cache\ncp -R archive/.pub-cache/flutter/.pub-cache/* flutter_project/.pub-cache/\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"github-actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add flutter_project/.pub-cache\ngit commit -m \"Add 3rd party dependencies\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "59703813_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm ci", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rtCamp/action-slack-notify", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./deploy.sh", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "59734742_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B verify --file pom.xml", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "59737887_0", "jobs": [{"name": "sonarqube", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B verify", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn jacoco:report", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn sonar:sonar", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "github/super-linter", "version": "v4", "shell": "bash"}]}]}
{"id": "59847947_0", "jobs": [{"name": "update-build-status", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "extenda/actions-check-pull-request-after-merge", "version": "v1", "shell": "bash"}]}]}
{"id": "59848113_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "swift", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "swift build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "swift test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "59859194_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane your_lane_name", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "59867137_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "gr2m/create-or-update-comment-action", "version": "v1", "shell": "bash"}]}]}
{"id": "59888473_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jwalton/github-action-check-branch-updated", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Commit range is ${{ steps.commit-range.outputs.commit_range }}\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "5988928_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "brew update\nbrew install ant\ncomposer install\nnpm install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require phpundercontrol/phpundercontrol\nvendor/bin/phpuc\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "59903335_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker://multiarch/qemu-user-static", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\nmake\n./run_tests\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Set up and trigger manual intervention steps\necho \"Hardware tests require manual intervention. Please follow the instructions in the README.md file.\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "technote-space/check-action", "version": "v2", "shell": "bash"}]}]}
{"id": "59941981_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easingthemes/ssh-deploy", "version": "v2.0.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ssh -o StrictHostKeyChecking=no user@hostname \"cd /path/to/deployment/directory && pm2 start app.js\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "59942860_0", "jobs": [{"name": "add_repository_subdirectory", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clone <URL_OF_SUBDIRECTORY_REPOSITORY> subdirectory-repo", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mv subdirectory-repo/* .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.email \"github-actions[bot]@users.noreply.github.com\"\ngit config user.name \"github-actions[bot]\"\ngit add .\ngit commit -m \"Add subdirectory repo contents\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "59952177_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B package --file pom.xml", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "v0.2.1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud run deploy <your-service-name> --image gcr.io/<your-project-id>/<your-image-name>:latest --platform managed --region <your-region>", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "59974515_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan migrate --env=testing --database=mysql --force", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "60019053_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "conda-incubator/setup-miniconda", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "conda install --file requirements.txt\nconda install -c conda-forge <additional-packages>\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python your_script.py", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "60024694_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "60064293_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/setup-kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ${{ secrets.KUBE_CONFIG_DATA }} | base64 --decode > kubeconfig\nmv kubeconfig $HOME/.kube/config\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Install `spin` CLI\nwget https://github.com/spinnaker/spin/releases/latest/download/spin-linux-amd64\nsudo install spin-linux-amd64 /usr/local/bin/spin\n\n# Authenticate with Spinnaker\nexport SPINNAKER_API=\"https://spinnaker-api.example.com\"\nexport SPINNAKER_USERNAME=\"${{ secrets.SPINNAKER_USERNAME }}\"\nexport SPINNAKER_PASSWORD=\"${{ secrets.SPINNAKER_PASSWORD }}\"\nspin application save myApp\nspin pipeline save myPipeline --file pipeline.json\n\n# Trigger Spinnaker deployment\nspin pipeline execute myApp myPipeline --wait\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "60085388_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -project YourProject.xcodeproj -scheme YourScheme -configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcrun altool --upload-app -f path_to_app.app -u \"Your Apple ID\" -p \"App Specific Password\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "60091598_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nanovms/ghaction-chrome-headless", "version": "main", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Xvfb :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "export DISPLAY=:99\nmvn clean test -Parquillian-chrome\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "60133485_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ryanheise/setup-dart", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dart pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dart run build_runner test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "60138738_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o publish/\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "aadhoc/ftp-deploy-action", "version": "v3", "shell": "bash"}]}]}
{"id": "60158323_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "main", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth activate-service-account --key-file=<(echo $GCLOUD_AUTH)", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud functions deploy YOUR_FUNCTION_NAME --source=PATH_TO_YOUR_FUNCTION_CODE --region=us-central1 --entry-point=YOUR_ENTRY_FUNCTION --runtime=nodejs16 --env-vars-file=development.env", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud functions deploy YOUR_FUNCTION_NAME --source=PATH_TO_YOUR_FUNCTION_CODE --region=us-central1 --entry-point=YOUR_ENTRY_FUNCTION --runtime=nodejs16 --env-vars-file=production.env", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "60223940_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Your Dockerfile content goes here\" > Dockerfile", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"github-actions[bot]@users.noreply.github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add Dockerfile\ngit commit -m \"Auto-generated Dockerfile\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "60249818_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "r0adkll/upload-google-play", "version": "v1", "shell": "bash"}]}]}
{"id": "60258638_0", "jobs": [{"name": "recover_files", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ls -a lost+found/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir recovery", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mv ./lost+found/* ./recovery/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add recovery/\ngit commit -m \"Recover files from lost+found folder\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "60265110_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/setup-kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -sLO https://github.com/argoproj/argo/releases/latest/download/argo-linux-amd64.gz\ngunzip argo-linux-amd64.gz\nchmod +x argo-linux-amd64\nsudo mv ./argo-linux-amd64 /usr/local/bin/argo\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"$KUBE_CONFIG\" > ./config", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "argo login\nargo submit microservices.yaml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "60334661_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wget https://github.com/bcit-ci/CodeIgniter/archive/3.1.11.zip\nunzip 3.1.11.zip\nmv CodeIgniter-3.1.11 application\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"<?php\" > application/config/database.php\necho \"\\$active_group = 'default';\" >> application/config/database.php\necho \"\\$query_builder = TRUE;\" >> application/config/database.php\necho \"\\$db['default']['hostname'] = getenv('DB_HOST');\" >> application/config/database.php\necho \"\\$db['default']['username'] = getenv('DB_USER');\" >> application/config/database.php\necho \"\\$db['default']['password'] = getenv('DB_PASSWORD');\" >> application/config/database.php\necho \"\\$db['default']['database'] = getenv('DB_NAME');\" >> application/config/database.php\necho \"\\$db['default']['dbdriver'] = 'sqlsrv';\" >> application/config/database.php\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "60362121_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler && bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec --format documentation\nCOVERAGE=true bundle exec rspec\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "coverallsapp/github-action", "version": "master", "shell": "bash"}]}]}
{"id": "60429743_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir extracted-files\ntar -xzf ${{ runner.workspace }}/<artifact-name>.zip -C extracted-files\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "60435357_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build /p:Configuration=Debug", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "60493958_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter test test_driver/app_test.dart", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "60502780_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build -c Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o ./publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nwtgck/actions-netlify", "version": "v1", "shell": "bash"}]}]}
{"id": "60504149_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "$version = [System.Diagnostics.FileVersionInfo]::GetVersionInfo('path/to/your/assembly.dll').FileVersion\necho \"::set-output name=version::$version\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet pack -c Release -p:PackageVersion=${{ steps.extract_version.outputs.version }} --output ./path/to/output/directory\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nuget/publish", "version": "v1", "shell": "bash"}]}]}
{"id": "60537030_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "some-github-app-service/action", "version": null, "shell": "bash"}]}]}
{"id": "60544181_0", "jobs": [{"name": "duplicate_check_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": ".github/workflows/snippets/duplicate-check.yml", "version": null, "shell": "bash"}]}]}
{"id": "60598217_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec fastlane [lane_name]", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "60674702_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "marvinpinto/action-pr-status", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "status=$INPUT_STATE\nif [ $status != \"success\" ]; then\n  echo \"::error::Status check failed: $status\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "60683476_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "tekartik/setup-dart", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dart --version", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dart path/to/your/script.dart", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "60706255_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-rust", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cargo install mdbook --vers \"^0.4\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mdbook build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "60735334_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "lukka/get-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -B build .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd build && ctest -V", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "60742685_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn package", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jvzantvoort/actions-warning-ng", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v2", "shell": "bash"}]}]}
{"id": "60747659_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "bazelbuild/bazel", "version": "3.3.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bazel test //path/to/tests/...", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [ $? -eq 0 ]; then\n  echo \"Tests passed successfully\"\nelse\n  echo \"Tests failed\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "60772886_0", "jobs": [{"name": "add-to-project-board", "steps": [{"type": "gh_action", "cmd": "", "name": "Decathlon/add-pr-to-project-board", "version": "v1", "shell": "bash"}]}]}
{"id": "60789661_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "game-ci/setup-unity", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install -y zip\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "unity-editor -quit -batchMode -projectPath $GITHUB_WORKSPACE/path_to_unity_project -executeMethod BuildScript.Build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir $GITHUB_WORKSPACE/Builds\nmv $GITHUB_WORKSPACE/path_to_builds $GITHUB_WORKSPACE/Builds/project_build\nzip -r $GITHUB_WORKSPACE/Builds/project_build.zip $GITHUB_WORKSPACE/Project_Build\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "EndBug/add-and-commit", "version": "v7", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "EndBug/push-pull-request", "version": "v2", "shell": "bash"}]}]}
{"id": "60807821_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails db:setup RAILS_ENV=test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails test\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "60822893_0", "jobs": [{"name": "check-for-updates", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your script here to check for updates in JFrog Artifactory\n# You can use JFrog CLI, REST API, or any other method to check for updates\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "iluwatar/github-repo-size", "version": "master", "shell": "bash"}]}]}
{"id": "60827589_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "klocwork/kw-actions/setup", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "make\nkwbuildproject --url http://<Klocwork_Server>:8080 --tables-directory kwinject-out kwinject make\nkwcheck --url http://<Klocwork_Server>:8080 --project myproject\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "60861902_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-ant", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ant", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add the commands to deploy the plugin to IBM Content Navigator here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "60873580_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ruby path/to/your/script.rb", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "60910770_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python -m pip install --upgrade pip\npip install -r requirements.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "coverage run -m pytest\ncoverage xml\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "coverallsapp/github-action", "version": "master", "shell": "bash"}]}]}
{"id": "60952438_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "swift", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "swift package resolve", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "swift build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "swift test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "60972491_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.1.2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud container clusters get-credentials <GKE_CLUSTER_NAME> --zone <ZONE> --project ${{ secrets.GCP_PROJECT_ID }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/<IMAGE_NAME> .\ndocker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/<IMAGE_NAME>\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f deployment.yaml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "61048334_0", "jobs": [{"name": "setup-privileges", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-pwsh", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "$acl = Get-Acl \"C:\\path\\to\\your\\folder\"\n$ntfsRule = New-Object System.Security.AccessControl.FileSystemAccessRule(\"NT AUTHORITY\\NETWORK SERVICE\",\"FullControl\",\"Allow\")\n$acl.AddAccessRule($ntfsRule)\nSet-Acl \"C:\\path\\to\\your\\folder\" $acl\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "61060647_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nbundle exec jekyll build\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r ${{ github.workspace }}/jekyll-assets _site/assets # Update the destination as per your Jekyll asset path\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Deploy Jekyll assets\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "61062801_0", "jobs": [{"name": "run_ruby_process", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ruby your_script.rb", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "61070105_0", "jobs": [{"name": "createPullRequest", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b auto-pr-branch", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Add your changes here\" >> example.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Auto-generated changes\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peter-evans/create-pull-request", "version": "v3", "shell": "bash"}]}]}
{"id": "61095291_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/phpunit/phpunit/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "61096795_0", "jobs": [{"name": "update_data_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler jekyll", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your script here to update YAML data in your Jekyll theme\n# For example, you can use sed to replace existing YAML data with new data\nsed -i 's#old_yaml_data#new_yaml_data#g' path_to_your_file.yml\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec jekyll build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "JamesIves/github-pages-deploy-action", "version": "3.7.1", "shell": "bash"}]}]}
{"id": "61096865_0", "jobs": [{"name": "synchronize", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/lock", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Insert your pipeline stage commands here\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/lock", "version": "v2", "shell": "bash"}]}]}
{"id": "61184613_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build YourSolution.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish Project1/Project1.csproj -c Release -o ./publish/Project1", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish Project2/Project2.csproj -c Release -o ./publish/Project2", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "61204543_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/mssql-scripter/setup-ms-sql-tool", "version": "v0.2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Specify the SQL Server connection details\nexport SERVER=<server_name>\nexport DATABASE=<database_name>\nexport USERNAME=<username>\nexport PASSWORD=<password>\n\n# Download the DACPAC file if not already present\n# For example, you can use GitHub API to download from a specific release\n# curl -OL https://api.github.com/repos/<owner>/<repo>/releases/assets/<asset_id>\n\n# Register the DACPAC file\ndacpac_file='<path_to_dacpac_file>'\n\n# Deploy the DACPAC file to the specified schema\nsqlpackage /a:Publish /sf:$dacpac_file /tsn:$SERVER /tdn:$DATABASE /tu:$USERNAME /tp:$PASSWORD /p:AdditionalDeploymentContributorArguments=\"/p:ExcludeObjectTypes=Logins;Users;RoleMembership;Permissions\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "61263575_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "6128309_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "eval $(ssh-agent -s)\nssh-add <(echo \"$SSH_PRIVATE_KEY\")\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\nnpm install\nnpm run build\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ssh -i ${{ secrets.SSH_PRIVATE_KEY }} user@cloud9-server.com \"cd /path/to/project && git pull origin main && npm install && npm run build\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "JasonEtco/create-or-update-comment", "version": "v1", "shell": "bash"}]}]}
{"id": "61290397_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nbundle exec pod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean build -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,OS=latest' CODE_SIGN_STYLE=Manual CODE_SIGN_IDENTITY=\"iPhone Developer\" PROVISIONING_PROFILE=\"<your_provisioning_profile_uuid>\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -project YourProject.xcodeproj -scheme YourScheme -archivePath build/YourProject.xcarchive CODE_SIGN_STYLE=Manual CODE_SIGN_IDENTITY=\"iPhone Developer\" PROVISIONING_PROFILE=\"<your_provisioning_profile_uuid>\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath build/YourProject.xcarchive -exportPath build -exportOptionsPlist ExportOptions.plist CODE_SIGN_STYLE=Manual CODE_SIGN_IDENTITY=\"iPhone Developer\" PROVISIONING_PROFILE=\"<your_provisioning_profile_uuid>\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "61299948_0", "jobs": [{"name": "push-files", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'Your Name'\ngit config --global user.email 'youremail@example.com'\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Add your files here\" > file.txt\ngit add file.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git commit -m 'Add new file directly via GitHub Actions'\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "61331532_0", "jobs": [{"name": "upload-file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "OctopusDeploy/Octo-Action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "octo push --package-file ./path/to/your/file.ext --server \"https://your-octopus-server-url\" --apiKey $OCTO_API_KEY\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "copy-file-to-target", "steps": [{"type": "shell_cmd", "cmd": "scp path/to/your/file.ext user@target-machine:/path/on/target-machine\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "61333565_0", "jobs": [{"name": "build-and-deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "steebchen/kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl config set-context kubeflow --namespace=kubeflow", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "export KUBEFLOW_USERNAME=${{ secrets.KUBEFLOW_USERNAME }}\nexport KUBEFLOW_PASSWORD=${{ secrets.KUBEFLOW_PASSWORD }}\n\n# Execute your Kubeflow ContainerOp command here with the credentials\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "61384130_0", "jobs": [{"name": "sonarqube", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "6142376_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}, {"name": "lint", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require squizlabs/php_codesniffer --dev\nvendor/bin/phpcs --standard=PSR12 .\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "validate", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require phpstan/phpstan\nvendor/bin/phpstan analyse\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "61444542_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ${RAILS_MASTER_KEY} | base64 --decode > config/master.key\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails db:migrate\nbundle exec rails assets:precompile\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "61447350_0", "jobs": [{"name": "auto-pull", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git pull", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name \"Your Name\" \ngit config --global user.email \"youremail@example.com\"\ngit add .\ngit diff-index --quiet HEAD || git commit -m \"Auto-pull changes\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "61447894_0", "jobs": [{"name": "add_project", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.email \"you@example.com\"\ngit config user.name \"Your Name\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p path/to/directory\ncp -r /path/to/local/project/. path/to/directory\ngit add .\ngit commit -m \"Add IntelliJ project to repository\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "61470643_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php index.php [command_here] [model_name_here]", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "61554275_0", "jobs": [{"name": "read-env-variables", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require vlucas/phpdotenv", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp $COMPOSE_FILE .env\nphp -r \"require 'vendor/autoload.php'; use Dotenv\\Dotenv; $dotenv = Dotenv::createImmutable(__DIR__); $dotenv->load(); print_r(getenv());\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "61557797_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install libssh2-1 libssh2-1-dev libssh2-1-dbg", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "webfactory/ssh-agent", "version": "v0.5.3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -LO https://deployer.org/releases/v6.8.0/deployer.phar &&\\ sudo mv deployer.phar /usr/local/bin/dep &&\\ sudo chmod +x /usr/local/bin/dep", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dep deploy production", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rm -rf vendor", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "61648445_0", "jobs": [{"name": "kubernetes-apply", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "steebchen/kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"$KUBE_CONFIG_DATA\" | base64 --decode > kubeconfig.yaml && kubectl config view || true", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f path/to/your/kubernetes-config.yaml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "61679421_0", "jobs": [{"name": "insight", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpinsights", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "61736888_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/setup-kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "DEPLOYMENT_NAME=\"your-deployment-name\"\nkubectl rollout status deployment/${DEPLOYMENT_NAME}\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "61737910_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jurplel/setup-qt", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "matthewjamesbriggs/setup-mingw", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "qmake -v", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mingw32-make", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "61741227_1", "jobs": [{"name": "build", "steps": []}]}
{"id": "6174657_0", "jobs": [{"name": "phpundercontrol", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php phpundercontrol.phar", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "61778320_0", "jobs": [{"name": "upload_files", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/login", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/powershell", "version": "v1", "shell": "bash"}]}]}
{"id": "61805738_0", "jobs": [{"name": "record-commits", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout master && git merge main --no-ff", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "61823476_0", "jobs": [{"name": "checkstyle", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn checkstyle:checkstyle", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=checkstyle-results::$(cat target/checkstyle-result.xml || echo '')\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "gimenete/create-or-update-pull-request-comment", "version": "v1", "shell": "bash"}]}]}
{"id": "61845191_0", "jobs": [{"name": "build-and-deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "imranismail/setup-kustomize", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker://bitnami/kubectl", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Fetching data from GitHub REST API...\"\nexport GITHUB_API_TOKEN=$GITHUB_API_TOKEN\n# Add your script or commands to fetch data from the GitHub API here\n\necho \"Deploying data to GKE...\"\nkustomize build /path/to/your/kustomize/manifests | kubectl apply -f -\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "61884386_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "publish-test-results", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-sarif", "version": "v1", "shell": "bash"}]}]}
{"id": "61892305_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Running on ${{ github.event_name }} event for branch ${{ github.ref }}\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Commands to build and test your code\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "61932940_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "gavinmogan/repo-supervisor-action", "version": "main", "shell": "bash"}]}]}
{"id": "61957795_0", "jobs": [{"name": "notify", "steps": [{"type": "shell_cmd", "cmd": "if [ -z \"${{ secrets.TELEGRAM_TOKEN }}\" ]; then\n  echo \"Missing Telegram token secret. Add the secret named 'TELEGRAM_TOKEN' with your Bot API token in repository Settings > Secrets.\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [ -z \"${{ secrets.TELEGRAM_USER_LIST }}\" ]; then\n  echo \"Missing Telegram user list secret. Add the secret named 'TELEGRAM_USER_LIST' with the list of user IDs or usernames to send notifications to.\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/telegram-action", "version": "master", "shell": "bash"}]}]}
{"id": "61974075_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\nchmod +x wp-cli.phar\nsudo mv wp-cli.phar /usr/local/bin/wp\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wp core download --version=latest --path=wp\ncd wp\nwp config create --dbname=${{ secrets.DB_NAME }} --dbuser=${{ secrets.DB_USER }} --dbpass=${{ secrets.DB_PASS }} --dbhost=${{ secrets.DB_HOST }}\nwp core install --url=${{ secrets.WP_URL }} --title=${{ secrets.WP_TITLE }} --admin_user=${{ secrets.WP_ADMIN_USER }} --admin_password=${{ secrets.WP_ADMIN_PASS }} --admin_email=${{ secrets.WP_ADMIN_EMAIL }}\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cat <<EOT >> wp/.htaccess\n# BEGIN WordPress\nRewriteEngine On\nRewriteBase /\nRewriteRule ^index\\.php$ - [L]\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule . /index.php [L]\n# END WordPress\nEOT\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd wp\ngit config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Deploy WordPress\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "61977114_0", "jobs": [{"name": "send-email", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=email::$(git log -1 --pretty=format:'%ae')\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v3", "shell": "bash"}]}]}
{"id": "62014304_0", "jobs": [{"name": "create_and_push_files", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p directory1\necho \"File 1 content\" > directory1/file1.txt\nmkdir -p directory2\necho \"File 2 content\" > directory2/file2.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "62014553_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "find . -name \"*.php\" -print0 | xargs -0 -n 1 php -l", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "62053833_0", "jobs": [{"name": "netlify_cms_pr", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Netlify/cms-create-pull-request", "version": "v2", "shell": "bash"}]}]}
{"id": "62074535_0", "jobs": [{"name": "eslint", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ::set-output name=changed_files::$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install eslint eslint-plugin-react @babel/core @babel/eslint-parser --save-dev", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "github-script", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/github-script", "version": "v4", "shell": "bash"}]}]}
{"id": "62137000_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/compose-cli-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install jq", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "jq '.services.your_service_name.environment += {\n  \"ENV_VAR_1\": ${{ secrets.YOUR_SECRET_1 }},\n  \"ENV_VAR_2\": ${{ secrets.YOUR_SECRET_2 }}\n}' < docker-compose.yml > docker-compose.env.yml\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker compose --env-file=docker-compose.env.yml up -d", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "62159527_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dorny/paths-changed", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "changed_files=$(echo \"${{ steps.changed_files.outputs.files }}\" | jq -r '.[]')\nfor file in $changed_files; do\n  if [[ $file == *\".csproj\" ]]; then\n    project_dir=$(dirname \"$file\")\n    cd $project_dir\n    dotnet build\n    cd ..\n  fi\ndone\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "62178851_0", "jobs": [{"name": "deployment", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php composer-setup.php", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"unlink('composer-setup.php');\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php composer.phar install --no-interaction --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/vapor deploy --commit=\"${GITHUB_SHA}\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "62222226_0", "jobs": [{"name": "check-diffs", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "node check-diffs-script.js", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "marocchino/auto-approve-action", "version": "v2", "shell": "bash"}]}]}
{"id": "6227450_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-erlang", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wget https://rebar3.s3.amazonaws.com/rebar3 && chmod +x rebar3", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./rebar3 do compile, xref, dialyzer, eunit\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "62293099_0", "jobs": [{"name": "deploy_database", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mysql/[email protected]", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql --host=localhost --user=root --password=$MYSQL_ROOT_PASSWORD sample_database < schema.sql\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "62300492_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Azure/setup-helm", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm package path/to/your/chart", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm repo add chartmuseum-repo http://your-chartmuseum-url\nhelm push your-chart.tgz chartmuseum-repo\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "623079_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-scripts", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpcs", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit --coverage-clover clover.xml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "6230880_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit tests/\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "62318630_0", "jobs": [{"name": "check-pr-review-access", "steps": [{"type": "gh_action", "cmd": "", "name": "gr2m/get-github-action-actor-permissions", "version": "v1.x", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [ \"$(jq '.labels[].name'<<<\"$PR_PAYLOAD\")\" != *\"review-required\"* ]; then\n  echo \"::error::All PRs must have the 'review-required' label to require reviews\";\n  exit 1;\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "62352000_0", "jobs": [{"name": "build-and-export-docker-image", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud builds submit --tag gcr.io/your-project-id/image-name\ngcloud run deploy --image gcr.io/your-project-id/image-name\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/build-and-push-docker-image", "version": "v0.2.3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth configure-docker", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker push gcr.io/your-project-id/image-name", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "62376821_0", "jobs": [{"name": "check-concurrency", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Another workflow run is in progress or queued. Stalling this run.\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "62464883_0", "jobs": [{"name": "flutter_ui_test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter test test/ui_tests/my_test.dart --tags \"flutter\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter drive --target=test_driver/app.dart --driver=test_driver/app_test.dart --browser-name=chrome --release\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "6249732_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean package", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easymock/docker-compose", "version": "v2", "shell": "bash"}]}]}
{"id": "62530078_0", "jobs": [{"name": "assign-issue-to-project", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "62557325_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clone https://github.com/your-private-repo/repo1.git\ncd repo1\ngit checkout main\nflutter pub get\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build apk", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "62624753_0", "jobs": [{"name": "update_provisioning", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-swift", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane match adhoc\nbundle exec fastlane update_provisioning\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "62631451_0", "jobs": [{"name": "build-and-deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o $(Build.ArtifactStagingDirectory)", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "62663326_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": ".\\deploy.ps1 # Update the script name as per your PowerShell script file name\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "62675923_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build\n./gradlew test\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "coverity-static-analysis", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "coverity/coverity-scan-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -k \"https://scan.coverity.com/download/cxx/linux64\" -o coverity_tool.tgz\ntar xzf coverity_tool.tgz\nexport PATH=$PATH:/path/to/your/coverity_tool/bin\ncov-build --dir cov-int ./gradlew build\ncov-analyze --dir cov-int --all --security --concurrency --webapp-security\ncov-commit-defects --dir cov-int --no-email on-bb9ujm1234@bugbear.com --host coverityscan.coverity.com --stream YourStreamName\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "62692958_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build ios --release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "tar cvfz ios_app.tar.gz build/ios/iphoneos/Runner.app", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "62730365_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo xcode-select -s /Applications/Xcode.app/Contents/Developer\nbrew install cocoapods\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild build -scheme YourScheme -workspace YourWorkspace.xcworkspace -configuration Release -destination 'platform=macOS,variant=Mac Catalyst' ONLY_ACTIVE_ARCH=YES", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "6279368_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpcs --standard=PSR12 src", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit --coverage-clover coverage.xml", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "codecov/codecov-action", "version": "v2", "shell": "bash"}]}]}
{"id": "62803679_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rails -v # Check Rails version\nrails db:migrate # Example Rails command\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "62811744_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "robotology/setup-ros", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p catkin_ws/src\ncp -R * catkin_ws/src\ncd catkin_ws\ncatkin_make\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "source catkin_ws/devel/setup.bash", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python catkin_ws/src/your_package/your_script.py", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "62843484_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/setup-helm", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/setup-kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm dependency build path/to/umbrella-chart\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm lint path/to/umbrella-chart\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm package path/to/umbrella-chart\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm push path/to/umbrella-chart/*.tgz chart-repo\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm dependency build contractor1-repo/path/to/contractor-chart\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm lint contractor1-repo/path/to/contractor-chart\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm package contractor1-repo/path/to/contractor-chart\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm dependency build contractor2-repo/path/to/contractor-chart\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm lint contractor2-repo/path/to/contractor-chart\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm package contractor2-repo/path/to/contractor-chart\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "62857420_1", "jobs": [{"name": "use-shared-template", "steps": []}]}
{"id": "62874299_0", "jobs": [{"name": "verification", "steps": [{"type": "gh_action", "cmd": "", "name": "softprops/action-sudo", "version": "v2", "shell": "bash"}]}]}
{"id": "62892700_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run prod", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easingthemes/ssh-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "62899465_0", "jobs": [{"name": "include-files", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your commands to include necessary files\ncp path/to/source/file path/to/destination/folder\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Include additional files in CI/CD workflow\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "62908594_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-docker", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t myimage .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run myimage", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "62954146_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "game-ci/setup-unity", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "unity -batchmode -projectPath . -runTests -testPlatform editmode -logFile testResults.xml\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "EnricoMi/publish-unit-test-result-action", "version": "v1", "shell": "bash"}]}]}
{"id": "62969381_0", "jobs": [{"name": "commit-checks", "steps": [{"type": "gh_action", "cmd": "", "name": "dco/check", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "COMMIT_AUTHOR_EMAIL=$(git log -1 --pretty=format:\"%ae\")\nCOMMIT_AUTHOR_NAME=$(git log -1 --pretty=format:\"%an\")\necho \"::set-output name=author_email::$COMMIT_AUTHOR_EMAIL\"\necho \"::set-output name=author_name::$COMMIT_AUTHOR_NAME\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "AUTHOR_EMAIL=\"${{ steps.Get-Commit-Author-Information.outputs.author_email }}\"\nEXPECTED_EMAIL=\"example@example.com\" # Provide your expected email here\n\nif [ \"$AUTHOR_EMAIL\" != \"$EXPECTED_EMAIL\" ]; then\n  echo \"Error: Commit author's email does not match the expected email.\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "AUTHOR_NAME=\"${{ steps.Get-Commit-Author-Information.outputs.author_name }}\"\nAUTHOR_EMAIL=\"${{ steps.Get-Commit-Author-Information.outputs.author_email }}\"\necho \"Commit Author Name: $AUTHOR_NAME\"\necho \"Commit Author Email: $AUTHOR_EMAIL\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "62983257_0", "jobs": [{"name": "remove-build-status", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/github-script", "version": "v4", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -X PATCH -H \"Authorization: token ${{secrets.GITHUB_TOKEN}}\" \\\n  -H \"Accept: application/vnd.github.antiope-preview+json\" \\\n  -H \"Content-Type: application/json\" \\\n  https://api.github.com/repos/$GITHUB_REPOSITORY/check-runs/${{steps.get_check_run.outputs.check_run.id}} \\\n  -d '{\"status\":\"completed\", \"conclusion\": \"success\"}'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63018228_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p subfolder\nmv * subfolder/\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "63077805_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/setup-remote-docker", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.DOCKERHUB_TOKEN }}\" | docker login -u \"${{ secrets.DOCKERHUB_USERNAME }}\" --password-stdin", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t my-docker-image .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker tag my-docker-image \"${{ secrets.DOCKERHUB_USERNAME }}/my-docker-image:latest\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker push \"${{ secrets.DOCKERHUB_USERNAME }}/my-docker-image:latest\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63081879_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "game-ci/setup-unity", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "/opt/unity/Editor/Unity \\\n  -batchmode \\\n  -projectPath ./path/to/your/UnityProject \\\n  -executeMethod BuildScript.PerformBuild \\\n  -quit\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63119375_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean package", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "push", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp target/*.jar ./artifact.jar\ngit add artifact.jar\ngit commit -m \"Add Java artifact\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/git-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "63125992_0", "jobs": [{"name": "sonarqube", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarqube-scan-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to build/run LoadRunner scripts\n# Example: run_loadrunner_script.sh\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63143468_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle config path vendor/bundle\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec jekyll build\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i 's|{{ site.github.repository_url }}||g' _site/**/*.html\nsed -i 's|{{ site.github.url }}||g' _site/**/*.html\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'Github Actions'\ngit config --global user.email 'actions@users.noreply.github.com'\ngit add _site/\ngit commit -m 'Remove Github username and repo name from generated URLs'\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63163418_0", "jobs": [{"name": "rubocop", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install rubocop\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rubocop\nif [ \"$?\" -eq \"1\" ]; then\n  echo \"RuboCop found only warnings. Returning exit code 0.\"\n  exit 0\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63250061_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/setup-kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"$KUBE_CONFIG_DATA\" | base64 -d > ./config\nmkdir -p $HOME/.kube\nmv ./config $HOME/.kube/config\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t your-docker-image .\ndocker tag your-docker-image your-registry/your-docker-image\necho ${{ secrets.DOCKER_PASSWORD }} | docker login your-registry -u ${{ secrets.DOCKER_USERNAME }} --password-stdin\ndocker push your-registry/your-docker-image\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f deployment.yaml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63257031_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easingthemes/awsgithubactions", "version": "v3", "shell": "bash"}]}]}
{"id": "63262449_0", "jobs": [{"name": "build_and_push_docker_image", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "elgohr/Publish-Docker-Github-Action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t <your-aws-account-id>.dkr.ecr.<your-region>.amazonaws.com/<your-repo-name> .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker push <your-aws-account-id>.dkr.ecr.<your-region>.amazonaws.com/<your-repo-name>", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63285847_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build MyLambdaFunction.csproj", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish MyLambdaFunction.csproj --output publish_folder", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "toolbelt/aws-lambda-dotnet", "version": "v5", "shell": "bash"}]}]}
{"id": "63294618_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python -m pip install --upgrade pip\npip install -r requirements.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python my_script.py", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wei/github-push action", "version": null, "shell": "bash"}]}]}
{"id": "63337475_0", "jobs": [{"name": "parent-job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}, {"name": "child-job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}]}]}
{"id": "63341096_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "anishkny/display-github-actions", "version": "v2", "shell": "bash"}]}]}
{"id": "63341938_0", "jobs": [{"name": "comment-on-pr", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mikepenz/github-comment", "version": "v1", "shell": "bash"}]}]}
{"id": "63357456_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "imranismail/setup-kustomize", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kustomize build path/to/kubernetes/resources | kubectl apply -f -\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63375309_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install --jobs 4 --retry 3\nbundle exec rake db:create db:schema:load RAILS_ENV=test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Xvfb :99 -ac -screen 0 1280x1024x16 &", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./bin/selenium", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp config/database.yml.ci config/database.yml", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec spec/features", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63376399_1", "jobs": [{"name": "phpunit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php bin/phpunit --coverage-clover=clover.xml", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "6340400_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Replace the command below with your actual test command\nbundle exec rspec\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Replace the command below with your deployment command\necho \"Deploying to production\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63405783_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build apk", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63414594_0", "jobs": [{"name": "send_ipa_file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Generating .ipa file\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install sendinblue --save", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sendinblue/mail-action", "version": "v1", "shell": "bash"}]}]}
{"id": "63434350_0", "jobs": [{"name": "tag_release", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "anothrnick/github-tag-action", "version": "v1", "shell": "bash"}]}]}
{"id": "63452906_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cpp", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\nmake\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd build\nctest\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63488788_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.0", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-cmake", "version": "v1.0.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -B build -S . -G \"Visual Studio 16 2019\" -A x64", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build --config Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./build/YourTestExecutable.exe", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63527410_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "gerardnll/build-msys2-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pacman -S --noconfirm mingw-w64-x86_64-gcc git make", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clone --recursive https://github.com/boostorg/boost.git\ncd boost\n./bootstrap.bat mingw\n./b2 toolset=gcc\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63570002_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem update --system\ngem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec jekyll build\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"node['js']['runtime'] = 'node'\" >> _config.yml\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "6357599_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wei/sendgrid-action", "version": "v1", "shell": "bash"}]}]}
{"id": "63580823_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t your-docker-image-name:latest .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.DOCKERHUB_PASSWORD }}\" | docker login -u \"${{ secrets.DOCKERHUB_USERNAME }}\" --password-stdin", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker push your-docker-image-name:latest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add Dockerfile", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git commit -m \"Update Dockerfile\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "63590910_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o $(Build.ArtifactStagingDirectory)", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Azure/functions-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "func azure functionapp publish $AZURE_FUNCTIONAPP_NAME --package $AZURE_FUNCTIONAPP_PACKAGE_PATH\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63613783_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "conda-incubator/setup-miniconda", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "conda install --name myenv --file requirements.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "conda activate myenv\npython test_script.py\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63665598_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "espressif/idf-github-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Your build commands here\n# For example:\nidf.py set-target esp32\nidf.py menuconfig\nidf.py build\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63687203_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Azure/helm-setup", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/CLI", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "az login --service-principal -u ${{ secrets.AZURE_SP_APP_ID }} -p ${{ secrets.AZURE_SP_PASSWORD }} --tenant ${{ secrets.AZURE_TENANT_ID }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "az aks get-credentials --resource-group <resource_group_name> --name <aks_cluster_name>", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm dependency update ./path/to/your/helm/chart", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm upgrade --install <release_name> ./path/to/your/helm/chart --namespace <namespace> --values values.yaml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63695869_0", "jobs": [{"name": "build-and-deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "main", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud config set project $GCP_PROJECT_ID\ngcloud config set compute/zone $GCP_COMPUTE_ZONE\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud app deploy --quiet\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63696871_0", "jobs": [{"name": "get-docker-url", "steps": [{"type": "gh_action", "cmd": "", "name": "docker/setup-docker", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run -d --privileged --name dind docker:19.03-dind\nexport DOCKER_HOST=tcp://localhost:2375\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "DOCKER_CONTAINER_IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' dind)\necho \"Docker-in-Docker IP: $DOCKER_CONTAINER_IP\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "DOCKER_URL=\"tcp://$DOCKER_CONTAINER_IP:2375\"\necho \"Docker-in-Docker URL: $DOCKER_URL\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63704175_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install cocoapods\npod setup\npod install\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63721400_0", "jobs": [{"name": "start-pubsub-emulator", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.3.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud beta emulators pubsub start --project=test-project --host-port=localhost:8538", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63765596_0", "jobs": [{"name": "close_pull_request", "steps": [{"type": "shell_cmd", "cmd": "PR_NUMBER=$(jq -r .pull_request.number $GITHUB_EVENT_PATH)\nBASE_BRANCH=$(jq -r .pull_request.base.ref $GITHUB_EVENT_PATH)\n\nif [ \"$GITHUB_EVENT_NAME\" == \"pull_request\"\n  && \"$GITHUB_EVENT_ACTION\" == \"closed\"\n  && \"$BASE_BRANCH\" != \"$GITHUB_HEAD_REF\" ]; then\n  echo \"::set-output name=close_pull_request::true\"\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peter-evans/close-pull-request", "version": "1.0.0", "shell": "bash"}]}]}
{"id": "63765646_0", "jobs": [{"name": "create_pr", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"you@example.com\"\ngit config --global user.name \"Your Name\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b new-branch\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Hello, world!\" >> new-file.txt\ngit add new-file.txt\ngit commit -m \"Add new file\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peter-evans/create-pull-request", "version": "v3", "shell": "bash"}]}]}
{"id": "63778169_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-dev --no-interaction", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "samkirkland/FTP-Deploy-Action", "version": "3.1.1", "shell": "bash"}]}]}
{"id": "63805587_0", "jobs": [{"name": "connect_to_gcp", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud projects list", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63810325_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "crazy-max/ghaction-github-pages", "version": "v2", "shell": "bash"}]}]}
{"id": "63812281_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -NV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane gym export", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63872825_0", "jobs": [{"name": "update_tool", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pip install -r requirements.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python update_tool.py", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Auto-update Python edge software tool\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "63937819_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "63941739_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -resolvePackageDependencies", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63948740_0", "jobs": [{"name": "resolve-port-conflict", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/setup-docker", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run -d --name my_portainer -p 8000:8000 -p 9000:9000 portainer/portainer\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run -d --name my_sonarqube -p 9001:9000 sonarqube\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "63965615_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "64006803_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "steebchen/kubectl", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.KUBE_CONFIG }}\" > /home/runner/work/_temp/.kube/config", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f deployment.yaml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64009203_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "xt0rted/setup-kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl config set-cluster my-cluster-name --server=$KUBE_SERVER --certificate-authority=ca.crt\nkubectl config set-credentials user --token=$KUBE_TOKEN\nkubectl config set-context my-cluster-name --cluster=my-cluster-name --namespace=default --user=user\nkubectl config use-context my-cluster-name\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f path/to/your/manifests", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl create job my-job --image=my-image", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl create cronjob my-cronjob --image=my-cronjob-image", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64037397_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run test:coverage", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "coverage", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wemake.services/coveralls-action", "version": "v1", "shell": "bash"}]}]}
{"id": "64064210_0", "jobs": [{"name": "rename_directories_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [ -d \"directoryA\" ]; then\n  mv directoryA new_directoryA\nfi\n\nif [ -d \"directoryB\" ]; then\n  mv directoryB new_directoryB\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Rename directories\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v0.6", "shell": "bash"}]}]}
{"id": "64112260_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "cachix/install-nix-action", "version": "v10", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nix-shell --run \"your-dependency-installation-command\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nix-shell --run \"your-regression-test-command\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64162492_0", "jobs": [{"name": "test-matlab", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mathworks/setup-matlab", "version": "v0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to install any MATLAB dependencies here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to run MATLAB tests here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64175069_0", "jobs": [{"name": "create_pod", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/aks-set-context", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl run ephemeral-pod --image=nginx --restart=Never\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64204501_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "deislabs/kube-tools/setup", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm repo add stable https://charts.helm.sh/stable\nhelm dependency update path/to/your/helm/chart\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t your-image-name .\ndocker tag your-image-name your-registry/your-image-name\ndocker push your-registry/your-image-name\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm upgrade --install your-release-name path/to/your/helm/chart \\\n  --set image.repository=your-registry/your-image-name \\\n  --set image.tag=latest \\\n  --namespace your-namespace\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64213166_0", "jobs": [{"name": "job_after_matrix", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"This job runs after the matrix is done\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64224964_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Perform the rename and replace task here\nsed -i 's/placeholder/newTask/g' yourfile.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Replace placeholder with newTask\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "64262813_0", "jobs": [{"name": "job_monitor", "steps": [{"type": "gh_action", "cmd": "", "name": "wei/git-brag", "version": "v2", "shell": "bash"}]}]}
{"id": "64316551_0", "jobs": [{"name": "git-lfs-check", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git lfs install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git lfs fetch", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "64331408_0", "jobs": [{"name": "sonarqube", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build\n./gradlew sonarqube -Dsonar.login=${SONAR_TOKEN}\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "github-script", "version": "0.5.0", "shell": "bash"}]}]}
{"id": "64339025_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "conan-io/setup-conan", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "conan install qt/5.15.2@ -r=conan-center --build=missing", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64352242_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Building artifact\" > artifact.txt", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rtCamp/action-slack-notify", "version": "v2", "shell": "bash"}]}]}
{"id": "64367145_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install -g vsce", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.email \"actions@github.com\"\ngit config user.name \"GitHub Actions\"\ntouch README.md\ngit add README.md\ngit commit -m \"Initial commit\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "64374669_0", "jobs": [{"name": "update-readme", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"CURRENT_BRANCH=$(echo ${GITHUB_REF#refs/heads/})\" >> $GITHUB_ENV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i 's|https://github.com/your-username/your-repo/commits/master|https://github.com/your-username/your-repo/commits/$CURRENT_BRANCH|g' README.md\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add README.md\ngit commit -m \"Update build status badge to reflect current branch\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "64378044_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-swift", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "swift build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64391445_0", "jobs": [{"name": "private-action-job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "owner/repository", "version": "v1", "shell": "bash"}]}]}
{"id": "64395360_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install && bundle exec jekyll build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "SamKirkland/FTP-Deploy-Action", "version": "4.0.0", "shell": "bash"}]}]}
{"id": "6439899_0", "jobs": [{"name": "checkout-repos", "steps": [{"type": "gh_action", "cmd": "", "name": "jacobtomlinson/svn-checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ls svn-repo", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ls git-repo", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "644056_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o ./publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "64482069_0", "jobs": [{"name": "check", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "github/super-linter", "version": "v4", "shell": "bash"}, {"type": "shell_cmd", "cmd": "errors=$(grep -E \"ERROR\" /github/super-linter.log || true)\nif [ -n \"$errors\" ]; then\n  echo \"Errors found in the CI workflow file. Preventing push.\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.name github-actions\ngit config user.email github-actions@github.com\ngit add .\ngit commit -m \"Auto-commit: CI workflow linted successfully\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64484715_0", "jobs": [{"name": "redis", "steps": [{"type": "gh_action", "cmd": "", "name": "docker/compose-action", "version": "v2", "shell": "bash"}]}]}
{"id": "64506869_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mathworks/setup-matlab", "version": "v0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "matlab -batch \"disp('Installing FMI Toolbox...')\"\n# Add commands here to install FMI Toolbox\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "matlab -batch \"disp('Running FMI Toolbox tests...')\"\n# Add commands here to run tests\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "matlab -batch \"disp('Analyzing bugs with network service account...')\"\n# Add commands here to analyze bugs\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [ \"$GITHUB_REPOSITORY\" == \"your/repo\" ]; then\n  # Add deployment commands here if needed\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "matlab -batch \"exit\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64507256_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jfrog/github-action/jfrog-cli", "version": "master", "shell": "bash"}]}]}
{"id": "64532293_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python -m pip install --upgrade pip\npip install -r requirements.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"SECRET_KEY=${{ secrets.SECRET_KEY }}\" > env_file\necho \". env_file > .env\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python manage.py test\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f deployment.yaml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64532784_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get\nflutter pub upgrade\n\necho \"android.useAndroidX=true\" >> android/gradle.properties\necho \"android.enableJetifier=true\" >> android/gradle.properties\n\n# Or if you're using Kotlin, you can also add\n# echo \"kotlin.code.style=official\" >> android/gradle.properties\n\nflutter clean\nflutter build apk\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"fix(androidx): Fix Firestore and AndroidX compatibility\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v0.5", "shell": "bash"}]}]}
{"id": "6459924_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild clean build -project YourProject.xcodeproj -scheme YourScheme", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64623987_0", "jobs": [{"name": "webhook_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "plugin-registry/github-actions/generic-webhook-trigger", "version": "v4", "shell": "bash"}]}]}
{"id": "64635452_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cap production deploy", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64666502_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sbt universal:packageBin", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sbt publish", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ls target/universal", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ncipollo/release-action", "version": "v1", "shell": "bash"}]}]}
{"id": "64698426_0", "jobs": [{"name": "firebase-test-lab-shard", "steps": [{"type": "gh_action", "cmd": "", "name": "w9jds/setup-firebase", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "firebase login:ci --interactive", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-env name=GIT_SHA::$(git rev-parse --short HEAD)\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-env name=APK_PATH::app/build/outputs/apk/debug/app-debug.apk\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "firebase test:android run \\\n  --type robo \\\n  --app $APK_PATH \\\n  --device model=Nexus6P,version=27,locale=en,orientation=portrait \\\n  --device model=Pixel2,version=28,locale=en,orientation=portrait \\\n  --async\n  --project your-firebase-project-id \\\n  --results-history-name ${{ env.GIT_SHA }}-$SHARD_NAME\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64706368_0", "jobs": [{"name": "start-vm", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud compute instances start INSTANCE_NAME --zone ZONE\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64739962_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/setup-docker", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t slave-node .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run --name slave-node -d slave-node", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker stop slave-node && docker rm slave-node", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64740697_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane build_ios_export_development", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane build_ios_export_adhoc", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane build_ios_export_appstore", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "6475223_0", "jobs": [{"name": "tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nphp composer-setup.php\nphp -r \"unlink('composer-setup.php');\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64769653_0", "jobs": [{"name": "auto_open_pr", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.email \"your-email@example.com\"\ngit config user.name \"Your Name\"\ngit checkout -b pr-branch\ntouch new_file.txt\ngit add new_file.txt\ngit commit -m \"Automated commit\"\ngit push origin pr-branch\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "repo-sync/pull-request", "version": "v2", "shell": "bash"}]}]}
{"id": "64790037_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "old_version=$(sed -nE 's/^\\s*version:\\s+([0-9]+\\.[0-9]+\\.[0-9]+)/\\1/p' pubspec.yaml)\nversion_array=($(echo $old_version | tr '.' ' '))\nnew_version=\"${version_array[0]}.${version_array[1]}.$((${version_array[2]} + 1))\"\nsed -i \"\" \"s/version: $old_version/version: $new_version/\" pubspec.yaml\necho \"App version incremented to $new_version\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add pubspec.yaml\ngit commit -m \"Increment app version\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64808081_0", "jobs": [{"name": "trigger_downstream_pipeline", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peter-evans/workflow-run-action", "version": "v2", "shell": "bash"}]}]}
{"id": "64810868_0", "jobs": [{"name": "discover-extensions", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nphp composer-setup.php --install-dir=/usr/local/bin --filename=composer\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install\nphp analyze.php  # Replace with your script to extract used PHP extensions\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64842795_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"no\" | avdmanager create avd -n test -k \"system-images;android-30;google_apis;x86\" --force\necho \"hw.cpu.arch=x86_64\" >> $ANDROID_SDK_ROOT/emulator/test.avd/config.ini\necho \"hw.cpu.ncore=1\" >> $ANDROID_SDK_ROOT/emulator/test.avd/config.ini\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "$ANDROID_SDK_ROOT/emulator/emulator -avd test -no-window -gpu swiftshader_indirect -no-audio -no-snapshot -camera-none -dns-server 8.8.8.8", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "your_test_command_here", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64868462_0", "jobs": [{"name": "append_datetime", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"$(date) >> logfile.txt\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add -A\ngit commit -m \"Append current datetime to logfile [skip ci]\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "64909663_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpcs --standard=PSR12 .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/behat", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64916083_0", "jobs": [{"name": "gcp-actions", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gsutil ls gs://your-bucket-name\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Hello, GCP Bucket!\" > hello.txt\ngsutil cp hello.txt gs://your-bucket-name\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gsutil cp gs://your-bucket-name/hello.txt downloaded_hello.txt\ncat downloaded_hello.txt\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64930928_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/setup-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t my-docker-image .\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run --name my-container --privileged my-docker-image\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64944309_0", "jobs": [{"name": "create_pull_request", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b feature-branch", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Make necessary changes in your code\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Auto commit by GitHub Actions\"\ngit push origin feature-branch\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "repo-sync/pull-request", "version": "v2", "shell": "bash"}]}]}
{"id": "64946385_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64958385_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Create a directory for storing custom CA certs\nmkdir -p ~/.my_certs\n\n# Download the custom CA cert to the directory\ncurl -sSL https://example.com/my-cert.pem -o ~/.my_certs/my-cert.pem\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"curl.cainfo=~/.my_certs/my-cert.pem\" | sudo tee -a $(php -r 'echo php_ini_loaded_file();')", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -i | grep curl", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "64975687_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-interaction --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan key:generate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -s --data \"server_id=Your_Envoyer_Server_ID\" --data \"branch=main\" --data \"token=$ENVOYER_TOKEN\" https://envoyer.io/api/projects/$ENVOYER_PROJECT_ID/deploy\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/ssh-action", "version": "master", "shell": "bash"}]}]}
{"id": "64989576_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.REGISTRY_PASSWORD }}\" | docker login -u \"${{ secrets.REGISTRY_USERNAME }}\" --password-stdin registry.example.com", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "registry.example.com/your-private-image:latest", "version": null, "shell": "bash"}]}]}
{"id": "64993949_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "cl3m3nt/webapps-deploy", "version": "v1", "shell": "bash"}]}]}
{"id": "65025094_0", "jobs": [{"name": "deploy_mysql", "steps": [{"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install mysql-server\nmysql -e 'CREATE DATABASE my_mysql_database;'\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy_postgres", "steps": [{"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install postgresql\nsudo -u postgres psql -c 'CREATE DATABASE my_postgres_database;'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65045068_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "timeout 10m bundle exec jekyll build  # Set a timeout of 10 minutes for Jekyll build\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65050618_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter analyze", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65064167_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "julia-actions/setup-julia", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"export JULIA_HOME=${RUNNER_TEMP}/_julia\" >> $GITHUB_ENV\necho \"export PATH=$PATH:${JULIA_HOME}/bin\" >> $GITHUB_ENV\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pip install julia\njulia -e 'using Pkg; Pkg.add(\"PyCall\"); Pkg.build(\"PyCall\")'\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "julia -e 'using PyCall; PyCall.ENV[\"JULIA_HOME\"]'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65128210_0", "jobs": [{"name": "load-sonarqube-config", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarqube-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sonar-scanner", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65131894_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chmod +x gradlew", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "reactivecircus/android-emulator-runner", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "adb start-server && emulator -avd emulator-29 -no-audio -no-window", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Output emulator state\necho \"Waiting for emulator to start\"\nadb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew connectedAndroidTest", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65147185_0", "jobs": [{"name": "install_conda_package", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "conda-inc/setup-miniconda", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "conda install -c conda-forge your-package-name=package_version", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "conda list", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65183443_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install -g @ionic/cli", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ionic build --prod", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wzieba/Ionic-Submit-Google-Play-Store-Action", "version": "v2", "shell": "bash"}]}]}
{"id": "65222989_0", "jobs": [{"name": "helm_push", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "aquasecurity/helm-push", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ::set-output name=files::$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "changed_files=$(echo ${{ steps.git_changes.outputs.files }})\nfor file in $changed_files\ndo\n  helm push $file YOUR_HELM_REPO_URL\ndone\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65226534_0", "jobs": [{"name": "check_file_management", "steps": [{"type": "shell_cmd", "cmd": "# Define housekeeping rules here\n# Example: Checking for specific file types or file naming conventions\n\n# Check for any .txt files in the repository\nif [ $(find . -name \"*.txt\" | wc -l) -gt 0 ]; then\n  echo \"Error: .txt files found in repository. Please remove them.\"\n  exit 1\nfi\n\n# Check for any file exceeding a specific size\nMAX_SIZE=10 # Define maximum size in MB\nif [ $(find . -type f -size +${MAX_SIZE}M | wc -l) -gt 0 ]; then\n  echo \"Error: Files exceeding ${MAX_SIZE}MB found. Please reduce their size.\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [ ${{ steps.file-check.outcome }} == 'failure' ]; then\n  echo \"::error::File management check failed. Please review and correct the issues.\"\n  exit 1\nelse\n  echo \"File management check passed.\"\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65257567_0", "jobs": [{"name": "parameterize-helm-values", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/setup-helm", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm upgrade --install my-release ./path/to/chart \\\n  --set key1={{ secrets.KEY1 }} \\\n  --set key2={{ secrets.KEY2 }}\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65269536_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ruby your_script.rb", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65283246_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build --build-arg ASPNETCORE_ENVIRONMENT=${{ secrets.ASPNETCORE_ENVIRONMENT }} -t myapp:latest .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker push ghcr.io/${{ github.repository_owner }}/myapp:latest", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "65306933_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "hashicorp/setup-packer", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "packer build -var 'vsphere_server={{your_vsphere_server}}' \\\n             -var 'vsphere_user={{your_vsphere_user}}' \\\n             -var 'vsphere_password={{your_vsphere_password}}' \\\n             -var 'vsphere_datacenter={{your_vsphere_datacenter}}' \\\n             -var 'vsphere_datastore={{your_vsphere_datastore}}' \\\n             -var 'vsphere_cluster={{your_vsphere_cluster}}' \\\n             -var 'vm_name=ubuntu-template' \\\n             packer-template.json\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65320024_0", "jobs": [{"name": "rest-call-job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wei/github-action-rest", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ steps.rest-call.outputs.body }}\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65330588_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"env_variables:\" >> app.yaml\necho \"  VARIABLE_NAME: ${{ secrets.MY_SECRET_VARIABLE }}\" >> app.yaml\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "main", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud app deploy\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65337251_0", "jobs": [{"name": "store_and_use_env_secrets", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=env_content::$(cat .env)\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/secrets", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.ENV_CONTENT }}\" > .env", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65390641_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud builds submit --config=cloudbuild.yaml .", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65394378_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65402766_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -v", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65422403_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "steebchen/kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f path/to/your/kubernetes/yaml/files", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65435561_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update && sudo apt-get install -y qemu-kvm", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo kvm -m 2G -drive file=your-image.qcow2,if=virtio -boot c -net nic -net user,hostfwd=tcp::2222-:22", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-docker", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t my-docker-image .\ndocker run --rm --device=/dev/kvm my-docker-image\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65442093_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android/setup-sdk", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleDebug", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "65485398_0", "jobs": [{"name": "update-assets", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.name \"GitHub Actions\"\ngit config user.email \"<your-email>\"\ngit add .\ngit commit -m \"Update frontend assets\" || true\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "65487925_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "another-org/external-action", "version": "v1", "shell": "bash"}]}]}
{"id": "65502622_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "peter-evans/workflow-dispatch", "version": "v2", "shell": "bash"}]}]}
{"id": "65534279_0", "jobs": [{"name": "merge_part", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Modify this command to extract the specific part you want to merge\n# For example, to copy a directory 'folder' from source repository\ncp -r source-folder path/to/destination-folder\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Merge specific part from source repository\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "65544011_0", "jobs": [{"name": "run-sql-script", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/sql-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sqlcmd -S localhost -U ${{ secrets.SQL_SA_USERNAME }} -P ${{ secrets.SQL_SA_PASSWORD }} -d <your-sql-database-name> -i scripts/add_db_owner.sql\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65571673_0", "jobs": [{"name": "check-service-exists", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/setup-kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if kubectl get service YOUR_SERVICE_NAME --ignore-not-found; then\n  echo \"::set-output name=exists::true\"\nelse\n  echo \"::set-output name=exists::false\"\nfi\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "create-service-if-not-exists", "steps": [{"type": "gh_action", "cmd": "", "name": "azure/setup-kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f path/to/your/service.yaml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65583737_0", "jobs": [{"name": "restructure_project", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mv functions/ src/functions/\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v0.7", "shell": "bash"}]}]}
{"id": "65604953_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourScheme -workspace YourWorkspace.xcworkspace -destination 'platform=iOS Simulator,name=iPhone 12' build test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65630087_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your test running command here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your code formatting check command here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your linting check command here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your code coverage check command here\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "status-check", "steps": [{"type": "gh_action", "cmd": "", "name": "gagoar/wait-for-status", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Status checks passed. Merging pull request!\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65652494_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "game-ci/setup-unity", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "unity-editor-path/Editor/Unity.exe -batchmode -nographics -silent-crashes -logFile -projectPath . -executeMethod UnityTest.BatchModeTest.RunAllTests\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "unity-editor-path/Editor/Unity.exe -batchmode -nographics -silent-crashes -logFile -projectPath . -runTests -testPlatform Playmode\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "65663533_0", "jobs": [{"name": "fastlane", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -v specific_version_here", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec fastlane lane_name_here", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65686802_0", "jobs": [{"name": "update_js_file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"console.log('Hello from GitHub Actions');\" > newfile.js\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add newfile.js\ngit commit -m \"Add new JavaScript file via GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "65709306_0", "jobs": [{"name": "run-script", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pwsh -File path/to/your_script.ps1", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65718409_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build apk", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "wzieba/Firebase-Distribution-Github-Action", "version": "v1", "shell": "bash"}]}]}
{"id": "65764274_0", "jobs": [{"name": "database-job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install php8.0-sqlite3", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php <path_to_php_script_with_sqlite_query>.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65801016_0", "jobs": [{"name": "run-graphql-mutation", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jescalan/github-action-graphql", "version": "1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ${{ steps.graphql.outputs.data }}", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65806109_0", "jobs": [{"name": "link-repo", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud source repos create <repo_name>", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65809324_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "helm/k8s-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl get pods\nkubectl get services\n# Add more kubectl commands here as needed\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65818460_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "andreasgrupp/setup-msys2", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pacman -Sy --noconfirm\npacman -S --noconfirm mingw-w64-x86_64-cmake mingw-w64-x86_64-make\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\ncmake --build .\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65826696_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud config set project $GCP_PROJECT_ID\ngcloud builds submit --config cloudbuild.yaml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65828851_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-swift", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"My secret variable is $MY_SECRET_VARIABLE\"\nswiftc main.swift -o myApp\n./myApp\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65849848_0", "jobs": [{"name": "update_environment_variables", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sindresorhus/create-github-release", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Environment variables updated successfully\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "6586806_0", "jobs": [{"name": "create-large-objects", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "r0mdau/setup-oracle-instantclient", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/runner/instantclient\nexport PATH=/home/runner/instantclient:$PATH\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install libaio1", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sqlplus username/password@localhost:1521/ORCL @path/to/your/sql/script.sql\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65903571_0", "jobs": [{"name": "delete_file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mum/fetch-ftp-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.email \"actions@github.com\"\ngit config user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Delete file via FTP\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "6591759_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install -y autoconf g++ make pkg-config re2c\ngit clone https://github.com/phacility/xhprof.git\ncd xhprof/extension\nphpize\n./configure\nmake\nsudo make install\necho \"extension=xhprof.so\" | sudo tee -a `php -i | grep \"Loaded Configuration File\"| cut -d\" \" -f 5`\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -m | grep xhprof", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65945115_0", "jobs": [{"name": "install-cpanm", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install -y curl\ncurl -L https://cpanmin.us | perl - App::cpanminus\necho 'export PATH=$PATH:~/.local/bin' >> $GITHUB_ENV\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65948919_0", "jobs": [{"name": "rebase_dev", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.email \"actions@github.com\"\ngit config user.name \"GitHub Actions\"\ngit fetch\ngit checkout -B dev origin/dev\ngit rebase master\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65968249_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/azure-data-factory-cli-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "az datafactory repository export -f ./pipelines -r ${GITHUB_REPOSITORY} -o --factory-name <your-data-factory-name> -l ${GITHUB_WORKSPACE}/adf_publish -g <your-resource-group-name>", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "65997950_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to generate documentation here\necho \"Generating documentation...\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.email \"bot@example.com\"\ngit config user.name \"Documentation Bot\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clone https://github.com/organization/docs.git\ncd docs\ncp -r ../path/to/generated/docs/* .  # Copy generated docs to the repository\ngit add .\ngit commit -m \"Update documentation\"\ngit push\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "66008058_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud container clusters get-credentials <CLUSTER_NAME> --zone <CLUSTER_ZONE>", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-env name=ENVIRONMENT::dev\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kustomize build overlays/$ENVIRONMENT | kubectl apply -f -\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66016833_0", "jobs": [{"name": "update-package", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "julia-actions/setup-julia", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "julia --project=@. -e 'import Pkg; Pkg.add(\"PackageRegistries\")'", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "julia --project=@. -e 'import Pkg; Pkg.Registry.add(RegistrySpec(url=\"https://github.com/JuliaRegistries/General\"))'", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "julia --project=@. -e 'import Pkg; Pkg.instantiate(); Pkg.activate(\".\"); Pkg.update()'", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.name \"GitHub Actions\"\ngit config --local user.email \"actions@users.noreply.github.com\"\ngit add Project.toml Manifest.toml\ngit commit -m \"Auto-update package version and dependencies\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66053964_0", "jobs": [{"name": "format", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter format .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.name \"GitHub Actions\"\ngit config user.email \"<>\"\ngit add .\ngit commit -m \"Format Dart files\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "66128718_0", "jobs": [{"name": "sonarqube_analysis", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "66143815_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -scheme YourScheme -destination \"platform=iOS Simulator,name=iPhone 11\" | xcpretty\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66146725_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp path/to/your/git_ignored_file.txt /path/in/your/project/git_ignored_file.txt\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66160057_0", "jobs": [{"name": "run-on-host-before-docker", "steps": [{"type": "shell_cmd", "cmd": "echo \"Running a command on the host\"\nsudo apt-get update\nsudo apt-get install -y some-package\n# Add your desired commands to run on the host before entering the Docker container\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-docker", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t my-docker-image .\ndocker run my-docker-image\n# Add your Docker commands to build and run the container here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66178123_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Install-Module -Name PSScriptAnalyzer -Force -AllowClobber\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Invoke-ScriptAnalyzer -Path \"path/to/your/powershell/script.ps1\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66218434_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"copy('https://getcomposer.org/installer', './composer-setup.php');\"\nphp ./composer-setup.php\nphp -r \"unlink('./composer-setup.php');\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Testing with PHP ${{ matrix.php }}\"\nphp composer.phar require \"vendor/package:1.*\"\nphp composer.phar install --prefer-dist\nphp vendor/bin/phpunit\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php composer.phar clear-cache\nrm composer.phar\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66233463_0", "jobs": [{"name": "grant-permissions", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/setup-kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl create namespace <your-namespace>\nkubectl create serviceaccount helm-sa -n <your-namespace>\nkubectl create rolebinding helm-sa-binding --clusterrole=admin --serviceaccount=<your-namespace>:helm-sa -n <your-namespace>\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3\nchmod 700 get_helm.sh\n./get_helm.sh\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66254608_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o ./published", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=matches::${GITHUB_ACTOR}\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "66323959_0", "jobs": [{"name": "move_files_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir new_folder\nmv current_folder/* new_folder/\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Move files to new folder\" || echo \"No changes to commit\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "66350687_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ionic build --platform=ios", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install cocoapods", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd ios\npod install\nxcodebuild -workspace YourApp.xcworkspace -scheme YourApp -destination generic/platform=iOS build\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66359932_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-docker", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t my-docker-image .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run --network=custom_network my-docker-image", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66380809_0", "jobs": [{"name": "removeCommits", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b temp-branch", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git cherry-pick <commit-hash1>\ngit cherry-pick <commit-hash2>\n# Add more cherry-pick commands as needed\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "66405224_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker buildx create --name mybuilder\ndocker buildx use mybuilder\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/gcloud-action", "version": "v0.3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker buildx build --platform linux/amd64 -t myimage .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ${{ secrets.GCP_SA_KEY }} | docker login -u _json_key --password-stdin https://gcr.io\ndocker tag myimage gcr.io/${{ secrets.GCP_PROJECT_ID }}/myimage\ndocker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/myimage\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66430177_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud config set project YOUR_PROJECT_ID", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud builds submit --config=cloudbuild.yaml .\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66510689_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd path/to/your/ios/app\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd path/to/your/ios/app\nxcodebuild -workspace YourApp.xcworkspace -scheme YourApp -destination 'generic/platform=iOS' build\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "shell_cmd", "cmd": "# Add your deployment script here, e.g., using Fastlane or Firebase CLI\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66516113_0", "jobs": [{"name": "update-container", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t my-docker-image .\ndocker tag my-docker-image gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-docker-image:${GITHUB_SHA}\ndocker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-docker-image:${GITHUB_SHA}\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth configure-docker\ndocker pull gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-docker-image:${GITHUB_SHA}\ndocker stop my-container || true\ndocker rm my-container || true\ndocker run -d --name=my-container -p 80:80 gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-docker-image:${GITHUB_SHA}\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66517411_0", "jobs": [{"name": "copy-file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Run your Docker container and copy the file to container's /tmp directory\ndocker run --name my-container -d your-docker-image\ndocker cp my-container:/path/to/file/in/container /tmp/file-to-copy\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p $GITHUB_WORKSPACE/copied-files\ncp /tmp/file-to-copy $GITHUB_WORKSPACE/copied-files/\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add copied-files/file-to-copy\ngit commit -m \"Copy file from Docker container\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "66532645_1", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "organization/template-repository", "version": "main", "shell": "bash"}]}]}
{"id": "66567784_0", "jobs": [{"name": "rename_run_command_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i 's/old_run_command/new_run_command/g' path/to/your/script.sh\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'GitHub Actions'\ngit config --global user.email 'actions@users.noreply.github.com'\ngit add .\ngit commit -m \"Rename run command\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "66575640_0", "jobs": [{"name": "build-and-deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "66585031_0", "jobs": [{"name": "build-and-push-container", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean package", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "paketo-buildpacks/graalvm:full", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "pack build your-github-username/your-image-name --builder paketobuildpacks/builder:base --publish", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker tag your-github-username/your-image-name ghcr.io/your-github-username/your-image-name", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker push ghcr.io/your-github-username/your-image-name", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66601165_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ms-vscode.cmake-tools.install-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "choco install opencl-sdk -y", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -B build -S .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "build\\OpenCLProgram.exe", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66603902_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth configure-docker", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-docker-image .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-docker-image", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud run deploy my-service --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-docker-image --platform managed --region ${{ secrets.GCP_REGION }}", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66613362_0", "jobs": [{"name": "deploy-chart", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/setup-helm", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helmfile -e production apply\nif [ $? -eq 1 ]; then\n  echo \"Deployment failed with exit code 1. Retrying deployment...\"\n  helmfile -e production apply\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66624295_0", "jobs": [{"name": "start-process", "steps": [{"type": "shell_cmd", "cmd": "# Start your persistent process here\n# For example, starting a simple web server\npython -m http.server 8000 &\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "process-monitor", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/exec", "version": "v2", "shell": "bash"}]}]}
{"id": "66681850_0", "jobs": [{"name": "trigger_job", "steps": [{"type": "gh_action", "cmd": "", "name": "8398a7/action-slack", "version": "v3.3.0", "shell": "bash"}]}]}
{"id": "66684294_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dcristian96/setup-kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-env name=IMAGE_TAG::${GITHUB_SHA::8}\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t your-image-name:${{ env.IMAGE_TAG }} .\ndocker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}\ndocker push your-image-name:${{ env.IMAGE_TAG }}\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl set image deployment/${{ env.KUBE_DEPLOYMENT }} ${KUBE_DEPLOYMENT}=your-image-name:${{ env.IMAGE_TAG }} -n ${{ env.KUBE_NAMESPACE }}\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66765963_0", "jobs": [{"name": "install", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer config http-basic.nova.laravel.com nova $NOVA_TOKEN", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require laravel/nova", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan nova:install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan nova:publish --force", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66793451_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/login", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/arm-deploy", "version": "v1", "shell": "bash"}]}]}
{"id": "66819932_0", "jobs": [{"name": "open-pull-request", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "andymckay/create-pull-request", "version": "master", "shell": "bash"}]}]}
{"id": "66828140_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v3", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "export PROFILE_1_UUID=\"<1st Provisioning Profile UUID>\"\nexport PROFILE_2_UUID=\"<2nd Provisioning Profile UUID>\"\nexport PROFILE_1_NAME=\"profile1.mobileprovision\"\nexport PROFILE_2_NAME=\"profile2.mobileprovision\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec fastlane match adhoc --readonly\nxcodebuild -workspace YourApp.xcworkspace -scheme YourScheme -configuration Release clean archive -archivePath build/archive.xcarchive PROVISIONING_PROFILE_SPECIFIER=\"match AdHoc YourBundleID\" CODE_SIGN_IDENTITY=\"iPhone Distribution\" CODE_SIGN_STYLE=\"Automatic\" DEVELOPMENT_TEAM=YOUR_TEAM_ID\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath build/archive.xcarchive -exportPath build -exportOptionsPlist ExportOptions.plist\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66850368_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i 's|{{YOUR_ENV_VAR_1}}|'$YOUR_ENV_VAR_1'|g' pubspec.yaml && sed -i 's|{{YOUR_ENV_VAR_2}}|'$YOUR_ENV_VAR_2'|g' pubspec.yaml", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build apk", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66856876_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easepeer/kubernetes-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo $SECRET_USERNAME > secret-username.txt\necho $SECRET_PASSWORD > secret-password.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl create secret generic my-secret \\\n  --from-file=secret-username.txt \\\n  --from-file=secret-password.txt\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66871847_0", "jobs": [{"name": "release", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"github-actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "MICROSERVICES=(\"microservice1\" \"microservice2\" \"microservice3\")\nfor service in \"${MICROSERVICES[@]}\"\ndo\n  # Update version of the microservice\n  sed -i \"s/VERSION=.*/VERSION=$(date +'%Y.%m.%d')/\" \"$service/version.txt\"\n  \n  # Commit the changes\n  git add \"$service/version.txt\"\n  git commit -m \"Update $service version to $(date +'%Y.%m.%d')\"\ndone\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "66957112_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/setup-helm", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=VERSION::$(echo $GITHUB_RUN_NUMBER).0\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i'' \"s/version: .*$/version: ${{ steps.semver.outputs.VERSION }}/\" charts/my-chart/Chart.yaml\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm package charts/my-chart -d charts/", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "66966223_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-ansi --no-interaction --no-progress --no-scripts --optimize-autoloader", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer dump-autoload --no-ansi --optimize", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run production", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp .env.example .env", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan migrate --force", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo chown -R www-data:www-data storage/\nsudo chown -R www-data:www-data bootstrap/cache/\nsudo chmod -R 775 storage/\nsudo chmod -R 775 bootstrap/cache/\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo service php8.0-fpm reload", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "66974806_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ${{ secrets.GCP_SA_KEY }} > key.json\ngcloud auth activate-service-account --key-file=key.json\ngcloud auth configure-docker\nrm key.json\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-app:${{ github.sha }} .\ndocker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-app:${{ github.sha }}\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud container clusters get-credentials my-cluster --zone us-central1-a --project ${{ secrets.GCP_PROJECT_ID }}\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl set image deployment/my-app-deployment my-app=gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-app:${{ github.sha }}\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67015743_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp path/to/your/xcodeprojfile.xcodeproj .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.name \"${{ github.actor }}\"\ngit config user.email \"${{ github.actor }}@users.noreply.github.com\"\ngit add .\ngit commit -m \"Add Xcodeproj file\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "67021631_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "r-lib/actions/setup-r", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "install.packages(\"remotes\")\nremotes::install_github(\"rstudio/reticulate\")\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python -m pip install numpy scipy pandas\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "R CMD build .\nR CMD check --no-manual --as-cran *.tar.gz\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Rscript -e 'library(testthat); test_dir(\"tests/\")'\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "r-lib/actions/push-r-package", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Rscript -e 'install.packages(\"path/to/your/package.tar.gz\", repos = NULL, type = \"source\")'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "6704589_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cucumber", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67066910_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "IBM/cloud-ibmcloud-github-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ibmcloud login --apikey $IBM_CLOUD_API_KEY -r $IBM_CLOUD_REGION", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ibmcloud target -o $IBM_CLOUD_CF_ORG -s $IBM_CLOUD_CF_SPACE", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ibmcloud cf push YOUR_APP_NAME_HERE", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67084550_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install\nnpm run build\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "github/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "67114835_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec fastlane validate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec fastlane your_lane_name_here", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67131331_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "warrenbuckley/Setup-MSBuild", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nuget restore YourSolutionName.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild YourSolutionName.sln /p:Configuration=Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd YourTestsProjectDirectory\nmsbuild YourTestsProject.csproj /t:Rebuild /p:Configuration=Release\n# Add any test running commands here\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add deployment commands here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67150314_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/k8s-set-context", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/setup-helm", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t myapp:latest .\necho ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ secrets.GITHUB_ACTOR }} --password-stdin\ndocker tag myapp:latest ghcr.io/your_username/myapp:latest\ndocker push ghcr.io/your_username/myapp:latest\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm upgrade --install myapp ./path/to/helm/chart\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "argocd app sync myapp\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67162041_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-interaction --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp .env.example .env", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan key:generate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpcs", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install && npm run dev", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67205529_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake db:create RAILS_ENV=test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67300831_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild build-for-testing -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12'\nxcodebuild test -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12'\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test-without-building -project YourProject.xcodeproj -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' -enableCodeCoverage YES\nxcrun xctrace record --template \"Instruments\" --attach-your_app_id_here --time-limit 60s --output trace.trace\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "67341811_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/setup-buildx-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.GITHUB_TOKEN }}\" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build . --file Dockerfile --tag ghcr.io/${{ github.repository_owner }}/${{ github.repository_name }}:latest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker push ghcr.io/${{ github.repository_owner }}/${{ github.repository_name }}:latest", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ghcr.io/${{ github.repository_owner }}/${{ github.repository_name }}:latest", "version": null, "shell": "bash"}]}]}
{"id": "67386920_0", "jobs": [{"name": "enforce-merge", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/github-script", "version": "v5", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "67389728_0", "jobs": [{"name": "update_workflow", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Your updated workflow file content\" > .github/workflows/your-updated-workflow-file.yml\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Update workflow file using GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v0.5", "shell": "bash"}]}]}
{"id": "67407782_0", "jobs": [{"name": "trigger-workflow", "steps": [{"type": "gh_action", "cmd": "", "name": "peter-evans/workflow-dispatch", "version": "v2", "shell": "bash"}]}]}
{"id": "67416059_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "codecov/codecov-action", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rtCamp/action-slack-notify", "version": "v2", "shell": "bash"}]}]}
{"id": "67438059_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud functions deploy YOUR_FUNCTION_NAME --runtime=python39 --trigger-http\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth revoke", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67470928_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B package --file pom.xml", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67483023_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "67491129_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "steebchen/kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f path/to/your/kubernetes-manifests/\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67528833_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew sonarqube\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "enforce-updating-branches", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "status-check/update-branch-action", "version": "v1", "shell": "bash"}]}]}
{"id": "67564617_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-gcc", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "g++ -o my_program main.cpp\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67586055_0", "jobs": [{"name": "split-commit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Get the commit message from the latest commit\nCOMMIT_MESSAGE=$(git log --format=%B -n 1 $GITHUB_SHA)\n\n# Split the commit message into multiple messages based on a delimiter\nIFS='||' read -r -a COMMIT_MESSAGES <<< \"$COMMIT_MESSAGE\"\n\n# Loop through the split messages and commit each separately\nfor message in \"${COMMIT_MESSAGES[@]}\"; do\n  git commit --allow-empty -m \"$message\"\ndone\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "67586550_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-swift", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "swift build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67587419_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rtCamp/action-slack-notify", "version": "v2", "shell": "bash"}]}]}
{"id": "67589973_0", "jobs": [{"name": "trigger", "steps": [{"type": "gh_action", "cmd": "", "name": "repo-sync/pull-request-dispatch", "version": "v2", "shell": "bash"}]}]}
{"id": "67603580_0", "jobs": [{"name": "tmate", "steps": [{"type": "gh_action", "cmd": "", "name": "mxschmitt/action-tmate", "version": "v3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Connect to this GitHub Actions build via \\`ssh ${{ secrets.TMATE_SSH }} -p ${{ secrets.TMATE_PORT }}\\`\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67650465_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "xu-cheng/gh-action-setup-tex", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pdflatex -interaction=nonstopmode your_tex_file.tex\nmv your_tex_file.pdf output/\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.email \"actions@github.com\"\ngit config user.name \"GitHub Actions\"\ncp ./external-repo/your_tex_file.pdf ./external-repo\ngit add .\ngit commit -m \"Add PDF artifact\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67687525_0", "jobs": [{"name": "run_gcloud", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth list\ngcloud config list\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67691228_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "swift", "version": "latest", "shell": "bash"}, {"type": "shell_cmd", "cmd": "swift package resolve", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "swift build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "swift test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67700734_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Install Salesforce CLI\nwget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz\nmkdir sfdx\ntar xJf sfdx-linux-x64.tar.xz -C sfdx --strip-components 1\n./sfdx/install\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sfdx-actions/setup-sfdx", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your Salesforce CLI commands here\nsfdx force:org:list\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Clean up any temporary files or resources\nrm -rf sfdx\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67703839_0", "jobs": [{"name": "change-author", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.name \"New Author Name\"\ngit config user.email \"newauthor@example.com\"\ngit add -A\ngit commit --amend --no-edit --reset-author\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/push-action", "version": "master", "shell": "bash"}]}]}
{"id": "67733762_0", "jobs": [{"name": "access-gcloud", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "main", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud config set project your-project-id\n# Add your gcloud commands here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67804286_0", "jobs": [{"name": "gitleaks", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "secureCodeBox/gitleaks-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gitleaks --path=. --verbose", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67820855_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "xu-cheng/latex-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp $GITHUB_WORKSPACE/main.pdf $GITHUB_WORKSPACE/my_latex_document.pdf\ngit config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add my_latex_document.pdf\ngit commit -m \"Add compiled PDF to repository\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67822339_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update && sudo apt-get install -y devscripts debhelper dput", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "debuild -us -uc", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/gh-action-dput", "version": "v1", "shell": "bash"}]}]}
{"id": "67835365_2", "jobs": [{"name": "job1", "steps": []}, {"name": "job2", "steps": []}]}
{"id": "67836184_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o ./publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "67852373_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "w9jds/firebase-action", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "FirebaseExtended/action-hosting-deploy", "version": "v0", "shell": "bash"}]}]}
{"id": "67873244_0", "jobs": [{"name": "run-databricks-notebook", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "k3n/databricks-api-notebook-run", "version": "v1", "shell": "bash"}]}]}
{"id": "67892543_0", "jobs": [{"name": "sonarcloud", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet tool install --global coverlet.console", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test --no-build --collect:\"XPlat Code Coverage\" --settings coverlet.runsettings", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "coverlet My.Project.Tests.dll --target \"dotnet\" --targetargs \"test --no-build\" --format opencover", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet sonarscanner begin /k:\"Your_Project_Key\" /d:sonar.login=\"${{ secrets.SONAR_TOKEN }}\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet sonarscanner end /d:sonar.login=\"${{ secrets.SONAR_TOKEN }}\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "6790167_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "warrenbuckley/Setup-MSBuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nuget restore YourSolution.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild YourSolution.sln /p:Configuration=Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vstest.console.exe YourSolution.Tests.dll", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "67909742_0", "jobs": [{"name": "acceptance-tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/codecept run acceptance --no-exit -g snapshot", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/codecept run acceptance", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67959657_0", "jobs": [{"name": "tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer create-project symfony/symfony --no-install --no-scripts --no-plugins", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd tests/symfony\ngit checkout <Symfony version>  # Replace <Symfony version> with the desired version, e.g., 5.3.x\ncomposer install --no-scripts --no-plugins --no-progress\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd tests/your-bundle-directory\n# Command to run your tests goes here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67964110_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build web", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"$SSH_PRIVATE_KEY\" > ssh_key\nchmod 600 ssh_key\nscp -r -i ssh_key build/ user@example.com:/path/to/destination\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67966349_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Define the PowerShell script to check the solution\n$result = powershell -File ./solution_checker.ps1\n\n# Check the result of the PowerShell script\nif ($result -eq 0) {\n  Write-Host \"Solution checker passed successfully\"\n} else {\n  Write-Error \"Solution checker failed. Check the logs for details.\"\n  exit 1\n}\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "67996484_0", "jobs": [{"name": "create_folder", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir my_folder", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Create my_folder using GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "68008181_0", "jobs": [{"name": "get-secrets", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Write-Host \"Setting secrets as environment variables\"\nforeach ($secret in $env:{{ secrets }}.GetEnumerator()) {\n  $name = $secret.Name\n  $value = $secret.Value\n  Write-Host \"::add-mask::$value\"\n  Write-Host \"Setting $name\"\n  Write-Host (\"::set-env name={0}::{1}\" -f $name, $value)\n}\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Write-Host \"Checking if secrets are accessible as environment variables\"\nGet-ChildItem env:\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Write-Host \"Accessing secrets as environment variables\"\n$mySecret = $env:MY_SECRET\nWrite-Host \"My secret value: $mySecret\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68027331_0", "jobs": [{"name": "merge_and_build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo 'build/' >> .gitignore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.email \"<YOUR-GITHUB-EMAIL>\"\ngit config user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Update .gitignore file\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/push-to-another-repository", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your build commands here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68048790_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p ~/Library/MobileDevice/Provisioning\\ Profiles\necho \"$CERTIFICATES_P12\" | base64 --decode > certificate.p12\necho \"$PROFILE_MOBILEPROVISION\" | base64 --decode > profile.mobileprovision\n\nsecurity create-keychain -p \"password\" ios-build.keychain\nsecurity import certificate.p12 -k ~/Library/Keychains/ios-build.keychain -P \"certificate-password\" -T /usr/bin/codesign\nsecurity list-keychains -s ios-build.keychain\nsecurity unlock-keychain -p \"password\" ios-build.keychain\nsecurity set-keychain-settings -t 3600 -l ~/Library/Keychains/ios-build.keychain\ncp profile.mobileprovision ~/Library/MobileDevice/Provisioning\\ Profiles/\necho \"Certificates and provisioning profiles installed successfully\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourApp -configuration Release archive -archivePath build/YourApp\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath \"build/YourApp.xcarchive\" -exportOptionsPlist ExportOptions.plist -exportPath build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "68089250_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v3", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pip install --upgrade google-cloud-bigquery\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands here to interact with BigQuery (e.g., bq query, etc.)\n# Example: bq query --use_legacy_sql=false 'SELECT name FROM `bigquery-public-data.samples.shakespeare` LIMIT 5'\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68093684_0", "jobs": [{"name": "merge-block", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "genericmoniker/wait-for-status", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Status check success. Ready to merge!\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Status check failed. Cannot merge yet.\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68137965_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install -y mysql-client", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -h 127.0.0.1 -u root --password=root -e \"CREATE DATABASE IF NOT EXISTS testdb;\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require --dev phpunit/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/phpunit/phpunit/phpunit tests/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -h 127.0.0.1 -u root --password=root testdb -e \"DELETE FROM your_table;\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68150342_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "steebchen/kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f path/to/your/kubernetes/manifests", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68168065_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-docker", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t my-docker-image .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run my-docker-image", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68228183_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "LAST_RUN_STATUS=$(curl -s -u ${{ secrets.GITHUB_TOKEN }} -H \"Accept: application/vnd.github.v3+json\" https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs | jq -r '.workflow_runs[0].conclusion')\nif [[ $LAST_RUN_STATUS == \"success\" ]]; then\n  echo \"::set-output name=skip::true\"\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": null, "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68249660_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-texlive", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "tlmgr install graphics-def\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"$LATEX_CONTENT\" | base64 -d > main.tex\npdflatex -interaction=nonstopmode main.tex\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "68257594_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install -y postgresql-client\ngem install bundler\nbundle install\nnpm install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake db:create RAILS_ENV=test\nbundle exec rake db:migrate RAILS_ENV=test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68260575_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update && sudo apt-get install -y libsqlite3-dev\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install mailcatcher\nmailcatcher --ip=0.0.0.0\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68355482_0", "jobs": [{"name": "decrypt-secret-values", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"$GPG_SECRET_KEY\" | gpg --batch --yes --decrypt --passphrase-fd 0 secret-values.enc > secret-values.yaml\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/aks-set-context", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f secret-values.yaml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68356013_0", "jobs": [{"name": "build-and-deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install -g expo-cli", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "expo login -u ${{ secrets.EXPO_USERNAME }} -p ${{ secrets.EXPO_PASSWORD }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "expo build:web", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "crazy-max/ghaction-github-pages", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "w9jds/firebase-action", "version": "master", "shell": "bash"}]}]}
{"id": "68367787_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysql -h 127.0.0.1 -u root -ppassword -e \"CREATE DATABASE IF NOT EXISTS behat_test;\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/behat", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68369654_0", "jobs": [{"name": "vpn_access", "steps": [{"type": "gh_action", "cmd": "", "name": "corollari/vpn-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ping -c 4 github.yourcompany.com\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68373383_0", "jobs": [{"name": "replace-folder", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-cloud-storage", "version": "v0", "shell": "bash"}]}]}
{"id": "68391693_0", "jobs": [{"name": "my_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}]}]}
{"id": "68395715_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=result::$(pwsh -Command 'Write-Output ($true)')\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Condition is True, marking stage as unstable\"", "name": "", "version": "", "shell": "bash"}]}, {"name": "test", "steps": [{"type": "shell_cmd", "cmd": "echo \"Running tests...\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68425655_0", "jobs": [{"name": "format", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install @markdownlint-cli@3 prettier@2", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npx markdownlint . --fix\nnpx prettier --write '**/*.md'\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"<your-email>\"\ngit config --local user.name \"<your-username>\"\ngit add .\ngit commit -m \"Auto-format markdown and code\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "68429943_0", "jobs": [{"name": "prevent-deletion", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "warrenbuckley/setup-kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl get namespaces -o=jsonpath='{range .items[?(@.status.phase!=\"Terminating\")]}{.metadata.name}{\\\"\\n\\\"}{end}'\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [ \"$(echo ${{ steps.check-namespaces.outputs.stdout }})\" != \"\" ]; then\n  echo \"Unempty namespaces found. Aborting deletion.\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl get namespaces -o=jsonpath='{range .items[?(@.status.phase==\"Terminating\")]}{.metadata.name}{\\\"\\n\\\"}{end}' | xargs -I{} kubectl delete namespace {}\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68430171_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68440447_0", "jobs": [{"name": "lighthouse", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "IcaliaLabs/action-setup-chrome", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "CHROME_BIN=$(which google-chrome-stable) npx lighthouse https://example.com --emulated-form-factor=none --output html --output-path=./report.html\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "68450267_0", "jobs": [{"name": "send_email", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v3", "shell": "bash"}]}]}
{"id": "68481746_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud config set project your-target-project-id\ngcloud builds submit --tag gcr.io/your-target-project-id/your-app\ngcloud app deploy --image-url gcr.io/your-target-project-id/your-app\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68505187_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "OUTPUT_FILE=README.md\nCOLUMNS=3\nROWS=4\necho \"| Header 1 | Header 2 | Header 3 |\" > $OUTPUT_FILE\necho \"|:---:|:---:|:---:|\" >> $OUTPUT_FILE\nfor ((i=1; i<=$ROWS; i++)); do\n  for ((j=1; j<=$COLUMNS; j++)); do\n    echo -n \"| Cell $i$j \" >> $OUTPUT_FILE\n  done\n  echo \"|\" >> $OUTPUT_FILE\ndone\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.name \"GitHub Actions\"\ngit config user.email \"<>\"\ngit add README.md\ngit commit -m \"Generate equally distributed columns and rows\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "68542499_0", "jobs": [{"name": "assign_variable_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud [YOUR_GCLOUD_COMMAND] > gcloud_output.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=gcloud_output::$(cat gcloud_output.txt)\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"The value from gcloud command is ${{ steps.set_variable.outputs.gcloud_output }}\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68550711_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jurplel/setup-qt", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "qmake -qt=qt5\nmake\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "68551982_0", "jobs": [{"name": "create_pull_request", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peter-evans/create-pull-request", "version": "v3", "shell": "bash"}]}, {"name": "merge_pull_request", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "repo-sync/github-sync", "version": "v2", "shell": "bash"}]}]}
{"id": "68570682_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run lint", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "amondnet/vercel-deployment", "version": "v1", "shell": "bash"}]}]}
{"id": "68577959_0", "jobs": [{"name": "store_credentials", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"username_account1\" > /run/secrets/account1_username\necho \"password_account1\" > /run/secrets/account1_password\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"username_account2\" > /run/secrets/account2_username\necho \"password_account2\" > /run/secrets/account2_password\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dpacbach/stapram", "version": null, "shell": "bash"}]}]}
{"id": "68610772_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install -g @angular/cli", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ng build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "aws-actions/configure-aws-credentials", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "aws s3 sync dist/ s3://your-bucket-name", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68628352_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl create namespace your-namespace-name", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f path/to/kubernetes/deployment.yaml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68637189_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "pazicode/actions/aws-lambda-deploy", "version": "v1", "shell": "bash"}]}]}
{"id": "68653951_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.SSH_PRIVATE_KEY }}\" > ~/.ssh/id_rsa\nchmod 600 ~/.ssh/id_rsa\nssh-keyscan -t rsa your-server-ip >> ~/.ssh/known_hosts\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require deployer/deployer --dev\nvendor/bin/dep deploy production\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rm ~/.ssh/id_rsa\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68660589_0", "jobs": [{"name": "update_portfolio_url", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i 's|old-portfolio-url|new-portfolio-url|g' your-portfolio-file.html\ngit add your-portfolio-file.html\ngit commit -m \"Update portfolio URL\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "68662824_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "ls owner/dependency-repo", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68680491_0", "jobs": [{"name": "clone_public_repo", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clone https://github.com/<USER>/<PUBLIC_REPO>.git temp_public_repo", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mv temp_public_repo/* .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Cloned public repository to enterprise repo\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "68692337_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "lukka/get-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clone https://github.com/microsoft/vcpkg.git\ncd vcpkg\n./bootstrap-vcpkg.sh\n./vcpkg integrate install\n./vcpkg install pugixml\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\ncmake --build .\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd build\nctest --verbose\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68712163_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/compose-cli-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "export DOCKER_HOST=ssh://username@remote-host\nexport DOCKER_CONTEXT=remote-context\ndocker context use $DOCKER_CONTEXT\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker-compose up -d\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68719241_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/setup-kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.DOCKERHUB_TOKEN }}\" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t yourdockerhubusername/yourimage:latest .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker push yourdockerhubusername/yourimage:latest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f deployment.yaml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68767043_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t your_image_name .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "tar -czvf image.tar.gz your_image_name", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "s3://your-s3-bucket", "version": null, "shell": "bash"}]}]}
{"id": "68787401_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "v0.1.3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth configure-docker", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t gcr.io/your-project-id/your-image-name:latest .\ndocker push gcr.io/your-project-id/your-image-name:latest\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud compute instances reset your-instance --zone=your-zone\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68827006_0", "jobs": [{"name": "start-stop-application", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mmarket/argocd", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "argocd app list", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "argocd app enable my-app", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "argocd app disable my-app", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68830439_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane firebase_distribution", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "68831333_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run test -- --coverage", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run coveralls", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "coverallsapp/github-action", "version": "master", "shell": "bash"}]}]}
{"id": "68872757_0", "jobs": [{"name": "renovate", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "renovateapp/renovate-action", "version": "v1", "shell": "bash"}]}]}
{"id": "68938839_0", "jobs": [{"name": "filter_commits_job", "steps": [{"type": "gh_action", "cmd": "", "name": "keremciu/github-action-filter-commits", "version": "v1", "shell": "bash"}]}]}
{"id": "6896644_0", "jobs": [{"name": "restart_apache", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer global require phing/phing", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php /path/to/your/phing/script/restart_apache.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69005895_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud app deploy --quiet", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69009239_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake db:create RAILS_ENV=test\nbundle exec rake db:migrate RAILS_ENV=test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails server -e production > /dev/null 2>&1 & echo $! > tmp/pids/server.pid", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sh -c 'while ! nc -z localhost 3000; do sleep 1; done'", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kill -9 `cat tmp/pids/server.pid` && rm -f tmp/pids/server.pid", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69031511_0", "jobs": [{"name": "psscriptanalyzer", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Invoke-ScriptAnalyzer -Path . -Recurse | Format-Table -AutoSize -Wrap", "name": "", "version": "", "shell": "pwsh"}]}]}
{"id": "69043557_0", "jobs": [{"name": "analyze_code", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Perform necessary upgrade steps from CI3 to CI4\n# Reuse CodeIgniter 4 Active Record or convert CI3 queries\n\n# For example, you can run CodeIgniter 4 migration scripts here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69057720_0", "jobs": [{"name": "setup-runner", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "aws-actions/configure-aws-credentials", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "aws ec2 run-instances --image-id your-ami-id \\\n  --instance-type your-instance-type \\\n  --key-name your-key-name \\\n  --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=GitHub-Runner}]' \\\n  --block-device-mappings DeviceName=/dev/sda1,Ebs={VolumeSize=30} \\\n  --subnet-id your-subnet-id \\\n  --security-group-ids your-security-group-id \\\n  --iam-instance-profile Name=your-instance-profile\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Write a script to wait for the EC2 instance to be in 'running' state and get its public IP\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/runner-registration", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Write a script to clean up resources (e.g., terminate the EC2 instance) after the job\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69085450_0", "jobs": [{"name": "check-lockable-resource", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jenkinsci/lockable-resources", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [[ -n \"$LOCKABLE_RESOURCES_LOCKED_files_my-lockable-resource\" ]]; then\n  echo \"Resource is locked, job is waiting.\"\n  echo \"::set-output name=waiting::true\"\nelse\n  echo \"Resource is available.\"\n  echo \"::set-output name=waiting::false\"\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [[ \"${{ steps.check-lock.outputs.waiting }}\" == \"true\" ]]; then\n  echo \"Job is waiting for the lockable resource.\"\n  # Perform actions for job waiting\nelse\n  echo \"Job is not waiting for the lockable resource.\"\n  # Perform actions for job not waiting\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69088200_0", "jobs": [{"name": "send_notification", "steps": [{"type": "gh_action", "cmd": "", "name": "gr2m/success", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "gr2m/failure", "version": "v1", "shell": "bash"}]}]}
{"id": "69097834_0", "jobs": [{"name": "encrypt", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "openssl aes-256-cbc -salt -in private-file.txt -out private-file.txt.enc -pass pass:$AES_KEY\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add private-file.txt.enc\ngit commit -m \"Add encrypted private file\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}, {"name": "decrypt", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "openssl aes-256-cbc -d -in private-file.txt.enc -out private-file.txt -pass pass:$AES_KEY\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cat private-file.txt\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69105360_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleRelease", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mv app/build/outputs/apk/release/app-release.apk ${{ github.workspace }}/release/", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "69108420_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jacob1/actions-setup-cmake", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jurplel/setup-qt", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -E make_directory build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -S . -B build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69177488_0", "jobs": [{"name": "check_status", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": null, "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": null, "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69190412_0", "jobs": [{"name": "add_reviewer", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "69193883_0", "jobs": [{"name": "tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --prefer-dist --no-progress", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mysqladmin shutdown || exit 0", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69247059_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Generate or build your static HTML file\necho \"<html><head><title>Hello, World!</title></head><body><h1>Welcome to my website</h1></body></html>\" > index.html\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add index.html\ngit commit -m \"Auto-populate static HTML file\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "69275058_0", "jobs": [{"name": "cypress-tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run cy:run", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy-to-vercel", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "amondnet/vercel-action", "version": "v20", "shell": "bash"}]}]}
{"id": "69284830_0", "jobs": [{"name": "integration_tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "chmod +x gradlew", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew integrationTest -Dkafka.bootstrapServers=localhost:9092", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69296314_0", "jobs": [{"name": "dropdown_example_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions-hub/dropdown", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Selected option is ${{ steps.select_option.outputs.selected_option }}\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69299283_0", "jobs": [{"name": "get-job-runs", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ steps.get-job-runs.outputs.data }}\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69301759_0", "jobs": [{"name": "build_and_test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chmod +x gradlew", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleDebug", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-gcloud", "version": "v0.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud config set project <YOUR_PROJECT_ID>\ngcloud firebase test android run \\\n  --type instrumentation \\\n  --app app/build/outputs/apk/debug/app-debug.apk \\\n  --test app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk \\\n  --device model=Nexus6,version=21\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69321365_2", "jobs": [{"name": "stage1", "steps": []}, {"name": "stage2", "steps": []}]}
{"id": "69343777_0", "jobs": [{"name": "trigger_actions", "steps": [{"type": "gh_action", "cmd": "", "name": "brunowego/github-action-api", "version": "v1", "shell": "bash"}]}]}
{"id": "69354058_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v3", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourWorkspace.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,OS=14.2,name=iPhone 12' build test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69357027_0", "jobs": [{"name": "run_gcp_task", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your GCP task commands here\ngcloud <YOUR_GCP_COMMANDS_HERE>\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69384248_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud compute scp --recurse . user@your-instance-ip:/var/www/html\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69412201_0", "jobs": [{"name": "branch-protection", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "github-script", "version": "v4", "shell": "bash"}]}]}
{"id": "69415433_0", "jobs": [{"name": "rubocop", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem update --system\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rubocop\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69417713_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails db:create\nbundle exec rails db:schema:load\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69440446_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/setup-dart", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dart pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dart pub publish --dry-run", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dart pub publish --force", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Package published successfully!\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69455108_0", "jobs": [{"name": "install-certificates", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane match ad-hoc", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69469079_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "owner/repo", "version": "main", "shell": "bash"}]}]}
{"id": "69520385_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python -m pip install --upgrade pip\npip install -r requirements.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python manage.py makemigrations\npython manage.py migrate\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "lukasmrtvy/pythonanywhere-deploy-action", "version": "master", "shell": "bash"}]}]}
{"id": "69529042_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourScheme build test CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourScheme archive CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69540563_0", "jobs": [{"name": "check-qt-qbs-compatibility", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "qarmin/setup-qmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wget https://github.com/qbs/qbs/releases/download/v1.17.1/qbs-1.17.1-linux-ubuntu-20.04-x86_64.tar.gz\ntar -xzf qbs-1.17.1-linux-ubuntu-20.04-x86_64.tar.gz\nexport PATH=$PWD/qbs-1.17.1-linux-ubuntu-20.04-x86_64/bin/:$PATH\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "qbs setup-toolchains --detect\nqbs setup-qt $(which qmake) qt\nqbs config profiles.qt.baseProfile qt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "qbs build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "qbs run", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69624328_0", "jobs": [{"name": "cypress", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm start &", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "timeout 10 bash -c 'until curl -s http://localhost:3000; do sleep 1; done'\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "cypress-io/github-action", "version": "v2", "shell": "bash"}]}]}
{"id": "69636283_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec fastlane your_fastlane_lane_here", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69677149_0", "jobs": [{"name": "update-status-url", "steps": [{"type": "gh_action", "cmd": "", "name": "pullreminders/merge-conductor-action", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/github-script", "version": "v4", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add README.md\ngit commit -m \"Update build status image URL after PR merge\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69693966_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud builds submit --config=cloudbuild.yaml .\ngcloud beta run deploy your-service --image gcr.io/$GOOGLE_CLOUD_PROJECT/your-image\ngsutil cp -r * gs://your-bucket/your-folder\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69761241_0", "jobs": [{"name": "restore-head", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout <commit_id>", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/push-to-another-repository", "version": "v1", "shell": "bash"}]}]}
{"id": "69783572_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install\nnpm run build\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nklayman/actions-setup-electron", "version": "v2.4.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"REACT_APP_MY_VAR=your_value\" >> $GITHUB_ENV\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run electron-pack\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add ssh key to the agent\necho \"$SSH_PRIVATE_KEY\" > key\nchmod 600 key\neval \"$(ssh-agent -s)\"\nssh-add key\n\n# Run deployment script\n./deploy-script.sh\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69787722_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "SwiftActions/setup-swift", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Run your custom script or commands to build DocC documentation using the CLI\n# For example:\n# '/path/to/docc build /path/to/documentation'\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "69791077_0", "jobs": [{"name": "cypress-xray", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run cypress:run", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Atlassian/gajira-upload-test-results-action", "version": "v3", "shell": "bash"}]}]}
{"id": "69794620_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "jakejarvis/s3-sync-action", "version": "v0.5.0", "shell": "bash"}]}]}
{"id": "69837982_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleDebug", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ilaborie/slack-upload-file", "version": "v1", "shell": "bash"}]}]}
{"id": "69840667_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "aws-actions/configure-aws-credentials", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "clowdhaus/github-action-fargate-deploy", "version": "v1", "shell": "bash"}]}]}
{"id": "69848961_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "lukka/get-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -B build -S .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build --target test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69852476_0", "jobs": [{"name": "start_container", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-docker", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t mydatabase .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run -d --name mydatabase -v /path/to/config.conf:/config.conf mydatabase", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69870994_0", "jobs": [{"name": "rubocop", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install rubocop", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rubocop", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69872861_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "geekytime/semantic-release-action", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "69890770_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cpp", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Replace 'your_header_only_library_folder' with the actual folder in your repository\ncd your_header_only_library_folder\nmake\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69908731_0", "jobs": [{"name": "remove-api-key", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i.bak '/API_KEY/d' app/src/main/res/values/strings.xml\ngit add app/src/main/res/values/strings.xml\ngit commit -m \"Remove API key from project\" || exit 0\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "69912570_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-dev --optimize-autoloader", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan storage:link && php artisan view:cache && php artisan route:cache", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "SamKirkland/FTP-Deploy-Action", "version": "4.0.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "lftp -e \"mirror -R -e -x .git -x public -x .github -x .gitignore -x .env; exit\" -u ${{ secrets.SHARED_HOST_USERNAME }},$SHARED_HOST_PASSWORD your_host your_remote_path\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69917361_0", "jobs": [{"name": "run-e2e-tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl wait --for=condition=Available deployment/your-app --timeout=300s\n# Run your e2e tests command here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69930145_0", "jobs": [{"name": "set_env_variables", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ::set-output name=variable1::${{ github.event.inputs.variable1 }}\necho ::set-output name=variable2::${{ github.event.inputs.variable2 }}\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/kubectl", "version": "master", "shell": "bash"}]}]}
{"id": "69989987_0", "jobs": [{"name": "maintain_cache", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "bazelbuild/setup-bazel", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p ~/bazel_cache\ncurl -L https://github.com/username/repo/actions/cache/cache-v1.tar.gz | tar xz -C ~/bazel_cache\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bazel build //...", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd ~/bazel_cache\ntar czf cache.tar.gz *\necho $(ls)\ncurl -X POST \\\n  -H \"Authorization: token ${{ secrets.GITHUB_TOKEN }}\" \\\n  -H \"Accept: application/vnd.github.v3+json\" \\\n  -H \"Content-Type: application/gzip\" \\\n  --data-binary @cache.tar.gz \\\n  \"https://api.github.com/repos/username/repo/actions/cache\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "69992744_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=is_prerelease::true\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": null, "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70038071_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"echo getenv('SECRET_KEY');\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70044604_0", "jobs": [{"name": "identify-codemagic-account", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v4", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Checking for Codemagic account...\"\nif [ -n \"$CODMAGIC_VAR\" ]; then\n  echo \"Codemagic account identified.\"\n  # Perform operations specific to Codemagic account\nelse\n  echo \"Not running on a Codemagic environment.\"\n  # Handle cases where the workflow is not running on Codemagic\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70061681_0", "jobs": [{"name": "build1", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "aws-actions/aws-codebuild-run-build", "version": "v2", "shell": "bash"}]}, {"name": "build2", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "aws-actions/aws-codebuild-run-build", "version": "v2", "shell": "bash"}]}]}
{"id": "70098241_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "my-org/my-composite-action", "version": "v1", "shell": "bash"}]}]}
{"id": "70119692_0", "jobs": [{"name": "build-and-deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-hugo", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "hugo --minify", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "70123655_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails db:create\nbundle exec rails db:schema:load\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails test\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "lint", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rubocop", "name": "", "version": "", "shell": "bash"}]}, {"name": "bullet", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install --jobs 4 --retry 3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails db:create\nbundle exec rails db:schema:load\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec -t bullet\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70151645_0", "jobs": [{"name": "trigger_dispatch", "steps": [{"type": "gh_action", "cmd": "", "name": "peter-evans/workflow-dispatch", "version": "v1", "shell": "bash"}]}]}
{"id": "70154663_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Environment variables set\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud run deploy YOUR_SERVICE_NAME --platform=managed --image=gcr.io/PROJECT_ID/IMAGE_NAME --region=REGION --allow-unauthenticated --update-env-vars ENV_VAR1=value1,ENV_VAR2=value2", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70160795_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/azure-devops-cli-action", "version": "v1", "shell": "bash"}]}]}
{"id": "7016307_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourSchemeName -project YourProject.xcodeproj -configuration Release build\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70173210_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run --name mysql -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=prisma -p 3306:3306 -d mysql:latest\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "elgohr/await-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npx prisma generate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npx prisma migrate dev --create-db --experimental", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker stop mysql", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70182907_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/setup-helm", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=sha::$(echo ${{ github.sha }} | cut -c1-8)\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm upgrade --install my-release ./path/to/chart --set commitSha=${{ steps.commit_sha.outputs.sha }}", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70220114_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70221020_0", "jobs": [{"name": "test_and_build", "steps": [{"type": "gh_action", "cmd": "", "name": "#my_reusable_steps", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "#my_reusable_steps", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Deploying to production...\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70240570_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo '# New Page' > newpage.md", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp index.md newpage.md", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"your-email@example.com\"\ngit config --global user.name \"Your Name\"\ngit add .\ngit commit -m \"Add new page\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "70253582_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "70286889_0", "jobs": [{"name": "cypress-run", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "cypress-io/github-action", "version": "v2", "shell": "bash"}]}]}
{"id": "70292639_0", "jobs": [{"name": "notify_reviewer", "steps": [{"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v3", "shell": "bash"}]}]}
{"id": "70339780_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python -m pip install --upgrade pip\npip install -r requirements.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "coverage run --source=. -m pytest\ncoverage xml\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "coverallsapp/github-action", "version": "v1.1.2", "shell": "bash"}]}]}
{"id": "70363724_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -v", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70364549_0", "jobs": [{"name": "check_running_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "crazy-max/ghaction-github-api", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "jobs_running=0\nfor i in {0..5}; do\n  status=$(echo \"${{ steps.check_job.outputs.result }}\" | jq -r \".workflow_runs[${i}].name\")\n  if [ \"$status\" = \"Your Job Name\" ]; then\n    jobs_running=$((jobs_running+1))\n  fi\ndone\necho \"Jobs running with the same name: $jobs_running\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70381022_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "aws-actions/aws-codebuild-run-build", "version": "v2", "shell": "bash"}]}]}
{"id": "70386650_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-docker", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t my-docker-image .\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run -d \\\n  -v $(pwd)/source:/app/source \\\n  -v $(pwd)/destination:/app/destination \\\n  my-docker-image\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70396978_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"API_KEY=$API_KEY\" > $GITHUB_WORKSPACE/.env\nflutter build apk\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70411844_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "denolib/setup-deno", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "deno test --coverage=\"./coverage\" --unstable --xml=\"./test-results.xml\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get -y install xsltproc", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xsltproc -o junit-test-results.xml /usr/share/xml/xsl/html/docbook.xsl test-results.xml", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "70437121_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-lua", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Invoke-WebRequest \"https://luarocks.org/releases/luarocks-3.8.0-win32.zip\" -OutFile luarocks.zip\nExpand-Archive luarocks.zip -DestinationPath $env:ProgramFiles\nRemove-Item luarocks.zip\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "$env:Path += \";${env:ProgramFiles}\\luarocks-3.8.0-win32\"\n[Environment]::SetEnvironmentVariable('Path', $env:Path, 'Machine')\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "luarocks install luasocket", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70444204_0", "jobs": [{"name": "sftp_upload", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clean -xdf\ngit reset --hard\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "tanujsingh1309/sftp-deploy-action", "version": "v2", "shell": "bash"}]}]}
{"id": "70450908_0", "jobs": [{"name": "send-notification", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your notification sending logic here\necho \"Sending notification for scheduled job execution.\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rtCamp/action-slack-notify", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v2", "shell": "bash"}]}]}
{"id": "70459818_0", "jobs": [{"name": "add_and_commit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python -m pip install --upgrade pip\npip install -r requirements.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python your_python_script.py", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git commit -m \"Automated commit from GitHub Actions\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "70470970_0", "jobs": [{"name": "setup", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp .env.example .env", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan key:generate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan config:cache", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan migrate --seed", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70494868_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest --no-interaction", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require --dev phpunit/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70502384_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "crazy-max/ghaction-jest", "version": "v2", "shell": "bash"}]}]}
{"id": "70543104_0", "jobs": [{"name": "view-netlify-deploy-url", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=deploy_url::https://your-netlify-site.netlify.app\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "repo-sync/comment-pull-request", "version": "v2", "shell": "bash"}]}]}
{"id": "70564759_0", "jobs": [{"name": "add-gitignore", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "touch .gitignore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .gitignore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit commit -m \"Add .gitignore file\" -a\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "70590449_0", "jobs": [{"name": "generate_migration_script", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nellshamrell/mysql-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "apt update\napt install -y mysql-client\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "SCHEMAS=(\"microservice1\" \"microservice2\")\nfor schema in \"${SCHEMAS[@]}\"; do\n  mysqldump -d -u ${{ secrets.DB_ROOT_USERNAME }} -p\"${{ secrets.DB_ROOT_PASSWORD }}\" $schema > \"${schema}_migration.sql\"\ndone\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add *_migration.sql\ngit commit -m \"Generate migration scripts\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70594453_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/setup-buildx-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.DOCKER_PASSWORD }}\" | docker login -u \"${{ secrets.DOCKER_USERNAME }}\" --password-stdin docker.io", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t docker.io/yourusername/yourapp:latest .\ndocker push docker.io/yourusername/yourapp:latest\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/aks-set-context", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f deployment.yaml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70619949_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-interaction --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "akhileshns/heroku-deploy", "version": "v3.12.12", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git push https://heroku:$HEROKU_API_KEY@git.heroku.com/your-heroku-app-name.git HEAD:master\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70623758_0", "jobs": [{"name": "merge_and_auto_merge", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git remote add upstream https://github.com/${{ github.repository }}\ngit fetch upstream\ngit checkout -b auto-merge-branch upstream/master\ngit merge ${{ github.event.pull_request.head.ref }} --no-ff -m \"Auto-merging PR\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git push upstream auto-merge-branch\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=number::${{ github.event.pull_request.number }}\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "70623814_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -NV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ${{ secrets.FASTLANE_PASSWORD }} | base64 --decode > fastlane/.env", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane [YOUR_FASTLANE_LANE]", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70634734_0", "jobs": [{"name": "deploy_logic_app", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/login", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/arm-deploy", "version": "v1", "shell": "bash"}]}]}
{"id": "70637185_0", "jobs": [{"name": "auto_approve", "steps": [{"type": "gh_action", "cmd": "", "name": "thollander/github-action-changed-files", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/github-script", "version": "v5", "shell": "bash"}]}]}
{"id": "70646417_0", "jobs": [{"name": "deploy_policy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/login", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/arm-deploy", "version": "v1", "shell": "bash"}]}]}
{"id": "70655267_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "martinlindhe/setup-cmake", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "cclauss/setup-ninja", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake -S . -B build\ncmake --build build --target all\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70664840_0", "jobs": [{"name": "merge_dependabot_pr", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rlespinasse/github-squash-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Set CODEOWNERS file and branch protection rules\n# Add your commands here to update the CODEOWNERS file and branch protection rules\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo 'PR merged successfully'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70672715_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ruby -v", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70673363_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build apk --release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your publishing commands here\n# For example, publishing to Google Play Store or App Store\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70674737_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp path/to/source/file.txt path/to/destination/file.txt  # copy the source file to the destination\n# Add other commands to change the copied file if needed\nsed -i 's/original_text/modified_text/g' path/to/destination/file.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v0.6", "shell": "bash"}]}]}
{"id": "70687753_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "cirrus-actions/setup-flutter", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter analyze", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70690760_0", "jobs": [{"name": "download-artifact", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-download-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "70699702_0", "jobs": [{"name": "pr_comment_trigger", "steps": [{"type": "gh_action", "cmd": "", "name": "tzkhan/github-action-pr-comment", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your custom script or command here to execute when a comment is made on a pull request\necho \"PR comment was made. Performing the necessary actions.\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70706487_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -NV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane match init", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane match appstore -a com.example.app1 --readonly", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane match adhoc -a com.example.app2 --readonly", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane match", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane deploy app:app1", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane deploy app:app2", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70759594_0", "jobs": [{"name": "flutter_tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter test --coverage", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "genhtml coverage/lcov.info --output=coverage/", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "coverage_report", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-sarif", "version": "v1", "shell": "bash"}]}]}
{"id": "70781758_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o ${{github.workspace}}/publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "70782061_0", "jobs": [{"name": "git-to-slack", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git status\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rtCamp/action-slack-notify", "version": "v2", "shell": "bash"}]}]}
{"id": "70823851_0", "jobs": [{"name": "create_branch", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ::set-output name=branch_name::$(echo '${{ steps.get_comment.outputs.data }}' | jq -r '.[] | select(.id == '${{ github.event.comment.comment_id }}') | .body' | sed -n 's/^.*@start-feature-branch //p')", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b ${{ steps.extract_branch_name.outputs.branch_name }}", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70840481_0", "jobs": [{"name": "add-certificate", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p path/to/certificate/directory\ncp path/to/your/certificate.crt path/to/certificate/directory/\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Add corporate CA certificate\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "70855571_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "deitch/actions/setup-graalvm", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "export PATH=$PATH:/opt/graalvm-ce-java11-21.1.0.r11/bin\n./gradlew jibDockerBuild\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker push your-docker-registry/your-image-name", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70858697_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i 's+https://unpkg.com/codemirror@6.7.0/codemirror.min.css+https://cdn.jsdelivr.net/npm/codemirror@6.7.0/codemirror.min.css+' index.html\nsed -i 's+https://unpkg.com/codemirror@6.7.0/theme/base16-dark.css+https://cdn.jsdelivr.net/npm/codemirror@6.7.0/theme/base16-dark.css+' index.html\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add index.html\ngit commit -m \"Fix CodeMirror URLs\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "70867323_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install xcpretty\nbrew install imagesnap || true\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourApp.xcworkspace -scheme YourApp -destination 'platform=iOS Simulator,OS=14.0,name=iPhone 11' -enableCodeCoverage YES | xcpretty\nxcrun xctrace list devices | awk '/iPhone/{ print $3 }' | while read device ; do xcrun xctrace record --template TimeProfiler --devices $device --time-limit 20 --output xctrace/trace-$device.trace YourApp ; done\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p Baselines\nmv xctrace/*.trace Baselines\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70874396_0", "jobs": [{"name": "enable-workflows", "steps": [{"type": "shell_cmd", "cmd": "if [[ ${{ github.event.action }} != 'enable-workflows' ]]; then\n  echo \"This workflow runs only on enable-workflows event.\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "OctoLinker/api-enable-workflows", "version": "v1", "shell": "bash"}]}]}
{"id": "70893560_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "hashicorp/setup-elixir", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mix local.rebar --force && mix local.hex --force", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mix deps.get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mix test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70907287_0", "jobs": [{"name": "cache-clear", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-scripts --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php bin/console cache:clear", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add var\ngit commit -m \"Clear cache [skip ci]\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70907798_0", "jobs": [{"name": "upload-ftp", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "samuelmeuli/ftp-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "lftp -c \"open -u $FTP_USERNAME,$FTP_PASSWORD ftp.example.com; put -O / <file_path>\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70908132_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-dev --no-interaction --prefer-dist", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run production", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "SamKirkland/FTP-Deploy-Action", "version": "3.1", "shell": "bash"}]}]}
{"id": "70923388_0", "jobs": [{"name": "create_file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "touch new_file.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Hello, World!\" > new_file.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add new_file.txt\ngit commit -m \"Add new_file.txt via GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "70924438_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "puppet/setup-puppet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "puppet module install <module_name>", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "puppet parser validate .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "puppet-lint .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "puppet apply path/to/manifest.pp", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70928424_0", "jobs": [{"name": "concurrency-limit", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}, {"type": "shell_cmd", "cmd": "exit 78", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70949574_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Replace the actual code signing commands with your code, this is just an example\nxcodebuild -scheme YourAppScheme clean archive -archivePath MyArchive\nxcodebuild -exportArchive -archivePath MyArchive -exportPath ExportedApp -exportOptionsPlist ExportOptions.plist\n\n# Unlock keychain and codesign commands\nsecurity unlock-keychain -p \"${{ secrets.KEYCHAIN_PASSWORD }}\" login.keychain\ncodesign -s \"YourCertificateName\" path/to/your/app\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "security lock-keychain login.keychain\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70958448_0", "jobs": [{"name": "deploy-service-fabric", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "az login --service-principal -u ${{ secrets.AZURE_SP_APP_ID }} -p ${{ secrets.AZURE_SP_PASSWORD }} --tenant ${{ secrets.AZURE_TENANT_ID }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "$resourceGroupName = \"YOUR_RESOURCE_GROUP_NAME\"\n$clusterName = \"YOUR_CLUSTER_NAME\"\n$appName = \"YOUR_APPLICATION_NAME\"\n$serviceName = \"YOUR_SERVICE_NAME\"\n\nConnect-ServiceFabricCluster -ConnectionEndpoint \"YOUR_CONNECTION_ENDPOINT\" -X509Credential -ServerCertThumbprint \"YOUR_CERT_THUMBPRINT\" -FindType FindByThumbprint -FindValue \"YOUR_FIND_VALUE\" -StoreLocation \"LocalMachine\" -StoreName \"My\"\n\nStart-ServiceFabricApplicationUpgrade -ResourceGroupName $resourceGroupName -ClusterName $clusterName -ApplicationName $appName -ApplicationTypeVersion \"1.0.0\" -Monitored -FailureAction Rollback -ServiceFabricStandByTimeoutSec 600 -UpgradeTimeout 3600 -Force\n\nStart-ServiceFabricApplicationRollback -ResourceGroupName $resourceGroupName -ClusterName $clusterName -ApplicationName $appName -ServiceFabricStandByTimeoutSec 600 -Force\n\nStop-ServiceFabricApplicationUpgrade -ResourceGroupName $resourceGroupName -ClusterName $clusterName -ApplicationName $appName -FailureAction Rollback\n\nSet-ServiceFabricNodeState -NodeName \"_Node_0\" -NodeInstanceId \"131208839048332625\" -NodeState \"Disabled\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70980759_0", "jobs": [{"name": "review_file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your custom review script command here\n# For example, echo the content of a file\ncat path/to/file.txt\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70990301_0", "jobs": [{"name": "sync-actions", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "70991268_0", "jobs": [{"name": "sign_and_notarize_pkg", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "security create-keychain -p mysecretpassword build.keychain\nsecurity default-keychain -s build.keychain\nsecurity unlock-keychain -p mysecretpassword build.keychain\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "security import path/to/certificate.p12 -k ~/Library/Keychains/build.keychain -P certificate_password -T /usr/bin/codesign\nsecurity list-keychains -s ~/Library/Keychains/build.keychain\nsecurity find-identity -v\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "productbuild --distribution path/to/distribution.xml --package-path path/to/pkg_folder/ --sign \"Developer ID Installer: Your Developer ID\" signed.pkg\nproductsign --sign \"Developer ID Installer: Your Developer ID\" signed.pkg signed-and-notarized.pkg\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcrun altool --notarize-app -f signed-and-notarized.pkg --primary-bundle-id your.bundle.identifier -u \"your_apple_id\" -p \"your_app_specific_password\" --output-format xml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "70996923_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "samuelmeuli/ftp-deploy-action", "version": "4.0.0", "shell": "bash"}]}]}
{"id": "71020182_0", "jobs": [{"name": "test_mail_delivery", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install unzip\ncurl -sS https://getcomposer.org/installer | php\nphp composer.phar install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71032268_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd frontend\nnpm install\ncd ..\ndotnet restore\ndotnet build\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd frontend\nnpm test\ncd ..\ndotnet test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd frontend\nnpm run build\ncd ..\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "71037918_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS\ngcloud config set project $GCP_PROJECT_ID\ngcloud builds submit --tag gcr.io/$GCP_PROJECT_ID/$CLOUD_RUN_SERVICE_NAME $CLOUD_RUN_SUBFOLDER\ngcloud run deploy $CLOUD_RUN_SERVICE_NAME --image gcr.io/$GCP_PROJECT_ID/$CLOUD_RUN_SERVICE_NAME --platform managed\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71059872_0", "jobs": [{"name": "update-file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your script or command here to make changes to the file\necho \"Hello, World!\" > new_file.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add new_file.txt\ngit commit -m \"Update file via GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "71060675_0", "jobs": [{"name": "rspec", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install --jobs 4 --retry 3", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "COVERAGE=true bundle exec rspec --color --profile --format documentation\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71074242_0", "jobs": [{"name": "filter_commits", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Get the timestamp of the branch point commit\nBRANCH_POINT=$(git merge-base HEAD ${{ github.base_ref }})\n\n# Filter commits before the branch point\nCOMMITS=$(git rev-list $BRANCH_POINT..HEAD)\n\nif [ -n \"$COMMITS\" ]; then\n  git reset --hard $BRANCH_POINT\n  git push origin HEAD --force\n  echo \"Commits older than branch point have been filtered.\"\nelse\n  echo \"No old commits to filter.\"\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/push", "version": "v2", "shell": "bash"}]}]}
{"id": "71077939_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleDebug", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ilija132/slack-file-upload", "version": "v2", "shell": "bash"}]}]}
{"id": "71093275_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build ios --release --no-codesign", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "71129210_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Please review this pull request and provide feedback.\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Running build and tests...\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "71147118_0", "jobs": [{"name": "add-files-to-simulator", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,OS=latest,name=iPhone 12' test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your commands to copy files to the iOS simulator here\n# For example:\nxcrun simctl addenv <device-uuid> <environment-variable-name> <environment-variable-value>\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71155073_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=timestamp::$(date +%s)\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i \"s|url('.*')|url('path/to/your/stylesheet.css?$(echo ${{ steps.timestamp.outputs.timestamp }})')|g\" path/to/your/stylesheet.css", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/generate-lockdown-action", "version": "v2", "shell": "bash"}]}]}
{"id": "71160770_0", "jobs": [{"name": "build_and_deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pip install -r requirements.txt", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "71174459_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "conda-incubator/setup-miniconda", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "conda env create -f environment.yml", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "conda build .", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "conda activate myenv", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "conda install --file requirements.txt\nconda list\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71174891_0", "jobs": [{"name": "update-build-number", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python -m pip install --upgrade pip\npython -m pip install conda\nconda init bash\nsource ~/.bashrc\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Increment the build number\ncurrent_build_number=$(grep 'build' meta.yaml | awk '{print $2}' FS=' ' | tr -d '\"')\nnew_build_number=$((current_build_number+1))\nsed -i \"s/build: $current_build_number/build: $new_build_number/g\" meta.yaml\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add meta.yaml\ngit commit -m \"Update Anaconda build number\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "71177062_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "steebchen/kubectl", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"$KUBE_CONFIG_DATA\" | base64 -d > kubeconfig.yml", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f path/to/your/kubernetes/manifests", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71184715_0", "jobs": [{"name": "merge", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clone https://github.com/public/repo.git public_repo", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd public_repo\ngit remote add private_repo git@github.com:private/repo.git\ngit fetch private_repo\ngit merge private_repo/main --allow-unrelated-histories\ngit push private_repo HEAD:main\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "71194449_0", "jobs": [{"name": "fetch-api-versions", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rancher/k3s-action", "version": "v1.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl get --raw / 2>&1 | grep -o \"/v[0-9]*\" | sort | uniq\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71246950_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your Docker build and push commands here for each gem or microservice\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71248495_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "monostream/setup-helm", "version": "1.0.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm repo add stable https://charts.helm.sh/stable\nhelm dependency update ./path/to/your/helm/chart\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm lint ./path/to/your/helm/chart", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm install my-release ./path/to/your/helm/chart", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71251279_0", "jobs": [{"name": "laravel", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp .env.example .env", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan key:generate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan migrate --force", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71272885_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rm -rf .git\ngit init\ngit add .\ngit commit -m \"Initial commit without history\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/push", "version": "main", "shell": "bash"}]}]}
{"id": "71314082_0", "jobs": [{"name": "download-save", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -o downloaded_file.zip https://example.com/file.zip", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp downloaded_file.zip $GITHUB_WORKSPACE/downloaded_file.zip", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.email \"github-actions[bot]@users.noreply.github.com\"\ngit config user.name \"github-actions[bot]\"\ngit add downloaded_file.zip\ngit commit -m \"Add downloaded file\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "71362028_0", "jobs": [{"name": "add_labels", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/labeler", "version": "v2", "shell": "bash"}]}]}
{"id": "71381195_0", "jobs": [{"name": "sonarqube-analysis", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarqube-scan-action", "version": "master", "shell": "bash"}]}]}
{"id": "71409950_0", "jobs": [{"name": "print-inputs", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/javascript-action", "version": "v1", "shell": "bash"}]}]}
{"id": "71436442_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Bahjat/intellij-idea", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71438162_0", "jobs": [{"name": "cloud-build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "if [[ ${{ secrets.availablesecrets }} == \"unused\" ]]; then\n  echo \"availablesecrets is unused\"\n  exit 0\nelse\n  echo \"availablesecrets is being used\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud builds submit --config cloudbuild.yaml .\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71444350_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter clean", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build apk --flavor flavor1 --release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build apk --flavor flavor2 --release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -X POST -H \"Content-Type: application/json\" \\\n  -d '{\n    \"app\": { \"project_type\": \"flutter\", \"project_repo\": \"github\", \"project_slug\": \"${{ github.repository }}\", \"flavor\": \"flavor1\" }\n  }' \\\n  https://api.codemagic.io/builds\ncurl -X POST -H \"Content-Type: application/json\" \\\n  -d '{\n    \"app\": { \"project_type\": \"flutter\", \"project_repo\": \"github\", \"project_slug\": \"${{ github.repository }}\", \"flavor\": \"flavor2\" }\n  }' \\\n  https://api.codemagic.io/builds\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71457208_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ilammy/setup-clang", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake -G \"Visual Studio 16 2019\" -A x64 -DCMAKE_C_COMPILER=clang-cl -DCMAKE_CXX_COMPILER=clang-cl ..\ncmake --build . --config Release\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71479198_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php bin/console doctrine:database:create --if-not-exists", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php bin/console doctrine:migrations:migrate --no-interaction --all-or-nothing", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php bin/console doctrine:fixtures:load --no-interaction", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71482127_0", "jobs": [{"name": "generate_options", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=choices::$(cat choices.txt)\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"options: ${{ steps.read-choices.outputs.choices }}\" > options.yml\necho \"Dropdown options file generated successfully!\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "EndBug/add-and-commit", "version": "v7", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "EndBug/push", "version": "v1", "shell": "bash"}]}]}
{"id": "71482521_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --zone <GKE_CLUSTER_LOCATION> --project <YOUR_PROJECT_ID>\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f deployment.yaml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71498125_0", "jobs": [{"name": "migrate_and_seed", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp .env.example .env", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan key:generate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan migrate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan db:seed", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan serve --port=8000", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71524542_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "username/build-action", "version": "v1", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "username/deploy-action", "version": "v1", "shell": "bash"}]}]}
{"id": "71529879_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "github/static-web-apps-deploy", "version": "v0.0.1", "shell": "bash"}]}]}
{"id": "7153830_0", "jobs": [{"name": "feature-toggle", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php path/to/your/feature-toggle-tool.php", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71558639_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v${{ github.event.repository.owner.id }}", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install\nnpm test\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71570210_0", "jobs": [{"name": "swiftlint", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-swift", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clone https://github.com/realm/SwiftLint.git\ncd SwiftLint\ngit checkout 0.43.1\nswift build -c release\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./SwiftLint/.build/release/swiftlint lint\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71581444_0", "jobs": [{"name": "update_resource_version", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "steebchen/kubectl", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl set resources <resource_name> --resource-version='' --overwrite\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Update resource version\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71586216_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet tool install -g coverlet.console", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "coverlet ./YourProject.Tests/bin/Release/net5.0/YourProject.Tests.dll --target \"dotnet\" --targetargs \"test --no-build\" --format opencover", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet sonarscanner begin /k:\"your_project_key\" /d:sonar.login=\"${{ secrets.SONARCLOUD_TOKEN }}\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build\ndotnet test --collect:\"XPlat Code Coverage\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet sonarscanner end /d:sonar.login=\"${{ secrets.SONARCLOUD_TOKEN }}\"", "name": "", "version": "", "shell": "bash"}]}, {"name": "sonarcloud-check", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "71589366_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71589842_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleRelease", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "w9jds/firebase-upload-action", "version": "master", "shell": "bash"}]}]}
{"id": "71598855_0", "jobs": [{"name": "detect_outage", "steps": [{"type": "shell_cmd", "cmd": "# Use a monitoring tool like UptimeRobot to check service status\n# If service is down, trigger the workflow using a webhook to the below URL\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peter-evans/workflow-dispatch", "version": "v2", "shell": "bash"}]}]}
{"id": "71602577_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir new-page\ncp index.html new-page/\n# Additionally, you can copy other assets like CSS files, images, etc.\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "71606654_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "SamKirkland/Plesk-Deploy", "version": "v1.1", "shell": "bash"}]}]}
{"id": "71627982_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "perl6/setup-perl6", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "zef install Test::META", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "raku -e 'srand; say rand()'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71635866_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build ios --release --no-codesign", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "71642887_0", "jobs": [{"name": "update_config", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i 's|PLACEHOLDER_1|${{ secrets.VALUE_1 }}|g' src/assets/config.json\nsed -i 's|PLACEHOLDER_2|${{ secrets.VALUE_2 }}|g' src/assets/config.json\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add src/assets/config.json\ngit commit -m \"Update config variables\" || true\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "71693926_0", "jobs": [{"name": "update_commit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your update logic here\necho 'Update files by Jenkins pre-build job' >> updated_file.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Auto-update files triggered by Jenkins job\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "71741116_0", "jobs": [{"name": "wait", "steps": [{"type": "gh_action", "cmd": "", "name": "thecodingmachine/wait-action", "version": "v2", "shell": "bash"}]}]}
{"id": "71746019_0", "jobs": [{"name": "merge_branch", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout main && git merge branch-to-merge", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git merge branch-to-merge-again", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "71746877_0", "jobs": [{"name": "import-test-results", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test -- --json --outputFile=test-results.json", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "thepeshka/action-test-artifact", "version": "v1", "shell": "bash"}]}]}
{"id": "71765471_0", "jobs": [{"name": "renovate", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/setup-helm", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm repo add stable https://kubernetes-charts.storage.googleapis.com\nhelm repo update\nhelm upgrade my-helm-app stable/my-helm-chart --version {{MAJOR.MINOR.PATCH}}\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"github-actions[bot]@users.noreply.github.com\"\ngit config --local user.name \"github-actions[bot]\"\ngit add .\ngit commit -m \"chore: Update Helm chart version\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "7177245_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild MySSDTProject/MySSDTProject.sqlproj /p:Configuration=Release /t:Build\nmsbuild MySSDTProject/MySSDTProject.sqlproj /p:Configuration=Release /t:Publish\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "copy MySSDTProject/bin/Release/*.dacpac $(build.artifactstagingdirectory)\\MySSDTProject.dacpac\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add the SQL Server source control integration to CruiseControl.NET\n# You may need to modify the build scripts or configuration files accordingly\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/sql-action", "version": "v1", "shell": "bash"}]}]}
{"id": "7178977_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install\nnpm install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "selenium-standalone start", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to run Selenium tests using a testing framework like Codeception or PHPUnit with Selenium WebDriver\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add any additional Bash commands or scripts that need to be executed as part of CI\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71803941_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"RUBY_DEBUG=true\" >> $GITHUB_ENV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Debug Test Start\"\nruby -e 'puts ENV[\"RUBY_DEBUG\"]'\necho \"Debug Test End\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "7180724_0", "jobs": [{"name": "sync_directories", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"github-actions@github.com\" && git config --global user.name \"GitHub Actions\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clone --depth 1 --branch main https://github.com/username/target-repo.git temp-dir", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r temp-dir/path/to/directory/. path/to/destination", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Sync directories from target repository\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "71813362_0", "jobs": [{"name": "group_repos", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir repo1\nmkdir repo2\nmkdir repo3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clone --branch main --single-branch https://github.com/username/repo1.git repo1\ngit clone --branch main --single-branch https://github.com/username/repo2.git repo2\ngit clone --branch main --single-branch https://github.com/username/repo3.git repo3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git submodule add repo1 repo1\ngit submodule add repo2 repo2\ngit submodule add repo3 repo3\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit commit -m \"Group subrepositories into folders\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "71830645_0", "jobs": [{"name": "laravel-server-setup", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update && sudo apt-get install -y php7.4-cli && php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" && php composer-setup.php && php -r \"unlink('composer-setup.php');\" && sudo mv composer.phar /usr/local/bin/composer", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan key:generate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan migrate --seed", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan serve", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71839884_0", "jobs": [{"name": "add-github-ci", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo 'Your CI/CD configuration settings here' > .github-ci.yml", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .github-ci.yml", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit commit -m \"Add .github-ci.yml file\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "71843224_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-dev --optimize-autoloader", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require vendor/library", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add build commands specific to your extension\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to publish extension to TER using TER CLI or API\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Cleanup commands after publishing the extension\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71862187_1", "jobs": [{"name": "process-data", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Received data: $(cat data/myData.txt)\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71904047_2", "jobs": [{"name": "lint", "steps": []}, {"name": "test", "steps": []}]}
{"id": "71909053_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B package --file pom.xml", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}]}]}
{"id": "71923670_0", "jobs": [{"name": "sign_release", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "keytool -genkey -v -keystore keystore.jks -keyalg RSA -keysize 2048 -validity 10000 -alias my-key -storepass yourstorepass -keypass yourkeypass -dname \"CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "r0adkll/sign-android-release", "version": "v1", "shell": "bash"}]}]}
{"id": "71924098_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build apk\nflutter build ios\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71944650_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/github-actions", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"DEV_VAR: $DEV_VAR\"\necho \"STAGING_VAR: $STAGING_VAR\"\necho \"PROD_VAR: $PROD_VAR\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71945779_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "joshdvir/setup-oracle-cloud-cli", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "oci artifacts repository list --compartment-id ${{ secrets.ORACLE_COMPARTMENT_ID }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your custom commands to manage the Oracle Cloud repositories here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "71964289_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build path/to/your/solution.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test path/to/your/test/project.csproj", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish path/to/your/project.csproj -c Release -o publish/", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "71975028_0", "jobs": [{"name": "build", "steps": [{"type": "shell_cmd", "cmd": "echo \"::set-output name=status::success\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ktosiek/github-status-update-action", "version": "v2", "shell": "bash"}]}]}
{"id": "72007666_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run test -- --coverage", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "codecov/codecov-action", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "coverallsapp/github-action", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "env0/pull-request-commenter", "version": "v1", "shell": "bash"}]}]}
{"id": "72018121_0", "jobs": [{"name": "unlock-src-folder", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chmod -R 777 src\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add src\ngit commit -m \"Unlock src folder\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "7203138_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"APP1_URL=https://www.example.com/app1\" >> $GITHUB_ENV\necho \"APP2_URL=https://www.example.com/app2\" >> $GITHUB_ENV\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Direct Links to Deployed Web Applications:\"\necho \"App1: ${{ env.APP1_URL }}\"\necho \"App2: ${{ env.APP2_URL }}\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peter-evans/create-or-update-status", "version": "v1", "shell": "bash"}]}]}
{"id": "72033107_0", "jobs": [{"name": "swiftlint", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-swift", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clone https://github.com/realm/SwiftLint.git\ncd SwiftLint\nswift build -c release --static-swift-stdlib\nmv .build/release/swiftlint /usr/local/bin/\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "swiftlint", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72054128_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "game-ci/setup-unity", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "unity -batchmode -quit -projectPath . -executeMethod BuildScript.PerformBuild\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "72060174_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir temp\ncp -r path/to/source/folder/ temp  # Replace 'path/to/source/folder/' with the actual path\ncp -r temp/* path/to/destination/folder  # Replace 'path/to/destination/folder/' with the desired destination path\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add path/to/destination/folder\ngit commit -m \"Copy specific files/folders\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72067650_0", "jobs": [{"name": "setup", "steps": [{"type": "gh_action", "cmd": "", "name": "docker/setup-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker --version", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72071362_0", "jobs": [{"name": "linux", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72075255_0", "jobs": [{"name": "send-email", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "\u951f\u7d04hivammathur/setup-groovy", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "groovy SendEmail.groovy\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72087255_0", "jobs": [{"name": "convert_account_to_organization", "steps": [{"type": "gh_action", "cmd": "", "name": "gr2m/action-rename-github-user-to-org", "version": "v1", "shell": "bash"}]}]}
{"id": "72091993_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install -g @microsoft/botframework-cli", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Azure/webapps-deploy", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer clean", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72092179_0", "jobs": [{"name": "package_app", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "zip -r app.zip app", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "pthree/setup-inno-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ISCC /Ooutput /F\"MyAppSetupInstaller.exe\" \"path/to/your/script.iss\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72125592_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec fastlane match development", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec fastlane build_and_archive", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec fastlane deploy", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72128581_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -NV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane lane_name disable_increment_build_number:true", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72192508_0", "jobs": [{"name": "contentful-webhook", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/http-request", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your action script here to be executed when webhook is verified\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72192563_0", "jobs": [{"name": "approval-check", "steps": [{"type": "shell_cmd", "cmd": "if [ ${{ github.event.pull_request.user.login }} == ${{ github.event.repository.owner.login }} ]; then\n  echo \"::set-output name=approved::true\"\nelse\n  echo \"::set-output name=approved::false\"\nfi\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "OctoLinker/checks/action", "version": "v2", "shell": "bash"}]}]}
{"id": "72207701_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o ./publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "72212563_0", "jobs": [{"name": "add_image_tags", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/setup-buildx-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build . -t gcr.io/$PROJECT_ID/image:latest\ndocker push gcr.io/$PROJECT_ID/image:latest\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google/artifactregistry", "version": "0.3.0", "shell": "bash"}]}]}
{"id": "72212714_0", "jobs": [{"name": "track-changes", "steps": [{"type": "gh_action", "cmd": "", "name": "perforce/p4-cli-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "p4 -c ${P4_CLIENT} -u ${P4_USER} -P ${P4_PASS} workspace -o > workspace.conf\np4 -c ${P4_CLIENT} -u ${P4_USER} -P ${P4_PASS} sync -k //...\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "changed_files=\"$(p4 -c ${P4_CLIENT} -u ${P4_USER} -P ${P4_PASS} opened)\"\necho \"$changed_files\" > changed_files.log\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}]}]}
{"id": "72223748_0", "jobs": [{"name": "remerge", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout main\ngit merge --no-ff ${{ github.ref }}\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "72227903_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec fastlane your_fastlane_lane_here", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72251512_0", "jobs": [{"name": "store_configs", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -R path/to/microservices-configurations ./configurations\ncp path/to/docker-compose.yml ./configurations\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "72265271_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install --repo-update", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace ios/MyApp.xcworkspace -scheme MyApp -destination 'generic/platform=iOS' clean archive -archivePath $PWD/build/MyApp\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath $PWD/build/MyApp.xcarchive -exportOptionsPlist exportOptions.plist -exportPath $PWD/build\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo gem install fastlane -NV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane pilot distribute -i build/*.ipa --app_identifier \"com.myapp.identifier\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72271696_0", "jobs": [{"name": "kubectl", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.2.1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud container clusters get-credentials CLUSTER_NAME --zone ZONE --project PROJECT_ID\nkubectl config current-context\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl get pods", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72286943_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": ".github/workflows/reusable_workflow.yml", "version": null, "shell": "bash"}]}]}
{"id": "72324549_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rtCamp/action-slack-notify", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rtCamp/action-slack-notify", "version": "master", "shell": "bash"}]}]}
{"id": "72360076_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec jekyll build\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "72367353_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shogo82148/setup-perl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cpanm --notest My::Module", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "prove -r t", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72367427_0", "jobs": [{"name": "change-username", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.name \"Your New Username\"\ngit config --local user.email \"your.email@example.com\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Change git username based on repository URL\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "72379443_0", "jobs": [{"name": "build-and-deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "saprykin/graalvm-installation-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "export GRAALVM_HOME=$RUNNER_WORKSPACE/graalvm/bin\ngu install native-image\nmvn package -Pnative\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Assuming you have configured your AWS credentials as GitHub secrets\naws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}\naws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n\n# Update the following commands with your deployment setup\n# e.g., copying built native image to AWS Graviton2 instance\n\n# Example commands:\naws s3 cp target/my-native-image ec2-user@aws-graviton2-instance:/path/to/native-image\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rm -rf $RUNNER_WORKSPACE/graalvm\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72379580_0", "jobs": [{"name": "commit_lfs_data", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git lfs install\ngit config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Replace the following command with the one that adds your Git LFS files\ngit add <git-lfs-files>\ngit commit -m \"Add Git LFS data programmatically\" --allow-empty\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "72381259_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build apk", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter analyze", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter ...", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72431905_0", "jobs": [{"name": "format_html", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install prettier", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npx prettier --write '**/*.html'", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit commit -am \"Format HTML files\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "72445812_0", "jobs": [{"name": "add-comment", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "softprops/action-comment", "version": "v1", "shell": "bash"}]}]}
{"id": "72448969_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpunit -c dev/tests/integration/phpunit.xml\nphp vendor/bin/phpunit -c dev/tests/static/testsuite/Magento/Test/Legacy/_files/phpunit.xml\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpcs --standard=phpcs.xml .\nphp vendor/bin/phpmd . text cleancode,codesize,controversial,design,naming,unusedcode\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72454182_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build YourConsoleApp.csproj --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish YourConsoleApp.csproj --configuration Release --output ./publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Azure/login", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "72455552_0", "jobs": [{"name": "build_and_publish", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build web", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "condio/codemagic-gh-action", "version": "v1", "shell": "bash"}]}]}
{"id": "72465647_0", "jobs": [{"name": "populate_template", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp .github/PULL_REQUEST_TEMPLATE.md .github/pull_request_template.md", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'Your Name'\ngit config --global user.email 'youremail@example.com'\ngit add .github/pull_request_template.md\ngit commit -m \"Populate pull request template\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "72489225_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build apk --release && flutter build ios --release", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-send-mail", "version": "v3", "shell": "bash"}]}]}
{"id": "72491412_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "qt-actions/setup-qt", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "qmake --version", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "qmake\nmake clean\nmake\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./path/to/your/test/executable", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72500861_0", "jobs": [{"name": "mirror", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "72544111_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p ~/Library/Developer/Xcode/DerivedData\ncp -R deriveddata_caches_folder_path ~/Library/Developer/Xcode/DerivedData\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourApp -configuration Release archive -archivePath $PWD/build/YourApp", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath $PWD/build/YourApp.xcarchive -exportPath $PWD/build/YourApp.ipa -exportOptionsPlist ExportOptions.plist", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "72554084_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dante-ev/latex-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pdflatex your-latex-file.tex", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "72561141_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nphp composer-setup.php\nphp -r \"unlink('composer-setup.php');\"\nmv composer.phar /usr/local/bin/composer\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72564660_0", "jobs": [{"name": "merge-conflict-resolution", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install -g mergify-automerge\nnpm install -g github-automations\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mergify-automerge --automerge --queue all\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "github-automations/pull-request", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "72565344_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker-compose up -d", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "digitalocean/action-doctl", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "doctl auth init -t ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "doctl compute droplet create --image docker-20-04 --region nyc1 --size s-1vcpu-1gb --ssh-keys ${{ secrets.SSH_KEY_ID }} --wait my-droplet-name", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ::set-output name=droplet_ip::$(doctl compute droplet list --output json | jq -r '.[].public_ip')", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ssh -oStrictHostKeyChecking=no root@$IP_ADDRESS 'cd /path/to/project && docker-compose up -d'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72574539_0", "jobs": [{"name": "create_pull_request", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b feature/your-branch-name", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Perform necessary changes to your code here\necho \"Hello, World!\" > hello.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Add new feature\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peter-evans/create-pull-request", "version": "v3", "shell": "bash"}]}]}
{"id": "72578646_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get --offline", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72593167_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Run your custom shell script or commands here\necho \"Building Android project...\"\n./gradlew assembleDebug\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v1", "shell": "bash"}]}]}
{"id": "72598831_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter drive --target=test_driver/app.dart --no-headless", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72599124_0", "jobs": [{"name": "pull-container", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-gcloud", "version": "v0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth configure-docker", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker pull gcr.io/${{ secrets.GOOGLE_PROJECT_ID }}/my-image:latest\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72602726_0", "jobs": [{"name": "fastlane_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane your_lane_name_without_build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72605878_0", "jobs": [{"name": "concat_json_files", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Define the input JSON files and the output file\nINPUT_FILES=(\"file1.json\" \"file2.json\")\nOUTPUT_FILE=\"concatenated.json\"\n\n# Concatenate JSON files into a single file\njq -s '.' \"${INPUT_FILES[@]}\" > $OUTPUT_FILE\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "72629709_0", "jobs": [{"name": "powershell", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./path/to/your/powershell/script.ps1\n", "name": "", "version": "", "shell": "pwsh"}]}]}
{"id": "72646802_0", "jobs": [{"name": "generate_csv", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install python3-pip\npip3 install pandas\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python3 generate_csv.py", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "yishilin14/box-upload-action", "version": "v1", "shell": "bash"}]}]}
{"id": "72703363_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "conda-incubator/setup-miniconda", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "conda --version", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72703920_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "my-actions/setup-services", "version": "v1", "shell": "bash"}]}, {"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "my-actions/setup-services", "version": "v1", "shell": "bash"}]}]}
{"id": "72705417_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python -m pip install --upgrade pip\npip install -r requirements.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "export GOOGLE_APPLICATION_CREDENTIALS=\"$HOME/secrets_key.json\"\n# Add your task/command here that uses Google Cloud SDK\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "7275932_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./start_selenium.sh", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec --require spec_helper --format documentation spec", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./stop_selenium.sh", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72769164_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v3", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "github/codeql-action/setup", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Here you can compile your C++ project\n# For example:\n# g++ -o myproject main.cpp\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Run CodeQL analysis here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72802010_0", "jobs": [{"name": "static-analysis", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpstan analyse", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/psalm", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72812524_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "engineerd/setup-kind", "version": "v0.6.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Your deployment script here\nkubectl apply -f deployment.yaml\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Your test script here\nkubectl get pods\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72820273_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd path/to/flutter/project && flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd path/to/flutter/project && flutter test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd path/to/flutter/project && flutter build apk", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72848656_0", "jobs": [{"name": "create_pr", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git checkout -b feature/your-branch-name", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Hello, World!\" > hello.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit config --global user.name 'Your Name'\ngit config --global user.email 'your-email@example.com'\ngit commit -m \"Add new feature\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git push origin feature/your-branch-name", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "repo-sync/pull-request-action", "version": "v2", "shell": "bash"}]}]}
{"id": "72858563_0", "jobs": [{"name": "tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan test\nphp artisan route:list --json | jq . > routes.json\nif ! jq empty routes.json; then\n  echo \"Invalid JSON in routes.json\"\n  exit 1\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72861241_0", "jobs": [{"name": "approve", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "philips-labs/approval-action", "version": "v2", "shell": "bash"}]}]}
{"id": "72864586_0", "jobs": [{"name": "powershell-job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-powershell", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": ".\\path\\to\\your\\script.ps1", "name": "", "version": "", "shell": "pwsh"}]}]}
{"id": "72869054_1", "jobs": [{"name": "job2", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Workflow 2 Job 2 is executed\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72872360_0", "jobs": [{"name": "sidekiq_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec sidekiq -r path/to/your/sidekiq/pro/initializer -c 5 -q default -q mailers", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72894926_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --prefer-dist --no-interaction --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install && npm run dev", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "72895405_0", "jobs": [{"name": "build", "steps": [{"type": "shell_cmd", "cmd": "echo \"::set-output name=contains_keyword::$(if [[ $(git log --format=%B -n 1 ${{ github.sha }}) == *'[SPECIFIC_KEYWORD]'* ]]; then echo \"true\"; else echo \"false\"; fi)\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": null, "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72899931_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "andstor/vercel-github-action", "version": "v4", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npx vercel --prod", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "heroku ps:scale web=0 --app YOUR_HEROKU_APP_NAME\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git push heroku main\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72906227_0", "jobs": [{"name": "compile", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to fetch and combine the .github-ci.yml files here\ncat repo1/.github-ci.yml repo2/.github-ci.yml repo3/.github-ci.yml > combined/.github-ci.yml\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "72910894_0", "jobs": [{"name": "automation", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your automation script or command here\n# For example, triggering a Cloud Function\ngcloud functions call YOUR_FUNCTION_NAME --region=YOUR_REGION\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72912826_0", "jobs": [{"name": "trigger-downstream-workflow", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peter-evans/workflow-run-action", "version": "v2", "shell": "bash"}]}]}
{"id": "72930816_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.4.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud builds submit --tag gcr.io/$GOOGLE_CLOUD_PROJECT/<YOUR_IMAGE_NAME> .\ngcloud beta run deploy <YOUR_CLOUD_RUN_SERVICE> --image gcr.io/$GOOGLE_CLOUD_PROJECT/<YOUR_IMAGE_NAME> --platform managed --region us-central1 --update-env-vars BRANCH=${GITHUB_REF/refs/heads/},COMMIT=${GITHUB_SHA}\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72934005_0", "jobs": [{"name": "lint_yaml", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sdesbure/yaml-linter-action", "version": "master", "shell": "bash"}]}]}
{"id": "72938350_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane your_fastlane_lane", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72943344_0", "jobs": [{"name": "build-and-deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "steebchen/kubectl", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.DOCKER_PASSWORD }}\" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin ${{ secrets.DOCKER_REGISTRY }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t ${{ secrets.DOCKER_REGISTRY }}/your-image-name .\ndocker push ${{ secrets.DOCKER_REGISTRY }}/your-image-name\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clone https://${{ secrets.KUBE_GITHUB_TOKEN }}@github.com/your-username/your-kubernetes-repo.git", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd your-kubernetes-repo\nkubectl set image deployment/your-deployment-name your-container-name=${{ secrets.DOCKER_REGISTRY }}/your-image-name\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"actions@github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Update deployment with new image\"\ngit push https://${{ secrets.KUBE_GITHUB_TOKEN }}@github.com/your-username/your-kubernetes-repo.git\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72953023_0", "jobs": [{"name": "create-issues", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Run your test command and capture the results\ntest_results=$(npm test)\necho \"::set-output name=test_results::$test_results\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peter-evans/create-issue-from-file", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ${{ steps.test_results.outputs.test_results }} | grep 'failed' > test_failures.txt", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72975133_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/setup-buildx-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.GITHUB_TOKEN }}\" | docker login -u ${{ github.actor }} --password-stdin docker.pkg.github.com", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build . -t docker.pkg.github.com/${{ github.repository }}/my-image:${{ github.run_id }}\ndocker push docker.pkg.github.com/${{ github.repository }}/my-image:${{ github.run_id }}\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud --quiet auth configure-docker", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl set image deployment/my-deployment my-container=docker.pkg.github.com/${{ github.repository }}/my-image:${{ github.run_id }} --record\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f path/to/k8s/deployment.yaml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72981710_0", "jobs": [{"name": "trigger_job", "steps": [{"type": "gh_action", "cmd": "", "name": "repo1_username/repo1_name", "version": "main", "shell": "bash"}]}]}
{"id": "72984003_0", "jobs": [{"name": "check-repo", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=files::$(ls -A)\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=empty::${{ steps.file-check.outputs.files == '' }}\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "decoapp/status-notify-action", "version": "v2", "shell": "bash"}]}]}
{"id": "72985028_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpmd src text phpmd.xml", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Process Complete\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "72990118_0", "jobs": [{"name": "commit_and_push", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"github-actions@[your-email].com\"\ngit config --global user.name \"GitHub Actions\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Auto-commit by GitHub Actions: $GITHUB_SHA\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "73006348_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mkloubert/vscode-extensions-setup", "version": "v0.1.2", "shell": "bash"}]}]}
{"id": "73016064_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/setup-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t my-docker-image .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run my-docker-image echo \"Hello from Docker container!\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73019459_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud builds submit --config=cloudbuild.yaml .", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73026597_0", "jobs": [{"name": "my_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": ".github/workflows/my-reusable-workflow.yml", "version": "v2", "shell": "bash"}]}]}
{"id": "73029940_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth configure-docker", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t gcr.io/${GOOGLE_CLOUD_PROJECT_ID}/your-image-name .\ndocker push gcr.io/${GOOGLE_CLOUD_PROJECT_ID}/your-image-name\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/cloud-run-deploy", "version": "master", "shell": "bash"}]}]}
{"id": "73037051_0", "jobs": [{"name": "terraform", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "hashicorp/setup-terraform", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "terraform init", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "terraform plan", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "terraform apply -auto-approve", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }} > key.json", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.2.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth activate-service-account --key-file=key.json", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud compute instances create instance-1 --zone=us-central1-a --machine-type=n1-standard-1 --image=debian-9-stretch-v20220914 --image-project=debian-cloud", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "rm -f key.json\nterraform destroy -auto-approve\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73038968_0", "jobs": [{"name": "create_issue", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "issue_list=$(curl -s -H \"Authorization: Bearer ${{secrets.GITHUB_TOKEN}}\" \\\n    \"https://api.github.com/repos/${{ github.repository }}/issues?labels=special-tag\" | jq -r '.[].title')\necho \"::set-output name=issues::$issue_list\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peter-evans/create-issue-from-file", "version": "v2", "shell": "bash"}]}]}
{"id": "73060473_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assemble\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "montudor/action-zip", "version": "v0.1.0", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "7307670_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chmod +x gradlew", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "reactivecircus/setup-android-emulator", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "$ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window:\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew clean assembleDebug androidTest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew createDebugCoverageReport", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "73083317_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-ansi --no-interaction --no-progress --no-suggest --optimize-autoloader", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan key:generate", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run production", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "chmod -R 777 storage bootstrap/cache", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easingthemes/ssh-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "73090161_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./mvnw clean package", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth configure-docker", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t $CONTAINER_REGISTRY/$PROJECT_ID/$APP_NAME:$IMAGE_TAG .\ndocker push $CONTAINER_REGISTRY/$PROJECT_ID/$APP_NAME:$IMAGE_TAG \n", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gke", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "helm upgrade --install your-release-name ./path/to/helm-chart --namespace your-namespace\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73110477_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/setup-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run -v /host/path:/container/path \\\nYOUR_IMAGE_NAME\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73113869_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Custom environment variable value: $CUSTOM_ENV_VAR\"\n# Add your deployment commands here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73133353_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter analyze", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter test", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install -g firebase-tools", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "firebase deploy --token ${{ secrets.FIREBASE_TOKEN }}", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73148521_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "find . -name \"*.swift\" | xargs sed -i '' '/#available(iOS 13.0, */d'\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourWorkspace.xcworkspace -scheme YourScheme -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 12' build\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73150226_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "main", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth activate-service-account --key-file=${{ secrets.GCP_SA_KEY }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud container clusters get-credentials <your-gke-cluster-name> --zone <zone-name>", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl version --client", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f path/to/your/deployment/config.yaml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73152035_0", "jobs": [{"name": "build_and_deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.3.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth configure-docker", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build -t gcr.io/<YOUR_GCP_PROJECT_ID>/<IMAGE_NAME>:latest .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker push gcr.io/<YOUR_GCP_PROJECT_ID>/<IMAGE_NAME>:latest\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud container clusters get-credentials <GKE_CLUSTER_NAME> --zone <GKE_CLUSTER_ZONE> --project <YOUR_GCP_PROJECT_ID>", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl set image deployment/<DEPLOYMENT_NAME> <CONTAINER_NAME>=gcr.io/<YOUR_GCP_PROJECT_ID>/<IMAGE_NAME>:latest", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73157677_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build connectedCheck", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73159362_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python3 -m pip install --upgrade pip\npip install ansible\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ansible-playbook playbook.yml | tee ansible_output.log\nDEBUG_MSG=$(grep -E \"\\[DEBUG\\]\" ansible_output.log || true)\necho \"::set-output name=debug_msg::$DEBUG_MSG\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "rtCamp/action-slack-notify", "version": "master", "shell": "bash"}]}]}
{"id": "73160092_0", "jobs": [{"name": "read-yaml-params", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::set-output name=data::$(cat params.yaml)\"", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ${{ steps.read-yaml.outputs.data }}", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Param1: ${{ steps.parse-yaml.outputs.data.param1 }}\"\necho \"Param2: ${{ steps.parse-yaml.outputs.data.param2 }}\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73164621_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-swift", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "swift build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "swift test --enable-code-coverage", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "codecov/codecov-action", "version": "v2", "shell": "bash"}]}]}
{"id": "73193138_0", "jobs": [{"name": "integration-test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/setup-kube", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "while ! kubectl get pod YOUR_POD_NAME -n YOUR_NAMESPACE | grep Running; do sleep 10; done\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Commands to run your integration tests\n# e.g., pytest, npm test, etc.\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Optional cleanup steps after integration tests\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73203174_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build apk --release", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "gradle-signer/signer", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "softprops/action-gh-release", "version": "v1", "shell": "bash"}]}]}
{"id": "73212108_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -NV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build apk --release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane deploy", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73226550_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "android/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p $RUNNER_TEMP/android/sdk/build-tools/33.0.0\ncp $ANDROID_SDK_ROOT/build-tools/30.0.3/dx $RUNNER_TEMP/android/sdk/build-tools/33.0.0/\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73252484_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i 's/^set :format.*/set :format, pretty/' config/deploy.rb", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec cap production deploy", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "7326167_0", "jobs": [{"name": "build_java", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn -B clean package", "name": "", "version": "", "shell": "bash"}]}, {"name": "build_cpp", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\nmake\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73291571_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth configure-docker\ndocker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-cloud-run-service .\ndocker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-cloud-run-service\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud run deploy my-cloud-run-service \\\n  --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-cloud-run-service \\\n  --platform managed \\\n  --region us-central1 \\\n  --service-account ${{ secrets.GCP_DEPLOY_SA_EMAIL }}\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker rmi gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-cloud-run-service\ngcloud auth configure-docker --remove\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73295861_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud functions deploy FUNCTION_NAME \\\n  --runtime=python39 \\\n  --trigger-http \\\n  --allow-unauthenticated\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73301248_0", "jobs": [{"name": "upload-test-report", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew clean test\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "atlassian/gajira-upload-steps4j/1.0.0", "version": null, "shell": "bash"}]}]}
{"id": "7330269_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "game-ci/setup-unity", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\nunity -quit -batchmode -projectPath . -executeMethod BuildScript.PerformBuild -logFile $(Build.SourcesDirectory)/unity.log\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clone <STUDIO_REPO_URL> studio-repo\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp -r builds/* studio-repo\ncd studio-repo\ngit add .\ngit commit -m \"Nightly build update\"\ngit push\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73302997_0", "jobs": [{"name": "pull-image", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/metadata-action", "version": "v3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ${{ secrets.PASSWORD }} | docker login ghcr.io -u ${{ secrets.USERNAME }} --password-stdin", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker pull ghcr.io/owner/image:tag", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73303238_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest --no-interaction", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp .env.example .env", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php spark key:generate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73303795_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "73318377_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build windows", "name": "", "version": "", "shell": "bash"}]}, {"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter drive --target=test_driver/app_test.dart --driver=test_driver/app_test.dart", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73339064_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "akhileshns/setup-android", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleDebug", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73343729_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nphp composer-setup.php\nphp -r \"unlink('composer-setup.php');\"\nmv composer.phar /usr/local/bin/composer\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer create-project johnpbloch/wordpress:5.7.1 wordpress", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp wordpress/wp-config-sample.php wordpress/wp-config.php", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd wordpress\nwp plugin install wordpress-importer --activate\nwp plugin install classic-editor --activate\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer require wp-coding-standards/wpcs", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker-compose up -d", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd wordpress\n./vendor/bin/phpunit\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd wordpress\n./vendor/bin/phpcs\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easingthemes/ssh-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "73343836_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build YourProjectName.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish YourProjectName.csproj --configuration Release --output ${{ github.workspace }}/publish", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "73344074_0", "jobs": [{"name": "enable-runners", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/runner-settings", "version": "v3", "shell": "bash"}]}]}
{"id": "73348279_0", "jobs": [{"name": "install-runner", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/setup-rust", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install build-essential\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add the installation steps for the Linux build runner using Rust here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "7335266_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mathworks/matlab-actions/setup", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "matlab -batch \"dependencies.install\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "matlab -batch \"runtests('tests/*.m')\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73355797_0", "jobs": [{"name": "sonarcloud_scan", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonarsource/sonarcloud-github-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "STATUS=$(curl -s \"https://sonarcloud.io/api/qualitygates/project_status?projectKey=${{ secrets.SONAR_PROJECT_KEY }}\" | jq -r .projectStatus.status)\nif [ \"$STATUS\" != \"OK\" ]; then\n  echo \"Quality Gate failed. Analysis status: $STATUS\"\n  exit 1\nelse\n  echo \"Quality Gate passed. Analysis status: $STATUS\"\nfi\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73368838_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "github/scripts-to-verify-commits", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "w9jds/firebase-action", "version": "v2", "shell": "bash"}]}]}
{"id": "73374931_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -N", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane deploy", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73385822_0", "jobs": [{"name": "deploy-preview", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "amondnet/vercel-action", "version": "v20", "shell": "bash"}]}, {"name": "deploy-prod", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "amondnet/vercel-action", "version": "v20", "shell": "bash"}]}]}
{"id": "73387215_0", "jobs": [{"name": "laravel-migration-test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan key:generate", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan migrate --database=sqlite", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "php artisan test", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73389697_0", "jobs": [{"name": "format-json", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get install jq -y", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cat input.json | jq -S . > output.json\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "73390754_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "DevFactory/apple-certificate-installer", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pod install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace Example.xcworkspace -scheme Example -destination 'generic/platform=iOS' clean archive -archivePath build.xcarchive", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath build.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcrun altool --upload-app -f build/Example.ipa -t ios -u ${{ secrets.APP_STORE_CONNECT_USERNAME }} -p ${{ secrets.APP_STORE_CONNECT_PASSWORD }}", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73398360_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pip install -r requirements.txt\n# Ensure SSH key is available for private Git repos\necho \"${{ secrets.PRIVATE_KEY_CONTENT }}\" > deploy_key\nchmod 600 deploy_key\neval \"$(ssh-agent -s)\"\nssh-add deploy_key\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "73405015_0", "jobs": [{"name": "build_and_deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec jekyll build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "73405270_0", "jobs": [{"name": "lock_repository", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}, {"type": "shell_cmd", "cmd": "MESSAGE=\"\u9983\u6540 This repository is currently being migrated. It is locked while the migration is in progress. Please refrain from making changes until the migration is complete.\"\necho $MESSAGE\n# You can also send notifications to collaborators or other stakeholders\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73426748_0", "jobs": [{"name": "update_env_file", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"KEY=NEW_VALUE\" >> .env\n# You can add more lines here to modify other variables in the .env file\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\n\ngit add .\ngit commit -m \"Update .env file\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "73429307_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73447535_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-swift", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install fastlane -NV\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "fastlane build\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "73459170_0", "jobs": [{"name": "bump_version", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm version patch", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"ci-cd@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add package.json\ngit commit -m \"Bump package.json version [skip ci]\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "73468240_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake db:create\nbundle exec rake db:schema:load\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rubocop", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73470592_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker buildx create --use", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker buildx build --progress plain --platform linux/amd64,linux/arm64 -t your-docker-username/your-image-name .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"$DOCKER_PASSWORD\" | docker login -u \"$DOCKER_USERNAME\" --password-stdin", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker push your-docker-username/your-image-name", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "digitalocean/action-doctl", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f deployment.yaml", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.5.3/cert-manager.yaml", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -f your-certificate.yaml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73474949_0", "jobs": [{"name": "install_ipa", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "montudor/action-get-release-asset", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Install IPA file on your device using whichever method is suitable for your setup\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73475724_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mstuttgart/setup-msvc", "version": "v2.1.1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=Release /m /p:Platform=x64 /t:Rebuild", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "test.exe", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73476268_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Your build commands here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Not a member of the organization, skipping the workflow\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73477226_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "docker/setup-buildx-action", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/login", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker build . -t myapp\ndocker tag myapp <azure-registry-url>/myapp\ndocker push <azure-registry-url>/myapp\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "amannandv/change-file-content-action", "version": "v2", "shell": "bash"}]}]}
{"id": "73483825_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build web", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "73502619_0", "jobs": [{"name": "lint", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "andthensome/lint-action", "version": "v1", "shell": "bash"}]}]}
{"id": "73532897_0", "jobs": [{"name": "delete_log", "steps": [{"type": "gh_action", "cmd": "", "name": "gr2m/delete-file-github-action", "version": "v1.0.1", "shell": "bash"}]}]}
{"id": "73533863_0", "jobs": [{"name": "sync-templates", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dawidd6/action-kubectl", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kubectl apply -n <ARGO_NAMESPACE> -f path/to/workflow-templates\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73536135_0", "jobs": [{"name": "tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "KoderHQ/sqhub-action", "version": "v1", "shell": "bash"}]}]}
{"id": "73556249_0", "jobs": [{"name": "request-approvers", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-approval", "version": "v2", "shell": "bash"}]}]}
{"id": "73558833_0", "jobs": [{"name": "update-golang-job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "cashapp/make", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ansible-playbook -i inventory/hosts playbook.yml\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73568162_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/login", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "73568306_0", "jobs": [{"name": "convertToTemplate", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Create a new repository to store the template\nTOKEN=\"${{ secrets.PAT }}\" # Personal Access Token with repo scope\nREPO_NAME=\"template-repo\"\n\ncurl -s -H \"Authorization: token $TOKEN\" -d '{\"name\":\"$REPO_NAME\"}' https://api.github.com/user/repos\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cd path/to/static/site\ncp -r * $GITHUB_WORKSPACE\n\nmv $GITHUB_WORKSPACE ../template-repo\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "73596825_0", "jobs": [{"name": "disable_pipeline", "steps": [{"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}]}]}
{"id": "73626276_0", "jobs": [{"name": "copy_to_cloud_function", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Generated content\" > outputfile.txt", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GoogleCloudPlatform/github-actions/setup-gcloud", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud functions deploy <YOUR_FUNCTION_NAME> --trigger-http --source=./downloaded-file --runtime nodejs14 --entry-point=yourFunction\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "7363824_0", "jobs": [{"name": "version_control", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"your-email@example.com\"\ngit config --global user.name \"Your Name\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git add .\ngit commit -m \"Automated commit message - $GITHUB_SHA\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions-hub/docker-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "73643143_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleRelease", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "publish", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "google-github-actions/setup-gcloud", "version": "v0.3.0", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gcloud auth activate-service-account ${{ secrets.SERVICE_ACCOUNT_EMAIL }} --key-file=service-account.json\ngcloud auth configure-docker\ngcloud app create --region=us-central\ndocker pull gcr.io/google-samples/hello-app:1.0\ndocker tag gcr.io/google-samples/hello-app:1.0 gcr.io/${PROJECT_ID}/hello-app:1.0\ndocker push gcr.io/${PROJECT_ID}/hello-app:1.0\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73651574_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p build/logs\nvendor/bin/phpunit --coverage-clover build/logs/clover.xml\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "73651674_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet restore", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build --configuration Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet pack --configuration Release --no-build -o ./artifacts", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "NuGet/ [email protected]", "version": null, "shell": "bash"}]}]}
{"id": "73659356_0", "jobs": [{"name": "embed_figma", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "GregorMartynus/figma-export-action", "version": "v1", "shell": "bash"}]}]}
{"id": "73665972_0", "jobs": [{"name": "trigger_workflow_call", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": ".github/workflows/called.yml", "version": null, "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "shell_cmd", "cmd": "echo \"Using environment variable MY_SECRET: $MY_SECRET\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73689959_1", "jobs": [{"name": "my_job", "steps": [{"type": "gh_action", "cmd": "", "name": ".github/workflows/main.yml", "version": null, "shell": "bash"}]}]}
{"id": "73691926_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python -m pip install --upgrade pip\npip install -r requirements.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "73704477_0", "jobs": [{"name": "track_file_renaming", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mv path/to/original/file.txt path/to/alternative/file.txt", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"github-actions[bot]@users.noreply.github.com\"\ngit config --global user.name \"GitHub Actions\"\ngit add path/to/alternative/file.txt\ngit commit -m \"Renamed file.txt to alternative name\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "73705835_0", "jobs": [{"name": "migrate_artifacts", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "SoftpediaDev/github-action-release", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add script to download artifacts from the DevOps platform\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add script to upload artifacts to GitHub Enterprise\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "SoftpediaDev/github-action-release", "version": "v1", "shell": "bash"}]}]}
{"id": "73713504_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "marvinpinto/action-automatic-approve", "version": "v1", "shell": "bash"}]}]}
{"id": "73715244_0", "jobs": [{"name": "ngrok_tunnel", "steps": [{"type": "gh_action", "cmd": "", "name": "w8r/ngrok-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ngrok http 3000", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73715344_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "org/private-repo/.github/workflows/reusable-action.yml", "version": "master", "shell": "bash"}]}]}
{"id": "73723617_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "BAZEL_VERSION=${{ matrix.bazel_version }}\ncurl -fLO https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-darwin_arm64 && chmod +x bazel-$BAZEL_VERSION-darwin_arm64 && sudo mv bazel-$BAZEL_VERSION-darwin_arm64 /usr/local/bin/bazel\nbazel version\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Replace the commands with the actual commands to build your iOS project using Bazel\nbazel build //path/to/your:ios_target\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73744666_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/login", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "github/k8s-deploy", "version": "v4", "shell": "bash"}]}]}
{"id": "73745571_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "xu-cheng/latex-action", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "73756056_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "subosito/flutter-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter pub get", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "flutter build apk", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "keytool -genkey -v -keystore my-release-key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias my-key-alias\njarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore my-release-key.jks app-release.apk my-key-alias\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "73760285_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v3", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourScheme -configuration Release -archivePath build/YourApp", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath build/YourApp.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "peaceiris/actions-gh-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "73778209_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Secret Key: $SECRET_KEY\"\n# Use the secret key in your workflow\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73802419_0", "jobs": [{"name": "create_release", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ::set-output name=new_version::$(node -e \"const pkg = require('./package.json'); const semver = require('semver'); pkg.version = semver.inc(pkg.version, 'patch'); require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2)); console.log(pkg.version)\")", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add package.json\ngit commit -m \"Bump version to ${{ steps.inc_version.outputs.new_version }}\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "softprops/action-gh-release", "version": "v1", "shell": "bash"}]}]}
{"id": "73813624_0", "jobs": [{"name": "trigger_workflow_and_get_artifacts", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "octokit/request-action", "version": "v2.x", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "73820164_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"${{ secrets.YOUR_TOKEN }}\" > ~/token\nchmod 600 ~/token\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "Azure/k8s-deploy", "version": "v1", "shell": "bash"}]}]}
{"id": "73836171_0", "jobs": [{"name": "retrieve_db_dump", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-docker", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker start your_container_name", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker exec your_container_name sh -c 'mysqldump -u your_db_username -pyour_db_password your_database_name > db_dump.sql'", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "73836560_0", "jobs": [{"name": "check-composer", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"export COMPOSER_HOME=\\$HOME/.composer\" >> $GITHUB_ENV", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-dev --dry-run", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"::unset-env name=COMPOSER_HOME::\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "73837267_0", "jobs": [{"name": "dependabot", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "dependabot/dependabot-core", "version": "v2", "shell": "bash"}]}]}
{"id": "7476202_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew test", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/cache", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleRelease", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./your_signing_script.sh", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "r0adkll/upload-google-play", "version": "v1", "shell": "bash"}]}]}
{"id": "7499518_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nyarn install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake db:create db:migrate RAILS_ENV=test\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rspec\nbundle exec rubocop\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "codecov/codecov-action", "version": "v2", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "shell_cmd", "cmd": "echo \"Deploy to staging server\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "7523375_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": null, "shell": "bash"}]}]}
{"id": "7532341_0", "jobs": [{"name": "delete_files", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git rm path/to/file1 path/to/file2\ngit commit -m \"Remove unwanted files\" --author=\"GitHub Actions <actions@github.com>\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "7534137_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python -m pip install --upgrade pip\npip install buildbot[bundle]\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your customized functions to buildbot here\necho \"def my_custom_function():\\n    print('Hello, Buildbot!')\" >> /path/to/buildbot/custom_functions.py\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add /path/to/buildbot/custom_functions.py\ngit commit -m \"Add customized functions to Buildbot\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "v2", "shell": "bash"}]}]}
{"id": "7570132_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild archive -scheme YourAppScheme -configuration ${{ matrix.configuration }} -archivePath ${{ github.workspace }}/YourApp.xcarchive", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -exportArchive -archivePath ${{ github.workspace }}/YourApp.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath ${{ github.workspace }}/builds/${{ matrix.configuration }}", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "7653129_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer global require phing/phing", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "~/.composer/vendor/bin/phing deploy", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "7661324_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' build test\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "7671893_0", "jobs": [{"name": "performance-test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bin/rails server -e test -d\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ab -n 100 -c 10 http://localhost:3000/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "kill -9 $(lsof -ti:3000)", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "7725781_0", "jobs": [{"name": "update_capistrano_config", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i 's|OLD_REPO_URL|NEW_REPO_URL|g' /path/to/your/capistrano/config/file\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"actions@github.com\"\ngit config --local user.name \"GitHub Actions\"\ngit add .\ngit commit -m \"Update Capistrano config with new repo URL\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "7747587_0", "jobs": [{"name": "sonarqube", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn sonar:sonar -Dsonar.projectKey=<your_project_key> -Dsonar.organization=<your_organization_key> -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$TOKEN", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean package cobertura:cobertura", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "brunocleite/sonarqube-action", "version": "master", "shell": "bash"}]}]}
{"id": "7783891_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn package", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shockwavelabs/tomcat-deploy", "version": "1.3", "shell": "bash"}]}]}
{"id": "7786735_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install --no-progress --no-suggest", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phing", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "find . -name \"*.php\" -exec php -l {} \\;", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ssh user@server \"cd /path/to/project && git pull origin master && composer install --no-dev --optimize-autoloader\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "7789837_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "nathanridley/actions/setup-nant", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./nant/bin/nant -buildfile:build.xml deploy-production", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "7903160_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker run --rm --name selenium -p 4444:4444 selenium/standalone-chrome", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phpunit --verbose --colors --stderr --testsuite Selenium", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "docker stop selenium", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "80120_0", "jobs": [{"name": "cruisecontrolnet", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your CruiseControl.NET build command here\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "teamfoundationbuild", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your Team Foundation Build command here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "8034630_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "brew install cocoapods\npod install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourScheme -configuration Release clean build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "8041785_0", "jobs": [{"name": "test", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourWorkspace.xcworkspace -scheme YourScheme -configuration Debug -destination 'platform=iOS Simulator,name=iPhone 11' | xcpretty\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "TEST_LOG=$(find . -name \"*.xcresult\" | xargs xcparse list-tests | grep \"testName\" | sed 's/.* - //' | sed 's/\"//' | sed 's/\"$//')\necho \"$TEST_LOG\" > test_description.txt\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "8073496_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Replace this with your actual test command (e.g., RSpec)\nbundle exec rspec\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to deploy to Hudson\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "8084991_0", "jobs": [{"name": "replace_framework", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python -m pip install --upgrade pip\npip install <required packages>\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add your code here to replace staf/stax framework with your desired solution\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Replace staf/stax framework\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "8095444_0", "jobs": [{"name": "phpunit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit --log-junit test-results/junit.xml", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "8144945_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msft-ssdt-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\Common7\\IDE\\devenv.com\" /Build \"Debug|ProjectName\" \"Path\\To\\Your\\SSIS\\Project.dtproj\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to test or validate your SSIS package here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "8159971_0", "jobs": [{"name": "query-db", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-python", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "python -m pip install --upgrade pip\npip install requests\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Replace the following with your actual code to query the DB\npython query_db.py\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"Store query results to a file\"", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "stefanzweifel/git-auto-commit-action", "version": "v4", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "8206359_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mskaff/actions/setup-msvc", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\ncmake --build . --config Release\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet build MyCSharpProject.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet test MyCSharpProject.sln", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "8215422_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/setup-msbuild", "version": "v1.0.1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "psake/psake-setup-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "psake build.ps1 -properties @{ 'msbuildPath' = \"${env:MSBUILD_PATH}\" }", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "82169_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "borales/actions nant", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nant build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "8298253_0", "jobs": [{"name": "ant_exec", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "fjudith/ant-action", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Get list of modified files\ngit diff --name-only origin/main HEAD | grep \\.java$ > modified_files.txt\n\n# Run Ant exec task for modified files\nwhile IFS= read -r file; do\n  ant -f build.xml -DfileToExecute=\"$file\"\ndone < modified_files.txt\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "8313531_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "qta/actions/setup", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt-get update\nsudo apt-get install -y build-essential qtbase5-dev\n# Additional dependencies can be added here\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "qmake project.pro", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "make", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "make test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir -p artifacts\ncp <path_to_artifact_files> artifacts/\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "8351278_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -workspace YourApp.xcworkspace -scheme YourAppScheme -destination 'platform=iOS Simulator,OS=15.0,name=iPhone 12'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "8423011_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "setup-msbuild", "version": null, "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=Release", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/iis-actions/setup-iis", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Your deployment script here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "8456032_0", "jobs": [{"name": "setup", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "wget https://www.apache.org/dyn/mirrors/mirrors.cgi?action=download&filename=netbeans/netbeans/12.5/Apache-NetBeans-12.5-bin-linux-x64.sh\nchmod +x Apache-NetBeans-12.5-bin-linux-x64.sh\n./Apache-NetBeans-12.5-bin-linux-x64.sh --silent\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.name 'Your Name'\ngit config --global user.email 'youremail@example.com'\ngit add .\ngit commit -m \"Add NetBeans IDE setup\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "8482186_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-msaccess", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands here to build the Access 2007 database\n# For example, you can run an Access script or use a tool like MSBuild or VBA\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "8534009_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -workspace YourApp.xcworkspace -scheme YourScheme -destination 'platform=iOS Simulator,name=iPhone 12' build", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "8534464_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "r0adkll/setup-android-sdk", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./gradlew assembleDebug", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "8645579_0", "jobs": [{"name": "generate_version", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ::set-output name=VERSION::$(node get_latest_version.js)", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo ::set-output name=VERSION::$(node update_version.js ${{ steps.get_version.outputs.VERSION }})", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit commit -am \"Bump version to ${{ steps.update_version.outputs.VERSION }}\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "870469_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\ncmake --build .\nctest\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "8746855_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "microsoft/iis-web-app-management-action", "version": "main", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add any build steps required here\n# Zip the application files\nCompress-Archive -Path \"*\" -DestinationPath \"YourClassicASPApp.zip\" -Force\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "appleboy/scp-action", "version": "master", "shell": "bash"}, {"type": "shell_cmd", "cmd": "Remove-Item \"YourClassicASPApp.zip\"", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "8755349_0", "jobs": [{"name": "phpunit", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit --coverage-clover=coverage.xml", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "8761096_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=Release", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "sonar-source/sonarqube-scan-action", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "8852453_0", "jobs": [{"name": "install_gem", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install rails -v 'specific_revision_from_branch'", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "8942980_0", "jobs": [{"name": "functional-tests", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-nuget", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nuget restore YourSolution.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=Release YourSolution.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to run your functional tests in TFS 2010 here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "9002638_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm run build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "9038328_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "SubCritical/actionscript/flex-sdk", "version": "0.9.9", "shell": "bash"}, {"type": "shell_cmd", "cmd": "npm install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ant build", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands to publish test results or coverage reports\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "9049066_0", "jobs": [{"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "curl -s -O https://pear.php.net/install-pear-nozlib.phar\nphp install-pear-nozlib.phar\nrm install-pear-nozlib.phar\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pear config-set auto_discover 1", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "pear channel-discover pear.phing.info\npear install phing/phing\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "phing deploy", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "91181_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands here to start the cruise control process\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Add commands here to build and obfuscate the code\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.name \"GitHub Actions\"\ngit config user.email \"<your-email>\"\ngit add .\ngit commit -m \"Obfuscate code changes\"\ngit push\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "some-deployment-action", "version": null, "shell": "bash"}]}]}
{"id": "9168764_0", "jobs": [{"name": "push", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --global user.email \"<YOUR_EMAIL>\"\ngit config --global user.name \"<YOUR_USERNAME>\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "echo \"New commit\" >> newfile.txt\ngit add .\ngit commit -m \"Add newfile.txt\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "9183879_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-node", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\nnpm install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rails db:migrate RAILS_ENV=test\nbundle exec rspec\n", "name": "", "version": "", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "webfactory/ssh-agent", "version": "v0.5.3", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ssh $SSH_USERNAME@$STAGING_SERVER_IP 'cd /path/to/ror/app && git pull origin main && bundle install && bundle exec rails db:migrate RAILS_ENV=staging && restart_ror_app_command'\n# Replace $SSH_USERNAME, $STAGING_SERVER_IP, /path/to/ror/app, restart_ror_app_command with actual values\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "9184864_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "brew update\nbrew install swiftlint\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -scheme YourAppScheme -destination 'platform=iOS Simulator,OS=latest,name=iPhone 12'\nswiftlint\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}, {"name": "deploy", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/download-artifact", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "922325_0", "jobs": [{"name": "rake", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "9276236_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild -scheme YourSchemeName -project YourProjectName.xcodeproj build", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config --local user.email \"action@github.com\"\ngit config --local user.name \"GitHub Action\"\ngit add .\ngit commit -m \"Auto commit by GitHub Actions\"\ngit push origin main\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "9280716_0", "jobs": [{"name": "phpcs", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./vendor/bin/phpcs --standard=PSR2 --ignore=vendor --ignore=*/tests/* --runtime-set ignore_warnings_on_exit 1 -n .", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "9300500_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn clean install -DskipTests", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "julianghionoiu/setup-chromedriver", "version": "v1", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "julianghionoiu/setup-chrome", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn test", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mvn surefire-report:report", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/upload-artifact", "version": "v2", "shell": "bash"}]}]}
{"id": "9379359_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "mstorsjo/setup-msvc", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild YourSolution.sln /p:Configuration=Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "# Run your test commands here, for example:\n# YourTestExecutable.exe\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "9393314_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ruby/setup-ruby", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "gem install bundler\nbundle install\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "bundle exec rake your_build_task_here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "941537_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "shivammathur/setup-php", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "composer install", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpunit", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "find . -name \"*.php\" -print0 | xargs -0 -n1 php -l", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpcs --standard=PSR12 .", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "vendor/bin/phpmd . text phpmd.xml", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "9427763_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-cmake", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "mkdir build\ncd build\ncmake ..\ncmake --build .\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ctest --output-on-failure\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "crazy-max/ghaction-github-pages", "version": "v3", "shell": "bash"}]}]}
{"id": "944226_0", "jobs": [{"name": "test_gui", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-java", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "easimon/xvfb-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "export DISPLAY=:99", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sudo apt update\nsudo apt install -y x11-utils libxcomposite-dev libosmesa6-dev libxi-dev libxcursor1\n", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "export DISPLAY=:99\ngit clone https://github.com/example/test-project.git\ncd test-project\n# Add steps to build your Eclipse-based application and run the GUI tests here\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "9529284_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "martinlindhe/cmake-action", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "premake5 cmake", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cmake --build build --config Release", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "ctest --test-dir build --output-on-failure", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "9572821_0", "jobs": [{"name": "copy-web-config", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git clone <URL_TO_SEPARATE_REPO>", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "cp separate-repo/web.config main-project/", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "git config user.email \"github-actions[bot]@users.noreply.github.com\" \ngit config user.name \"GitHub Actions\"\ngit add main-project/web.config\ngit commit -m \"Copy web.config from separate repo\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "9582926_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-xcode", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "xcodebuild test -scheme YourAppScheme -destination 'platform=iOS Simulator,OS=latest,name=iPhone 12' | xcpretty", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "9590422_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "actions/setup-dotnet", "version": "v1.7", "shell": "bash"}, {"type": "shell_cmd", "cmd": "dotnet publish -c Release -o '${GITHUB_WORKSPACE}/publish'", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "azure/webapps-deploy", "version": "v2", "shell": "bash"}]}]}
{"id": "9638997_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "NuGet/setup-msbuild", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "nuget restore YourSolutionFile.sln", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "msbuild /p:Configuration=Release YourSolutionFile.sln", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "9891520_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "sed -i 's/<OldValue>/<NewValue>/g' YourProject.csproj\ngit add YourProject.csproj\ngit commit -m \"Modify .NET project file\"\n", "name": "", "version": "", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "ad-m/github-push-action", "version": "master", "shell": "bash"}]}]}
{"id": "9891562_0", "jobs": [{"name": "add_files_job", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "perforce/p4", "version": "v1", "shell": "bash"}, {"type": "shell_cmd", "cmd": "p4 add \"file'with'apostrophe.txt\"\np4 submit -d \"Adding file with apostrophe\"\n", "name": "", "version": "", "shell": "bash"}]}]}
{"id": "9905138_0", "jobs": [{"name": "build", "steps": [{"type": "gh_action", "cmd": "", "name": "actions/checkout", "version": "v2", "shell": "bash"}, {"type": "gh_action", "cmd": "", "name": "qmcgaw/qt-actions/setup", "version": "v2", "shell": "bash"}, {"type": "shell_cmd", "cmd": "qmake && make", "name": "", "version": "", "shell": "bash"}, {"type": "shell_cmd", "cmd": "./your_test_script.sh", "name": "", "version": "", "shell": "bash"}]}]}
